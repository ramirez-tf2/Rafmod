# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

projectName = 'sigsegv'

# smsdk_ext.cpp will be automatically added later
sourceFiles = []

sourceFiles += [
  'libs/udis86/libudis86/decode.c',
  'libs/udis86/libudis86/itab.c',
  'libs/udis86/libudis86/syn-att.c',
  'libs/udis86/libudis86/syn-intel.c',
  'libs/udis86/libudis86/syn.c',
  'libs/udis86/libudis86/udis86.c',
  
  'libs/lz4/lib/lz4.c',
  
  'libs/lodepng/lodepng.cpp',
]

sourceFiles += [
  'src/sm/MemoryUtils.cpp',
  
  'src/se2007/meshutils.cpp',
  
  'src/sdk2013/debugoverlay_shared.cpp',
]

sourceFiles += [
  'src/common.cpp',
  'src/concolor.cpp',
  'src/convar_restore.cpp',
  'src/extension.cpp',
  'src/factory.cpp',
  'src/gameconf.cpp',
  'src/library.cpp',
  'src/mod.cpp',
  'src/prop.cpp',
  'src/sizeof.cpp',
  'src/util_commands.cpp',
  'src/version.c',
  
  'src/disasm/disasm.cpp',
  
  'src/addr/addr.cpp',
  'src/addr/misc.cpp',
  'src/addr/prescan.cpp',
  'src/addr/standard.cpp',
  
  'src/mem/alloc.cpp',
  'src/mem/detour.cpp',
  'src/mem/extract.cpp',
  'src/mem/hook.cpp',
  'src/mem/patch.cpp',
  'src/mem/scan.cpp',
  
  'src/util/admin.cpp',
  'src/util/backtrace.cpp',
  'src/util/firehose_base.cpp',
  'src/util/firehose_recv.cpp',
  'src/util/firehose_send.cpp',
  'src/util/rtti.cpp',
  'src/util/socket_old.cpp',
  'src/util/vgui.cpp',
  
  'src/stub/__merge.cpp',
  
  'src/link/debugoverlay.cpp',
  'src/link/link.cpp',
  'src/link/nextbot1.cpp',
  'src/link/nextbot2.cpp',
  
  'src/re/nextbot.cpp',
  'src/re/path.cpp',
  
#  'src/entity/trigger_gravity_improved.cpp',
]

sourceFiles += [
  'src/mod/ai/engiebot_dispensers.cpp',
  'src/mod/ai/engiebot_nopush.cpp',
  'src/mod/ai/engiebot_wrangler.cpp',
  'src/mod/ai/focus_one_player.cpp',
  'src/mod/ai/giant_pyro.cpp',
  'src/mod/ai/improved_useitem.cpp',
  'src/mod/ai/nextboteventresponder_hooks.cpp',
  'src/mod/ai/prevent_postmortem_updates.cpp',
  'src/mod/ai/puppet.cpp',
  'src/mod/ai/rocketjump.cpp',
  'src/mod/ai/wrapassassin_altfire.cpp',
  'src/mod/ai/improved_targeting.cpp',
  
#  'src/mod/ai/mvm_defender_bots.cpp',
#  'src/mod/ai/mvm_defender_bots/actions/attack_tank.cpp',
#  'src/mod/ai/mvm_defender_bots/actions/collect_money.cpp',
#  'src/mod/ai/mvm_defender_bots/actions/defend_gate.cpp',
#  'src/mod/ai/mvm_defender_bots/actions/defender.cpp',
#  'src/mod/ai/mvm_defender_bots/actions/goto_upgrade_station.cpp',
#  'src/mod/ai/mvm_defender_bots/actions/mark_giant.cpp',
#  'src/mod/ai/mvm_defender_bots/actions/prewave.cpp',
#  'src/mod/ai/mvm_defender_bots/actions/purchase_upgrades.cpp',
#  'src/mod/ai/mvm_defender_bots/quirks/getlastknownarea.cpp',
#  'src/mod/ai/mvm_defender_bots/quirks/isbot.cpp',
#  'src/mod/ai/mvm_defender_bots/quirks/isbotoftype.cpp',
#  'src/mod/ai/mvm_defender_bots/quirks/isfakeclient.cpp',
#  'src/mod/ai/mvm_defender_bots/quirks/mannvsmachinemode.cpp',
#  'src/mod/ai/mvm_defender_bots/quirks/steamid.cpp',
#  'src/mod/ai/mvm_defender_bots/trackers.cpp',
#  'src/mod/ai/mvm_defender_bots/trackers/credits.cpp',
#  'src/mod/ai/mvm_defender_bots/trackers/flags.cpp',
#  'src/mod/ai/mvm_defender_bots/trackers/gates.cpp',
#  'src/mod/ai/mvm_defender_bots/trackers/tanks.cpp',
  
  'src/mod/anim/player_updatemodel_animstate_fix.cpp',
  'src/mod/anim/estimateabsvelocity_moveparent_fix.cpp',
  
  'src/mod/attr/blockbackstab_oldstyle.cpp',
  'src/mod/attr/customprojectilemodel_precache.cpp',
  'src/mod/attr/healonkill_overheal_melee.cpp',
  'src/mod/attr/undocumented.cpp',
  'src/mod/attr/custom_attributes.cpp',
  
  'src/mod/bot/demo_elevation_fix.cpp',
  'src/mod/bot/isspacetospawnhere_scale.cpp',
  'src/mod/bot/kart_locomotion.cpp',
  'src/mod/bot/kill_before_forcespec.cpp',
  'src/mod/bot/medieval_nonmelee.cpp',
  'src/mod/bot/multiclass_weapon.cpp',
  'src/mod/bot/runfast.cpp',
  'src/mod/bot/spy_medicheal.cpp',
  'src/mod/bot/spy_selectrandomreachableenemy.cpp',
  
  'src/mod/canteen/share_recall_canteen.cpp',
  
  'src/mod/cond/enhanced_cmds.cpp',
  'src/mod/cond/reprogrammed.cpp',
  
  'src/mod/credits/better_radius_collection.cpp',
#  'src/mod/credits/magnet_disable.cpp',
  'src/mod/credits/spawn_autocollect.cpp',
  
  'src/mod/demo/stringtable_limit.cpp',
  
  'src/mod/etc/crayairblast_convar_nocheat.cpp',
  'src/mod/etc/debug_mission_change_crash.cpp',
  'src/mod/etc/deflect_rocket_spew.cpp',
  'src/mod/etc/heat_seeking_rockets.cpp',
  'src/mod/etc/holiday_items_allow.cpp',
  'src/mod/etc/huntsman_damage_fix.cpp',
  'src/mod/etc/instant_scaling.cpp',
  'src/mod/etc/laserdot_fix.cpp',
  'src/mod/etc/limp_projectiles.cpp',
  'src/mod/etc/loose_cannon_damage_fix.cpp',
  'src/mod/etc/medicgun_beam_machinery.cpp',
  'src/mod/etc/melee_ignore_teammates.cpp',
  'src/mod/etc/mm_spoof.cpp',
  'src/mod/etc/nav_updateblocked.cpp',
  'src/mod/etc/override_move_speed.cpp',
  'src/mod/etc/player_bullet_boundingbox_fix.cpp',
  'src/mod/etc/ratelimit_exclude.cpp',
  'src/mod/etc/release_source_mutex.cpp',
  'src/mod/etc/suppress_nb_event_messages.cpp',
  'src/mod/etc/target_changegravity_improved.cpp',
  'src/mod/etc/weapon_mimic_teamnum.cpp',
  'src/mod/etc/trigger_filter_fix.cpp',
  'src/mod/etc/misc.cpp',
  
  'src/mod/mvm/changebotattributes_crash_fix.cpp',
  'src/mod/mvm/changeclass_anytime.cpp',
  'src/mod/mvm/chat_unrestrict.cpp',
  'src/mod/mvm/disposable_dispenser.cpp',
  'src/mod/mvm/disposable_sentry_health_upgrades.cpp',
  'src/mod/mvm/dominations.cpp',
  'src/mod/mvm/drop_weapons.cpp',
  'src/mod/mvm/explosive_headshot_on_everything.cpp',
  'src/mod/mvm/friendlyfire.cpp',
  'src/mod/mvm/gib_improvements.cpp',
  'src/mod/mvm/go_back_in_time.cpp',
  'src/mod/mvm/human_death_yells.cpp',
  'src/mod/mvm/jointeam_blue_allow.cpp',
  'src/mod/mvm/medigunshield_damage.cpp',
  'src/mod/mvm/no_halloween_souls.cpp',
  'src/mod/mvm/refund_exploit_fix.cpp',
  'src/mod/mvm/robosapper_override.cpp',
  'src/mod/mvm/robot_limit.cpp',
#  'src/mod/mvm/romevision_disable.cpp',
  'src/mod/mvm/sapper_allow_multiple_active.cpp',
  'src/mod/mvm/sentrybuster_enhancements.cpp',
  'src/mod/mvm/set_credit_team.cpp',
  'src/mod/mvm/upgradestation_regen_improved.cpp',
  'src/mod/mvm/weapon_antigrief.cpp',
  'src/mod/mvm/weapon_balancing.cpp',
  'src/mod/mvm/yer_unnerf.cpp',
  'src/mod/mvm/upgrade_disallow.cpp',
  'src/mod/mvm/red_robot_eye_glow.cpp',
  'src/mod/mvm/extended_upgrades.cpp',
  'src/mod/mvm/teleporter_aggro.cpp',
  'src/mod/mvm/refund_usermsg_overflow_fix.cpp',
  
  'src/mod/perf/flame_breakable_collision.cpp',
  'src/mod/perf/medigun_shield_damage_events.cpp',
  'src/mod/perf/medigun_shield_damage_interval.cpp',
  'src/mod/perf/mvm_load_popfile.cpp',
  'src/mod/perf/smokestack_fs_thrash.cpp',
  'src/mod/perf/hltv_optimize.cpp',
  'src/mod/perf/attributes_optimize.cpp',
  'src/mod/perf/squad_escort_optimize.cpp',
  
  'src/mod/pop/ecattr_extensions.cpp',
  'src/mod/pop/eventpopfile_improvements.cpp',
  'src/mod/pop/kv_conditional.cpp',
  'src/mod/pop/pointtemplate.cpp',
  'src/mod/pop/mission_extensions.cpp',
  'src/mod/pop/nested_complex_spawners.cpp',
  'src/mod/pop/popmgr_extensions.cpp',
  'src/mod/pop/tank_extensions.cpp',
  'src/mod/pop/tfbot_extensions.cpp',
  'src/mod/pop/wave_extensions.cpp',
  'src/mod/pop/wavespawn_extensions.cpp',
  'src/mod/pop/extattr/alwaysfireweaponalt.cpp',
  'src/mod/pop/extattr/ignoretargets.cpp',
  'src/mod/pop/extattr/parse.cpp',
  'src/mod/pop/extattr/targetstickies.cpp',
  
#  'src/mod/prof/attr_munge.cpp',
  'src/mod/prof/debug_overlay.cpp',
  'src/mod/prof/flame_breakable_collision.cpp',
  'src/mod/prof/frame_prof.cpp',
  'src/mod/prof/mvm_shield_events.cpp',
  'src/mod/prof/popfile_load.cpp',
  'src/mod/prof/tier2_renderutils.cpp',
  
  'src/mod/robot/building_stomp.cpp',
  'src/mod/robot/no_canteens.cpp',
  'src/mod/robot/spawn_protection_fix.cpp',
  'src/mod/robot/spawn_setname.cpp',
  'src/mod/robot/standable_heads.cpp',
  'src/mod/robot/ticklish.cpp',
  'src/mod/robot/underground_check_override.cpp',
  
  'src/mod/sniper/charge_uncap.cpp',
  'src/mod/sniper/head_uncap.cpp',
  
  'src/mod/sound/responses_suppress_giant_sentrybuster.cpp',
  'src/mod/sound/responses_suppress_medicbot_shield.cpp',
  'src/mod/sound/responses_unused_credits.cpp',
  'src/mod/sound/responses_unused_sapper.cpp',
  'src/mod/sound/tele_activate.cpp',
  
  'src/mod/tank/gunslinger_combo.cpp',
  
  'src/mod/util/add_item.cpp',
  'src/mod/util/client_cmds.cpp',
  'src/mod/util/confilter.cpp',
  'src/mod/util/console_recv.cpp',
  'src/mod/util/console_send.cpp',
  'src/mod/util/debugoverlay_font.cpp',
  'src/mod/util/debugoverlay_font_v2.cpp',
  'src/mod/util/debugoverlay_font_v3.cpp',
  'src/mod/util/download_manager.cpp',
  'src/mod/util/dtwarning_use_cvar.cpp',
  'src/mod/util/dtwatch.cpp',
  'src/mod/util/entity_overlays.cpp',
  'src/mod/util/heap_ksm.cpp',
#  'src/mod/util/jumboframes.cpp',
  'src/mod/util/listenserverhost.cpp',
  'src/mod/util/make_item.cpp',
#  'src/mod/util/netmsg_client.cpp',
#  'src/mod/util/netmsg_server.cpp',
  'src/mod/util/notify_recv.cpp',
  'src/mod/util/notify_send.cpp',
  'src/mod/util/overlay_enhancements.cpp',
  'src/mod/util/overlay_recv.cpp',
  'src/mod/util/overlay_send.cpp',
  'src/mod/util/override_vertex_limit.cpp',
  'src/mod/util/screenshot_png.cpp',
  'src/mod/util/search_paths.cpp',
  'src/mod/util/serialize_spew.cpp',
  'src/mod/util/vprof_recv.cpp',
  'src/mod/util/vprof_send.cpp',
#  'src/mod/util/vprof_remote.cpp',
  
  'src/mod/vgui/test.cpp',
]

if 'mods_debug' not in Extension.exclude:
  sourceFiles += [
    'src/mod/debug/airblastvuln.cpp',
    'src/mod/debug/backtrace.cpp',
    'src/mod/debug/better_ent_text.cpp',
    'src/mod/debug/bottle_break.cpp',
    'src/mod/debug/building_status.cpp',
    'src/mod/debug/changelevel.cpp',
    'src/mod/debug/client_desync.cpp',
    'src/mod/debug/client_player_track.cpp',
    'src/mod/debug/cond_stunned.cpp',
    'src/mod/debug/conds.cpp',
    'src/mod/debug/console_scramble_v1.cpp',
    'src/mod/debug/console_scramble_v2.cpp',
    'src/mod/debug/credit_magnet.cpp',
    'src/mod/debug/ctfbotproxy.cpp',
    'src/mod/debug/damage_overlay.cpp',
    'src/mod/debug/deflect_angle.cpp',
    'src/mod/debug/deflect_angle_v2.cpp',
    'src/mod/debug/draw_cphyscollide.cpp',
    'src/mod/debug/energyring_knockback.cpp',
    'src/mod/debug/feigndeath_ragdoll.cpp',
    'src/mod/debug/flamethrower_impulse_101.cpp',
    'src/mod/debug/flamethrower_misc.cpp',
    'src/mod/debug/flamethrower_mojo.cpp',
#    'src/mod/debug/func_nav_cost_tags.cpp',
    'src/mod/debug/getplayermaxspeed.cpp',
    'src/mod/debug/grenade_logger.cpp',
    'src/mod/debug/grenade_vphysics.cpp',
    'src/mod/debug/heal_debuff.cpp',
    'src/mod/debug/hurt_float.cpp',
    'src/mod/debug/insane_health.cpp',
    'src/mod/debug/interp_arrow.cpp',
    'src/mod/debug/ispotentiallytraversable_trace.cpp',
    'src/mod/debug/known_entities.cpp',
    'src/mod/debug/list_competitive_convars.cpp',
    'src/mod/debug/max_clients.cpp',
    'src/mod/debug/medigun_speed.cpp',
    'src/mod/debug/medigunshield_obstruction.cpp',
    'src/mod/debug/melee_trace.cpp',
    'src/mod/debug/minigun_state.cpp',
    'src/mod/debug/multidetour.cpp',
    'src/mod/debug/mvm_shield_fps.cpp',
    'src/mod/debug/nav_mesh.cpp',
    'src/mod/debug/nextbot.cpp',
    'src/mod/debug/nextbot_input.cpp',
    'src/mod/debug/noknockback.cpp',
    'src/mod/debug/onkilled_before_mainaction_start.cpp',
#    'src/mod/debug/override_step_sound.cpp',
    'src/mod/debug/owners.cpp',
    'src/mod/debug/parachute_warp.cpp',
    'src/mod/debug/penetration.cpp',
#    'src/mod/debug/popmgr_exploit.cpp',
#    'src/mod/debug/popmgr_multiparse.cpp',
    'src/mod/debug/proj_energy_ball.cpp',
    'src/mod/debug/projectile_motion.cpp',
    'src/mod/debug/quantum_duck.cpp',
    'src/mod/debug/rage.cpp',
    'src/mod/debug/revive_exploit.cpp',
    'src/mod/debug/revive_fast.cpp',
    'src/mod/debug/robot_pose_parameters.cpp',
    'src/mod/debug/scale_rate.cpp',
#    'src/mod/debug/scheme_load.cpp',
    'src/mod/debug/sentry_crouch_aim.cpp',
    'src/mod/debug/sentrybuster_mannhattan.cpp',
    'src/mod/debug/shortcircuit_rubberband.cpp',
    'src/mod/debug/sound_leak.cpp',
    'src/mod/debug/static_props.cpp',
    'src/mod/debug/sticky_detonation_delay.cpp',
    'src/mod/debug/sticky_detonation_order.cpp',
    'src/mod/debug/stringtables.cpp',
    'src/mod/debug/suicide_bomber.cpp',
    'src/mod/debug/tank_destroy_animation.cpp',
    'src/mod/debug/tele_autodetonate.cpp',
    'src/mod/debug/tele_sapper.cpp',
    'src/mod/debug/teleportwhere.cpp',
    'src/mod/debug/tf_nav_mesh_trace.cpp',
    'src/mod/debug/upgrade_tiers.cpp',
    'src/mod/debug/useitem_broken.cpp',
    'src/mod/debug/usermsg_overflow.cpp',
    'src/mod/debug/usermsg_overflow_v2.cpp',
    'src/mod/debug/vaccinator.cpp',
    'src/mod/debug/vprof_record.cpp',
  ]

if 'mods_visualize' not in Extension.exclude:
  sourceFiles += [
    'src/mod/visualize/airblast_box.cpp',
    'src/mod/visualize/airblast_cone.cpp',
    'src/mod/visualize/airblast_vectors.cpp',
    'src/mod/visualize/ammo_counts.cpp',
    'src/mod/visualize/backstab.cpp',
    'src/mod/visualize/blast_radius.cpp',
    'src/mod/visualize/conds.cpp',
    'src/mod/visualize/damage_force.cpp',
    'src/mod/visualize/dispenser_radius.cpp',
    'src/mod/visualize/engie_nests.cpp',
    'src/mod/visualize/explosive_headshot.cpp',
    'src/mod/visualize/flamethrower.cpp',
    'src/mod/visualize/hitboxes.cpp',
    'src/mod/visualize/huntsman.cpp',
    'src/mod/visualize/jar_radius.cpp',
    'src/mod/visualize/melee_range.cpp',
    'src/mod/visualize/minigun_deflect.cpp',
    'src/mod/visualize/projectile_speed.cpp',
    'src/mod/visualize/projectile_trail.cpp',
    'src/mod/visualize/sapper_range.cpp',
    'src/mod/visualize/taunt_attacks.cpp',
  ]

NO_MODS_WHATSOEVER = False
if NO_MODS_WHATSOEVER:
  sourceFiles = [file for file in sourceFiles if not file.startswith('src/mod/')]

###############
# Make sure to edit PackageScript, which copies your files to their appropriate locations
# Simple extensions do not need to modify past this point.

project = Extension.HL2Project(builder, projectName + '.ext')

if os.path.isfile(os.path.join(builder.currentSourcePath, 'src', 'sdk', 'smsdk_ext.cpp')):
  # Use the copy included in the project
  project.sources += [os.path.join('src', 'sdk', 'smsdk_ext.cpp')]
else:
  # Use the copy included with SM 1.6 and newer
  project.sources += [os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp')]

project.sources += sourceFiles

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]
  
  binary = Extension.HL2Config(project, projectName + '.ext.' + sdk.ext, sdk)

## build libstrcompat
#if builder.target.platform == 'linux':
#  _, libstrcompat = builder.AddCommand(
#    inputs  = [ os.path.join('libs', 'strcompat', file) for file in [ 'Makefile', 'strcompat.cpp', 'strcompat.h' ] ],
#    outputs = [ os.path.join('libs', 'libstrcompat', 'libstrcompat.so') ],
#    argv    = [ '/bin/sh', '-c', 'echo "libstrcompat needs to be rebuilt! manually run \'make\' in a GCC 4.8.x environment!" >&2; false' ],
#  )
#  binary.compiler.sourcedeps += libstrcompat


# always touch autogen.h, so that src/version.c will be forced to rebuild;
# otherwise GetBuildDate and GetBuildTime would contain stale information
_, autogen = builder.AddCommand(
  inputs  = builder.ALWAYS_DIRTY,
  outputs = [ 'autogen.h' ],
  argv    = [ 'touch', 'autogen.h' ],
)
binary.compiler.sourcedeps += autogen


# PCH for GCC only (breaks Clang autogen.h dependency detection)
if 'gcc' in binary.compiler.version.vendor_name:
  project.sources = [ 'src/common.h' ] + project.sources

binary.compiler.cflags += [ '-include', 'common.h' ]

binary.compiler.linkflags += [
  '-liberty',
#  os.path.join(builder.currentSourcePath, 'libs', 'capstone', 'libcapstone.a'),
  os.path.join(builder.currentSourcePath, 'libs', 'ann', 'lib', 'libANN.a'),
]

if builder.options.debug == '1':
  binary.compiler.linkflags += [
    '-lunwind',
    '-lunwind-x86',
  ]

binary.compiler.includes += [
  os.path.join(builder.buildPath), # for autogen.h
  os.path.join(builder.currentSourcePath, 'libs', 'udis86'),
  os.path.join(builder.currentSourcePath, 'libs', 'lz4', 'lib'),
  os.path.join(builder.currentSourcePath, 'libs', 'lodepng'),
  os.path.join(builder.currentSourcePath, 'libs', 'capstone', 'include'),
  os.path.join(builder.currentSourcePath, 'libs', 'ann', 'include'),
  os.path.join(builder.currentSourcePath, 'libs', 'fmt', 'include'),
]

# add libstrcompat dependency (for Linux only)
# if builder.target.platform == 'linux':
#   binary.compiler.includes += [
#     os.path.join(builder.currentSourcePath, 'libs', 'strcompat'),
#   ]
#   binary.compiler.linkflags += [
#     '-lstrcompat',
#     '-L' + os.path.join(builder.currentSourcePath, 'libs', 'strcompat'), '-Wl,-rpath=./tf/addons/sourcemod/extensions',
#   ]

# use NASM to assemble src/mem/wrapper.s into wrapper.o
# (TODO: find a better way to do this that's less of an ugly hack)
if builder.target.platform == 'linux':
  wrapper_src = os.path.join(builder.currentSourcePath, 'src', 'mem', 'wrapper.s')
  wrapper_obj = 'wrapper.o'
  _, wrapper = builder.AddCommand(
    inputs  = [wrapper_src],
    outputs = [wrapper_obj],
    argv    = ['nasm',
               '-f', 'elf32',
               '-g', '-F', 'dwarf',
               '-Wall',
               '-Ox',
               '-o', wrapper_obj,
               wrapper_src]
  )
  binary.compiler.sourcedeps += wrapper
  binary.compiler.linkflags  += [os.path.join('..', wrapper_obj)]


Extension.extensions = builder.Add(project)
