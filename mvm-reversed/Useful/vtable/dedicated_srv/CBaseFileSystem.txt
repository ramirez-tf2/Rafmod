CBaseFileSystem

+0x0000:  0006e900  CTier1AppSystem<IFileSystem, 0>::Connect(void* (*)(char const*, int*))
+0x0004:  0006e8e0  CTier1AppSystem<IFileSystem, 0>::Disconnect()
+0x0008:  0005edf0  CBaseFileSystem::QueryInterface(char const*)
+0x000c:  0005fc20  CBaseFileSystem::Init()
+0x0010:  0005f760  CBaseFileSystem::Shutdown()
+0x0014:  00000000  
+0x0018:  00000000  
+0x001c:  0006cde0  CBaseFileSystem::AddSearchPath(char const*, char const*, SearchPathAdd_t)
+0x0020:  00065400  CBaseFileSystem::RemoveSearchPath(char const*, char const*)
+0x0024:  00065720  CBaseFileSystem::RemoveAllSearchPaths()
+0x0028:  00062e60  CBaseFileSystem::RemoveSearchPaths(char const*)
+0x002c:  0006b8c0  CBaseFileSystem::MarkPathIDByRequestOnly(char const*, bool)
+0x0030:  00066530  CBaseFileSystem::RelativePathToFullPath(char const*, char const*, char*, int, PathTypeFilter_t, unsigned int*)
+0x0034:  00069010  CBaseFileSystem::GetSearchPath(char const*, bool, char*, int)
+0x0038:  0006b6e0  CBaseFileSystem::AddPackFile(char const*, char const*)
+0x003c:  000622e0  CBaseFileSystem::RemoveFile(char const*, char const*)
+0x0040:  00062100  CBaseFileSystem::RenameFile(char const*, char const*, char const*)
+0x0044:  00061f90  CBaseFileSystem::CreateDirHierarchy(char const*, char const*)
+0x0048:  00066c90  CBaseFileSystem::IsDirectory(char const*, char const*)
+0x004c:  0005ee30  CBaseFileSystem::FileTimeToString(char*, int, long)
+0x0050:  00063250  CBaseFileSystem::SetBufferSize(void*, unsigned int)
+0x0054:  00063190  CBaseFileSystem::IsOk(void*)
+0x0058:  00064090  CBaseFileSystem::EndOfFile(void*)
+0x005c:  00064250  CBaseFileSystem::ReadLine(char*, int, void*)
+0x0060:  00063460  CBaseFileSystem::FPrintf(void*, char const*, ...)
+0x0064:  00061680  CBaseFileSystem::LoadModule(char const*, char const*, bool)
+0x0068:  0005ed10  CBaseFileSystem::UnloadModule(CSysModule*)
+0x006c:  0005e7e0  CBaseFileSystem::FindFirst(char const*, int*)
+0x0070:  0006d2e0  CBaseFileSystem::FindNext(int)
+0x0074:  0005e810  CBaseFileSystem::FindIsDirectory(int)
+0x0078:  0006d590  CBaseFileSystem::FindClose(int)
+0x007c:  0006de80  CBaseFileSystem::FindFirstEx(char const*, char const*, int*)
+0x0080:  0005e840  CBaseFileSystem::GetLocalPath(char const*, char*, int)
+0x0084:  0005e880  CBaseFileSystem::FullPathToRelativePath(char const*, char*, int)
+0x0088:  0005ed90  CBaseFileSystem::GetCurrentDirectory(char*, int)
+0x008c:  0005ecf0  CBaseFileSystem::FindOrAddFileName(char const*)
+0x0090:  0005ecb0  CBaseFileSystem::String(void* const&, char*, int)
+0x0094:  000733b0  CBaseFileSystem::AsyncReadMultiple(FileAsyncRequest_t const*, int, FSAsyncControl_t__**)
+0x0098:  0006e760  CBaseFileSystem::AsyncAppend(char const*, void const*, int, bool, FSAsyncControl_t__**)
+0x009c:  00073ad0  CBaseFileSystem::AsyncAppendFile(char const*, char const*, FSAsyncControl_t__**)
+0x00a0:  00073e60  CBaseFileSystem::AsyncFinishAll(int)
+0x00a4:  00073f00  CBaseFileSystem::AsyncFinishAllWrites()
+0x00a8:  000745a0  CBaseFileSystem::AsyncFlush()
+0x00ac:  00073f80  CBaseFileSystem::AsyncSuspend()
+0x00b0:  00073fb0  CBaseFileSystem::AsyncResume()
+0x00b4:  00074b50  CBaseFileSystem::AsyncAddFetcher(IAsyncFileFetch*)
+0x00b8:  00073230  CBaseFileSystem::AsyncRemoveFetcher(IAsyncFileFetch*)
+0x00bc:  00073fe0  CBaseFileSystem::AsyncBeginRead(char const*, FSAsyncFile_t__**)
+0x00c0:  00073ff0  CBaseFileSystem::AsyncEndRead(FSAsyncFile_t__*)
+0x00c4:  00074000  CBaseFileSystem::AsyncFinish(FSAsyncControl_t__*, bool)
+0x00c8:  00074220  CBaseFileSystem::AsyncGetResult(FSAsyncControl_t__*, void**, int*)
+0x00cc:  000742a0  CBaseFileSystem::AsyncAbort(FSAsyncControl_t__*)
+0x00d0:  00074580  CBaseFileSystem::AsyncStatus(FSAsyncControl_t__*)
+0x00d4:  000745f0  CBaseFileSystem::AsyncSetPriority(FSAsyncControl_t__*, int)
+0x00d8:  00074660  CBaseFileSystem::AsyncAddRef(FSAsyncControl_t__*)
+0x00dc:  00074680  CBaseFileSystem::AsyncRelease(FSAsyncControl_t__*)
+0x00e0:  00000000  
+0x00e4:  00000000  
+0x00e8:  00000000  
+0x00ec:  00000000  
+0x00f0:  00000000  
+0x00f4:  0005e830  CBaseFileSystem::GetLocalCopy(char const*)
+0x00f8:  0005e540  CBaseFileSystem::PrintOpenedFiles()
+0x00fc:  0005fe10  CBaseFileSystem::PrintSearchPaths()
+0x0100:  0005e8c0  CBaseFileSystem::SetWarningFunc(void (*)(char const*, ...))
+0x0104:  0005e8e0  CBaseFileSystem::SetWarningLevel(FileWarningLevel_t)
+0x0108:  0006b730  CBaseFileSystem::AddLoggingFunc(void (*)(char const*, char const*))
+0x010c:  0005f6e0  CBaseFileSystem::RemoveLoggingFunc(void (*)(char const*, char const*))
+0x0110:  0005e900  CBaseFileSystem::GetFilesystemStatistics()
+0x0114:  0006ace0  CBaseFileSystem::OpenEx(char const*, char const*, unsigned int, char const*, char**)
+0x0118:  00064580  CBaseFileSystem::ReadEx(void*, int, int, void*)
+0x011c:  0005e960  CBaseFileSystem::ReadFileEx(char const*, char const*, void**, bool, bool, int, int, void* (*)(char const*, unsigned int))
+0x0120:  0005ecd0  CBaseFileSystem::FindFileName(char const*)
+0x0124:  0005e6d0  CBaseFileSystem::SetupPreloadData()
+0x0128:  0005e720  CBaseFileSystem::DiscardPreloadData()
+0x012c:  0005e6a0  CBaseFileSystem::LoadCompiledKeyValues(IFileSystem::KeyValuesPreloadType_t, char const*)
+0x0130:  0005f080  CBaseFileSystem::LoadKeyValues(IFileSystem::KeyValuesPreloadType_t, char const*, char const*)
+0x0134:  0005f050  CBaseFileSystem::LoadKeyValues(KeyValues&, IFileSystem::KeyValuesPreloadType_t, char const*, char const*)
+0x0138:  00061600  CBaseFileSystem::ExtractRootKeyName(IFileSystem::KeyValuesPreloadType_t, char*, unsigned int, char const*, char const*)
+0x013c:  000733f0  CBaseFileSystem::AsyncWrite(char const*, void const*, int, bool, bool, FSAsyncControl_t__**)
+0x0140:  00073750  CBaseFileSystem::AsyncWriteFile(char const*, CUtlBuffer const*, int, bool, bool, FSAsyncControl_t__**)
+0x0144:  00074b80  CBaseFileSystem::AsyncReadMultipleCreditAlloc(FileAsyncRequest_t const*, int, char const*, int, FSAsyncControl_t__**)
+0x0148:  0005ec50  CBaseFileSystem::GetFileTypeForFullPath(char const*, wchar_t*, unsigned int)
+0x014c:  0005f230  CBaseFileSystem::ReadToBuffer(void*, CUtlBuffer&, int, void* (*)(char const*, unsigned int))
+0x0150:  0005e920  CBaseFileSystem::GetOptimalIOConstraints(void*, unsigned int*, unsigned int*, unsigned int*)
+0x0154:  0006e860  CBaseFileSystem::AllocOptimalReadBuffer(void*, unsigned int, unsigned int)
+0x0158:  0006e870  CBaseFileSystem::FreeOptimalReadBuffer(void*)
+0x015c:  0006b1d0  CBaseFileSystem::BeginMapAccess()
+0x0160:  00062a50  CBaseFileSystem::EndMapAccess()
+0x0164:  00060330  CBaseFileSystem::FullPathToRelativePathEx(char const*, char const*, char*, int)
+0x0168:  0005e910  CBaseFileSystem::GetPathIndex(void* const&)
+0x016c:  000680b0  CBaseFileSystem::GetPathTime(char const*, char const*)
+0x0170:  0006e7b0  CBaseFileSystem::GetDVDMode()
+0x0174:  0005f380  CBaseFileSystem::EnableWhitelistFileTracking(bool, bool, bool)
+0x0178:  00060df0  CBaseFileSystem::RegisterFileWhitelist(IPureServerWhitelist*, IFileList**)
+0x017c:  0005e770  CBaseFileSystem::MarkAllCRCsUnverified()
+0x0180:  0005e780  CBaseFileSystem::CacheFileCRCs(char const*, ECacheCRCType, IFileList*)
+0x0184:  0005e790  CBaseFileSystem::CheckCachedFileHash(char const*, char const*, int, FileHash_t*)
+0x0188:  0005e7b0  CBaseFileSystem::GetUnverifiedFileHashes(CUnverifiedFileHash*, int)
+0x018c:  0005e7c0  CBaseFileSystem::GetWhitelistSpewFlags()
+0x0190:  0005e7d0  CBaseFileSystem::SetWhitelistSpewFlags(int)
+0x0194:  0005e520  CBaseFileSystem::InstallDirtyDiskReportFunc(void (*)())
+0x0198:  00064f90  CBaseFileSystem::CreateFileCache()
+0x019c:  0006d2c0  CBaseFileSystem::AddFilesToFileCache(void*, char const**, int, char const*)
+0x01a0:  0005fb00  CBaseFileSystem::IsFileCacheFileLoaded(void*, char const*)
+0x01a4:  0005e950  CBaseFileSystem::IsFileCacheLoaded(void*)
+0x01a8:  00066060  CBaseFileSystem::DestroyFileCache(void*)
+0x01ac:  0006ce10  CBaseFileSystem::RegisterMemoryFile(CMemoryFileBacking*, CMemoryFileBacking**)
+0x01b0:  00065780  CBaseFileSystem::UnregisterMemoryFile(CMemoryFileBacking*)
+0x01b4:  00065a30  CBaseFileSystem::CacheAllVPKFileHashes(bool, bool)
+0x01b8:  0005ee90  CBaseFileSystem::CheckVPKFileHash(int, int, int, MD5Value_t&)
+0x01bc:  0005e7a0  CBaseFileSystem::NotifyFileUnloaded(char const*, char const*)
+0x01c0:  0005ed60  CBaseFileSystem::GetCaseCorrectFullPath_Ptr(char const*, char*, int)
+0x01c4:  0005e610  CBaseFileSystem::Open(char const*, char const*, char const*)
+0x01c8:  000611f0  CBaseFileSystem::Close(void*)
+0x01cc:  00064bc0  CBaseFileSystem::Seek(void*, int, FileSystemSeek_t)
+0x01d0:  00063a00  CBaseFileSystem::Tell(void*)
+0x01d4:  00063cd0  CBaseFileSystem::Size(void*)
+0x01d8:  00060f40  CBaseFileSystem::Size(char const*, char const*)
+0x01dc:  000618e0  CBaseFileSystem::Flush(void*)
+0x01e0:  00061550  CBaseFileSystem::Precache(char const*, char const*)
+0x01e4:  0005e660  CBaseFileSystem::Read(void*, int, void*)
+0x01e8:  00063710  CBaseFileSystem::Write(void const*, int, void*)
+0x01ec:  0005f130  CBaseFileSystem::ReadFile(char const*, char const*, CUtlBuffer&, int, int, void* (*)(char const*, unsigned int))
+0x01f0:  0005e560  CBaseFileSystem::WriteFile(char const*, char const*, CUtlBuffer&)
+0x01f4:  000650b0  CBaseFileSystem::UnzipFile(char const*, char const*, char const*)
+0x01f8:  00060570  CBaseFileSystem::FileExists(char const*, char const*)
+0x01fc:  00068880  CBaseFileSystem::GetFileTime(char const*, char const*)
+0x0200:  00067b30  CBaseFileSystem::IsFileWritable(char const*, char const*)
+0x0204:  000675b0  CBaseFileSystem::SetFileWritable(char const*, bool, char const*)
+0x0208:  0005f590  CBaseFileSystem::FixUpPath(char const*, char*, int)
+0x020c:  00000000  
+0x0210:  00000000  
+0x0214:  00000000  
+0x0218:  00000000  
+0x021c:  00000000  
+0x0220:  00000000  
+0x0224:  00000000  
+0x0228:  00000000  
+0x022c:  0006e7c0  CBaseFileSystem::FS_setmode(_IO_FILE*, FileMode_t)
+0x0230:  00000000  
+0x0234:  00000000  
+0x0238:  00000000  
+0x023c:  00000000  
+0x0240:  00000000  
+0x0244:  00000000  
+0x0248:  00000000  
+0x024c:  00000000  
+0x0250:  00000000  
+0x0254:  0006e7d0  CBaseFileSystem::FS_GetSectorSize(_IO_FILE*)
+0x0258:  fffffffc  (unknown)
+0x025c:  001cd1b4  typeinfo for CBaseFileSystem
+0x0260:  0005e650  non-virtual thunk to CBaseFileSystem::Read(void*, int, void*)
+0x0264:  00063700  non-virtual thunk to CBaseFileSystem::Write(void const*, int, void*)
+0x0268:  0005e600  non-virtual thunk to CBaseFileSystem::Open(char const*, char const*, char const*)
+0x026c:  000611e0  non-virtual thunk to CBaseFileSystem::Close(void*)
+0x0270:  00064bb0  non-virtual thunk to CBaseFileSystem::Seek(void*, int, FileSystemSeek_t)
+0x0274:  000639f0  non-virtual thunk to CBaseFileSystem::Tell(void*)
+0x0278:  00063cc0  non-virtual thunk to CBaseFileSystem::Size(void*)
+0x027c:  00060f30  non-virtual thunk to CBaseFileSystem::Size(char const*, char const*)
+0x0280:  000618d0  non-virtual thunk to CBaseFileSystem::Flush(void*)
+0x0284:  00061540  non-virtual thunk to CBaseFileSystem::Precache(char const*, char const*)
+0x0288:  00060560  non-virtual thunk to CBaseFileSystem::FileExists(char const*, char const*)
+0x028c:  00067b20  non-virtual thunk to CBaseFileSystem::IsFileWritable(char const*, char const*)
+0x0290:  000675a0  non-virtual thunk to CBaseFileSystem::SetFileWritable(char const*, bool, char const*)
+0x0294:  00068870  non-virtual thunk to CBaseFileSystem::GetFileTime(char const*, char const*)
+0x0298:  0005f120  non-virtual thunk to CBaseFileSystem::ReadFile(char const*, char const*, CUtlBuffer&, int, int, void* (*)(char const*, unsigned int))
+0x029c:  0005e550  non-virtual thunk to CBaseFileSystem::WriteFile(char const*, char const*, CUtlBuffer&)
+0x02a0:  000650a0  non-virtual thunk to CBaseFileSystem::UnzipFile(char const*, char const*, char const*)
