CBaseServerVehicle

+0x0000:  00e5fa80  CBaseServerVehicle::GetPassenger(int)
+0x0004:  00e5fab0  CBaseServerVehicle::GetPassengerRole(CBaseCombatCharacter*)
+0x0008:  00e60170  CBaseServerVehicle::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
+0x000c:  00e5f2f0  CBaseServerVehicle::IsPassengerUsingStandardWeapons(int)
+0x0010:  00e5fc90  CBaseServerVehicle::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
+0x0014:  00e60920  CBaseServerVehicle::ProcessMovement(CBasePlayer*, CMoveData*)
+0x0018:  00e5fcb0  CBaseServerVehicle::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
+0x001c:  00e60440  CBaseServerVehicle::ItemPostFrame(CBasePlayer*)
+0x0020:  00e5f300  CBaseServerVehicle::GetVehicleEnt()
+0x0024:  00e60570  CBaseServerVehicle::SetPassenger(int, CBaseCombatCharacter*)
+0x0028:  00e5f310  CBaseServerVehicle::IsPassengerVisible(int)
+0x002c:  00e5f320  CBaseServerVehicle::IsPassengerDamagable(int)
+0x0030:  00e5ff80  CBaseServerVehicle::PassengerShouldReceiveDamage(CTakeDamageInfo&)
+0x0034:  00e671a0  CBaseServerVehicle::IsVehicleUpright()
+0x0038:  00e671b0  CBaseServerVehicle::IsPassengerEntering()
+0x003c:  00e671c0  CBaseServerVehicle::IsPassengerExiting()
+0x0040:  00e63d20  CBaseServerVehicle::GetPassengerSeatPoint(int, Vector*, QAngle*)
+0x0044:  00e61e30  CBaseServerVehicle::HandlePassengerEntry(CBaseCombatCharacter*, bool)
+0x0048:  00e64e80  CBaseServerVehicle::HandlePassengerExit(CBaseCombatCharacter*)
+0x004c:  00e61500  CBaseServerVehicle::GetPassengerExitPoint(int, Vector*, QAngle*)
+0x0050:  00e606d0  CBaseServerVehicle::GetEntryAnimForPoint(Vector const&)
+0x0054:  00e622a0  CBaseServerVehicle::GetExitAnimToUse(Vector&, bool&)
+0x0058:  00e60f00  CBaseServerVehicle::HandleEntryExitFinish(bool, bool)
+0x005c:  00e5f330  CBaseServerVehicle::ClassifyPassenger(CBaseCombatCharacter*, Class_T)
+0x0060:  00e5f340  CBaseServerVehicle::PassengerDamageModifier(CTakeDamageInfo const&)
+0x0064:  00e671d0  CBaseServerVehicle::GetVehicleParams()
+0x0068:  00e671f0  CBaseServerVehicle::GetVehicleController()
+0x006c:  00e658d0  CBaseServerVehicle::NPC_GetAvailableSeat(CBaseCombatCharacter*, string_t, VehicleSeatQuery_e)
+0x0070:  00e657e0  CBaseServerVehicle::NPC_AddPassenger(CBaseCombatCharacter*, string_t, int)
+0x0074:  00e604c0  CBaseServerVehicle::NPC_RemovePassenger(CBaseCombatCharacter*)
+0x0078:  00e602d0  CBaseServerVehicle::NPC_GetPassengerSeatPosition(CBaseCombatCharacter*, Vector*, QAngle*)
+0x007c:  00e60220  CBaseServerVehicle::NPC_GetPassengerSeatPositionLocal(CBaseCombatCharacter*, Vector*, QAngle*)
+0x0080:  00e5fae0  CBaseServerVehicle::NPC_GetPassengerSeatAttachment(CBaseCombatCharacter*)
+0x0084:  00e5ff50  CBaseServerVehicle::NPC_HasAvailableSeat(string_t)
+0x0088:  00e5fb90  CBaseServerVehicle::NPC_GetPassengerSeatAnims(CBaseCombatCharacter*, PassengerSeatAnimType_t)
+0x008c:  00e5fec0  CBaseServerVehicle::NPC_GetPassengerInSeat(int, int)
+0x0090:  00e65a30  CBaseServerVehicle::RestorePassengerInfo()
+0x0094:  00e5f350  CBaseServerVehicle::NPC_CanDrive()
+0x0098:  00e67200  CBaseServerVehicle::NPC_SetDriver(CNPC_VehicleDriver*)
+0x009c:  00e67210  CBaseServerVehicle::NPC_DriveVehicle()
+0x00a0:  00e5fd10  CBaseServerVehicle::NPC_ThrottleCenter()
+0x00a4:  00e5fcf0  CBaseServerVehicle::NPC_ThrottleReverse()
+0x00a8:  00e5fcd0  CBaseServerVehicle::NPC_ThrottleForward()
+0x00ac:  00e5fd20  CBaseServerVehicle::NPC_Brake()
+0x00b0:  00e5fd40  CBaseServerVehicle::NPC_TurnLeft(float)
+0x00b4:  00e5fd70  CBaseServerVehicle::NPC_TurnRight(float)
+0x00b8:  00e5fd90  CBaseServerVehicle::NPC_TurnCenter()
+0x00bc:  00e5fda0  CBaseServerVehicle::NPC_PrimaryFire()
+0x00c0:  00e5fdb0  CBaseServerVehicle::NPC_SecondaryFire()
+0x00c4:  00e5f360  CBaseServerVehicle::NPC_HasPrimaryWeapon()
+0x00c8:  00e5f370  CBaseServerVehicle::NPC_HasSecondaryWeapon()
+0x00cc:  00e5f380  CBaseServerVehicle::NPC_AimPrimaryWeapon(Vector)
+0x00d0:  00e5f390  CBaseServerVehicle::NPC_AimSecondaryWeapon(Vector)
+0x00d4:  00e5fdc0  CBaseServerVehicle::Weapon_PrimaryRanges(float*, float*)
+0x00d8:  00e5fde0  CBaseServerVehicle::Weapon_SecondaryRanges(float*, float*)
+0x00dc:  00e5fe00  CBaseServerVehicle::Weapon_PrimaryCanFireAt()
+0x00e0:  00e5fe10  CBaseServerVehicle::Weapon_SecondaryCanFireAt()
+0x00e4:  00e5ffb0  CBaseServerVehicle::ReloadScript()
+0x00e8:  00e603a0  CBaseServerVehicle::Precache()
+0x00ec:  00e671e0  CBaseServerVehicle::IsVehicleBodyInWater()
+0x00f0:  00e5fa60  CBaseServerVehicle::GetDriver()
+0x00f4:  00e66a60  CBaseServerVehicle::ParseEntryExitAnims()
+0x00f8:  00e60bb0  CBaseServerVehicle::CheckExitPoint(float, int, Vector*)
+0x00fc:  00e60040  CBaseServerVehicle::SetVehicle(CBaseEntity*)
+0x0100:  00e64cb0  CBaseServerVehicle::SoundStart()
+0x0104:  00e64aa0  CBaseServerVehicle::SoundStartDisabled()
+0x0108:  00e600c0  CBaseServerVehicle::SoundShutdown(float)
+0x010c:  00e64d20  CBaseServerVehicle::SoundUpdate(vbs_sound_update_t&)
+0x0110:  00e65e40  CBaseServerVehicle::PlaySound(vehiclesound)
+0x0114:  00e60080  CBaseServerVehicle::StopSound(vehiclesound)
+0x0118:  00e5fe20  CBaseServerVehicle::RecalculateSoundGear(vbs_sound_update_t&)
+0x011c:  00e5fea0  CBaseServerVehicle::StartEngineRumble()
+0x0120:  00e5feb0  CBaseServerVehicle::StopEngineRumble()
