CTeamplayRoundBasedRules

+0x0000:  006c9ce0  CGameRules::Name()
+0x0004:  006d8290  CMultiplayRules::Init()
+0x0008:  005f99c0  CBaseGameSystemPerFrame::PostInit()
+0x000c:  005f99d0  CBaseGameSystemPerFrame::Shutdown()
+0x0010:  005f99e0  CBaseGameSystemPerFrame::LevelInitPreEntity()
+0x0014:  007229d0  CTeamplayRoundBasedRules::LevelInitPostEntity()
+0x0018:  005e7ad0  CBaseGameSystemPerFrame::LevelShutdownPreClearSteamAPIContext()
+0x001c:  005e7ae0  CBaseGameSystemPerFrame::LevelShutdownPreEntity()
+0x0020:  005f99f0  CBaseGameSystemPerFrame::LevelShutdownPostEntity()
+0x0024:  005e7af0  CBaseGameSystemPerFrame::OnSave()
+0x0028:  005e7b00  CBaseGameSystemPerFrame::OnRestore()
+0x002c:  005e7b10  CBaseGameSystemPerFrame::SafeRemoveIfDesired()
+0x0030:  005e7b20  CBaseGameSystemPerFrame::IsPerFrame()
+0x0034:  0072cb40  CTeamplayRoundBasedRules::~CTeamplayRoundBasedRules()
+0x0038:  0072c980  CTeamplayRoundBasedRules::~CTeamplayRoundBasedRules()
+0x003c:  005e7b30  CBaseGameSystemPerFrame::FrameUpdatePreEntityThink()
+0x0040:  006d8f70  CMultiplayRules::FrameUpdatePostEntityThink()
+0x0044:  005f9a00  CBaseGameSystemPerFrame::PreClientUpdate()
+0x0048:  006d8230  CMultiplayRules::Damage_IsTimeBased(int)
+0x004c:  006d8240  CMultiplayRules::Damage_ShouldGibCorpse(int)
+0x0050:  006d8250  CMultiplayRules::Damage_ShowOnHUD(int)
+0x0054:  006d8260  CMultiplayRules::Damage_NoPhysicsForce(int)
+0x0058:  006d8280  CMultiplayRules::Damage_ShouldNotBleed(int)
+0x005c:  006d81d0  CMultiplayRules::Damage_GetTimeBased()
+0x0060:  006d81e0  CMultiplayRules::Damage_GetShouldGibCorpse()
+0x0064:  006d81f0  CMultiplayRules::Damage_GetShowOnHud()
+0x0068:  006d8200  CMultiplayRules::Damage_GetNoPhysicsForce()
+0x006c:  006d8220  CMultiplayRules::Damage_GetShouldNotBleed()
+0x0070:  006d8450  CMultiplayRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
+0x0074:  006d82d0  CMultiplayRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
+0x0078:  006c79c0  CGameRules::ShouldCollide(int, int)
+0x007c:  006c9cf0  CGameRules::DefaultFOV()
+0x0080:  006c7b20  CGameRules::GetViewVectors() const
+0x0084:  006c7ef0  CGameRules::GetAmmoDamage(CBaseEntity*, CBaseEntity*, int)
+0x0088:  006c9d00  CGameRules::GetDamageMultiplier()
+0x008c:  006d81c0  CMultiplayRules::IsMultiplayer()
+0x0090:  006c9d10  CGameRules::GetEncryptionKey()
+0x0094:  0072a460  CTeamplayRoundBasedRules::InRoundRestart()
+0x0098:  006c9d30  CGameRules::AllowThirdPersonCamera()
+0x009c:  006d96c0  CMultiplayRules::ClientCommandKeyValues(edict_t*, KeyValues*)
+0x00a0:  006c9d50  CGameRules::IsConnectedUserInfoChangeAllowed(CBasePlayer*)
+0x00a4:  006c9d60  CGameRules::Status(void (*)(char const*, ...))
+0x00a8:  006d8710  CMultiplayRules::GetTaggedConVarList(KeyValues*)
+0x00ac:  006c7c20  CGameRules::CheckHaptics(CBasePlayer*)
+0x00b0:  006c9d80  CGameRules::LevelShutdown()
+0x00b4:  0072d160  CTeamplayRules::Precache()
+0x00b8:  006d9140  CMultiplayRules::RefreshSkillData(bool)
+0x00bc:  00726800  CTeamplayRoundBasedRules::Think()
+0x00c0:  006d8650  CMultiplayRules::IsAllowedToSpawn(CBaseEntity*)
+0x00c4:  006c7fd0  CGameRules::EndGameFrame()
+0x00c8:  006c9da0  CGameRules::IsSkillLevel(int)
+0x00cc:  006c9dc0  CGameRules::GetSkillLevel()
+0x00d0:  006c9dd0  CGameRules::OnSkillLevelChanged(int)
+0x00d4:  006ca0f0  CGameRules::SetSkillLevel(int)
+0x00d8:  006d86e0  CMultiplayRules::FAllowFlashlight()
+0x00dc:  006d9230  CMultiplayRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
+0x00e0:  006d82b0  CMultiplayRules::IsDeathmatch()
+0x00e4:  0072cd60  CTeamplayRules::IsTeamplay()
+0x00e8:  006d82c0  CMultiplayRules::IsCoOp()
+0x00ec:  0072a3c0  CTeamplayRules::GetGameDescription()
+0x00f0:  006d8f40  CMultiplayRules::ClientConnected(edict_t*, char const*, char const*, char*, int)
+0x00f4:  0072d8d0  CTeamplayRules::InitHUD(CBasePlayer*)
+0x00f8:  0072d540  CTeamplayRules::ClientDisconnected(edict_t*)
+0x00fc:  006d9560  CMultiplayRules::FlPlayerFallDamage(CBasePlayer*)
+0x0100:  0072cf50  CTeamplayRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*, CTakeDamageInfo const&)
+0x0104:  0072cda0  CTeamplayRules::ShouldAutoAim(CBasePlayer*, edict_t*)
+0x0108:  006c9e20  CGameRules::GetAutoAimScale(CBasePlayer*)
+0x010c:  006c9e30  CGameRules::GetAutoAimMode()
+0x0110:  006c9e40  CGameRules::ShouldUseRobustRadiusDamage(CBaseEntity*)
+0x0114:  006c8aa0  CGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
+0x0118:  006c9e50  CGameRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer*)
+0x011c:  006d84b0  CMultiplayRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
+0x0120:  006d8e60  CMultiplayRules::PlayerSpawn(CBasePlayer*)
+0x0124:  006d84d0  CMultiplayRules::PlayerThink(CBasePlayer*)
+0x0128:  006d8500  CMultiplayRules::FPlayerCanRespawn(CBasePlayer*)
+0x012c:  006d8510  CMultiplayRules::FlPlayerSpawnTime(CBasePlayer*)
+0x0130:  006d89e0  CMultiplayRules::GetPlayerSpawnSpot(CBasePlayer*)
+0x0134:  006c8510  CGameRules::IsSpawnPointValid(CBaseEntity*, CBasePlayer*)
+0x0138:  006d8520  CMultiplayRules::AllowAutoTargetCrosshair()
+0x013c:  0072d360  CTeamplayRules::ClientCommand(CBaseEntity*, CCommand const&)
+0x0140:  0072cfe0  CTeamplayRules::ClientSettingsChanged(CBasePlayer*)
+0x0144:  0072ce30  CTeamplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
+0x0148:  0072d890  CTeamplayRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
+0x014c:  0072d3d0  CTeamplayRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
+0x0150:  006c9e70  CGameRules::GetDamageCustomString(CTakeDamageInfo const&)
+0x0154:  006c9e80  CGameRules::AdjustPlayerDamageInflicted(float)
+0x0158:  006c9e90  CGameRules::AdjustPlayerDamageTaken(CTakeDamageInfo*)
+0x015c:  006d8a40  CMultiplayRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)
+0x0160:  006d85b0  CMultiplayRules::WeaponShouldRespawn(CBaseCombatWeapon*)
+0x0164:  006d8550  CMultiplayRules::FlWeaponRespawnTime(CBaseCombatWeapon*)
+0x0168:  006d91a0  CMultiplayRules::FlWeaponTryRespawn(CBaseCombatWeapon*)
+0x016c:  006d9670  CMultiplayRules::VecWeaponRespawnSpot(CBaseCombatWeapon*)
+0x0170:  006d85d0  CMultiplayRules::CanHaveItem(CBasePlayer*, CItem*)
+0x0174:  006d85e0  CMultiplayRules::PlayerGotItem(CBasePlayer*, CItem*)
+0x0178:  006d85f0  CMultiplayRules::ItemShouldRespawn(CItem*)
+0x017c:  006d8610  CMultiplayRules::FlItemRespawnTime(CItem*)
+0x0180:  006d9620  CMultiplayRules::VecItemRespawnSpot(CItem*)
+0x0184:  006d89f0  CMultiplayRules::VecItemRespawnAngles(CItem*)
+0x0188:  006c83e0  CGameRules::CanHaveAmmo(CBaseCombatCharacter*, int)
+0x018c:  006c8390  CGameRules::CanHaveAmmo(CBaseCombatCharacter*, char const*)
+0x0190:  006d8640  CMultiplayRules::PlayerGotAmmo(CBaseCombatCharacter*, char*, int)
+0x0194:  006c9ea0  CGameRules::GetAmmoQuantityScale(int)
+0x0198:  006c9eb0  CGameRules::InitDefaultAIRelationships()
+0x019c:  006c9ec0  CGameRules::AIClassText(int)
+0x01a0:  006d8660  CMultiplayRules::FlHealthChargerRechargeTime()
+0x01a4:  006d8670  CMultiplayRules::FlHEVChargerRechargeTime()
+0x01a8:  006d8680  CMultiplayRules::DeadPlayerWeapons(CBasePlayer*)
+0x01ac:  006d8690  CMultiplayRules::DeadPlayerAmmo(CBasePlayer*)
+0x01b0:  0072ceb0  CTeamplayRules::GetTeamID(CBaseEntity*)
+0x01b4:  0072d1e0  CTeamplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
+0x01b8:  0072cd70  CTeamplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*)
+0x01bc:  007243c0  CTeamplayRoundBasedRules::CheckChatText(CBasePlayer*, char*)
+0x01c0:  0072cee0  CTeamplayRules::GetTeamIndex(char const*)
+0x01c4:  0072ce80  CTeamplayRules::GetIndexedTeamName(int)
+0x01c8:  0072d1a0  CTeamplayRules::IsValidTeam(char const*)
+0x01cc:  0072cd50  CTeamplayRules::ChangePlayerTeam(CBasePlayer*, char const*, bool, bool)
+0x01d0:  0072ccf0  CTeamplayRules::SetDefaultPlayerTeam(CBasePlayer*)
+0x01d4:  006c9f40  CGameRules::UpdateClientData(CBasePlayer*)
+0x01d8:  006db740  CMultiplayRules::PlayTextureSounds()
+0x01dc:  006d94b0  CMultiplayRules::PlayFootstepSounds(CBasePlayer*)
+0x01e0:  006d8700  CMultiplayRules::FAllowNPCs()
+0x01e4:  006db750  CMultiplayRules::EndMultiplayerGame()
+0x01e8:  006c7f90  CGameRules::WeaponTraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)
+0x01ec:  006c7f50  CGameRules::CreateStandardEntities()
+0x01f0:  006c7b30  CGameRules::GetChatPrefix(bool, CBasePlayer*)
+0x01f4:  006c9f80  CGameRules::GetChatLocation(bool, CBasePlayer*)
+0x01f8:  006c9f90  CGameRules::GetChatFormat(bool, CBasePlayer*)
+0x01fc:  006c9fa0  CGameRules::ShouldBurningPropsEmitLight()
+0x0200:  006c9fb0  CGameRules::CanEntityBeUsePushed(CBaseEntity*)
+0x0204:  006c9fc0  CGameRules::CreateCustomNetworkStringTables()
+0x0208:  006c7940  CGameRules::MarkAchievement(IRecipientFilter&, char const*)
+0x020c:  006db770  CMultiplayRules::ResetMapCycleTimeStamp()
+0x0210:  006c9fe0  CGameRules::OnNavMeshLoad()
+0x0214:  006c7be0  CGameRules::TacticalMissionManagerFactory()
+0x0218:  006c9ff0  CGameRules::ProcessVerboseLogOutput()
+0x021c:  006ca000  CGameRules::GetGameTypeName()
+0x0220:  006ca010  CGameRules::GetGameType()
+0x0224:  006db710  CMultiplayRules::ShouldDrawHeadLabels()
+0x0228:  006ca030  CGameRules::ClientSpawned(edict_t*)
+0x022c:  006ca040  CGameRules::OnFileReceived(char const*, unsigned int)
+0x0230:  006ca050  CGameRules::IsHolidayActive(int) const
+0x0234:  006d92e0  CMultiplayRules::IsManualMapChangeOkay(char const**)
+0x0238:  006d9900  CMultiplayRules::GetDeathScorer(CBaseEntity*, CBaseEntity*, CBaseEntity*)
+0x023c:  006da2a0  CMultiplayRules::VoiceCommand(CBaseMultiplayerPlayer*, int, int)
+0x0240:  00726f80  CTeamplayRoundBasedRules::HandleTimeLimitChange()
+0x0244:  006db790  CMultiplayRules::InitCustomResponseRulesDicts()
+0x0248:  006db7a0  CMultiplayRules::ShutdownCustomResponseRulesDicts()
+0x024c:  006da620  CMultiplayRules::GetNextLevelName(char*, int, bool)
+0x0250:  006d9b40  CMultiplayRules::LoadMapCycleFileIntoVector(char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
+0x0254:  006db7b0  CMultiplayRules::UseSuicidePenalty()
+0x0258:  0072a770  CTeamplayRoundBasedRules::GetLastMajorEventTime()
+0x025c:  006d9c50  CMultiplayRules::ChangeLevel()
+0x0260:  007251f0  CTeamplayRoundBasedRules::GoToIntermission()
+0x0264:  006da7a0  CMultiplayRules::LoadMapCycleFile()
+0x0268:  0072a380  CTeamplayRules::GetCaptureValueForPlayer(CBasePlayer*)
+0x026c:  0072a390  CTeamplayRules::TeamMayCapturePoint(int, int)
+0x0270:  0072a3a0  CTeamplayRules::PlayerMayCapturePoint(CBasePlayer*, int, char*, int)
+0x0274:  0072a3b0  CTeamplayRules::PlayerMayBlockPoint(CBasePlayer*, int, char*, int)
+0x0278:  0072a490  CTeamplayRoundBasedRules::PointsMayBeCaptured()
+0x027c:  0072a4c0  CTeamplayRoundBasedRules::SetLastCapPointChanged(int)
+0x0280:  00722cb0  CTeamplayRoundBasedRules::TimerMayExpire()
+0x0284:  00729310  CTeamplayRoundBasedRules::SetWinningTeam(int, int, bool, bool, bool, bool)
+0x0288:  00727800  CTeamplayRoundBasedRules::SetStalemate(int, bool, bool)
+0x028c:  0072a3d0  CTeamplayRules::SetSwitchTeams(bool)
+0x0290:  0072a3f0  CTeamplayRules::ShouldSwitchTeams()
+0x0294:  0072a400  CTeamplayRules::HandleSwitchTeams()
+0x0298:  0072a410  CTeamplayRules::SetScrambleTeams(bool)
+0x029c:  0072a430  CTeamplayRules::ShouldScrambleTeams()
+0x02a0:  0072a440  CTeamplayRules::HandleScrambleTeams()
+0x02a4:  0072a450  CTeamplayRules::PointsMayAlwaysBeBlocked()
+0x02a8:  007241b0  CTeamplayRoundBasedRules::GetNextRespawnWave(int, CBasePlayer*)
+0x02ac:  00724180  CTeamplayRoundBasedRules::HasPassedMinRespawnTime(CBasePlayer*)
+0x02b0:  00722d80  CTeamplayRoundBasedRules::GetRespawnTimeScalar(int)
+0x02b4:  00723280  CTeamplayRoundBasedRules::GetRespawnWaveMaxLength(int, bool)
+0x02b8:  0072a480  CTeamplayRoundBasedRules::ShouldRespawnQuickly(CBasePlayer*)
+0x02bc:  0072a4e0  CTeamplayRoundBasedRules::GetWinningTeam()
+0x02c0:  00723220  CTeamplayRoundBasedRules::ShouldBalanceTeams()
+0x02c4:  0072a4f0  CTeamplayRoundBasedRules::StopWatchModeThink()
+0x02c8:  0072a500  CTeamplayRoundBasedRules::HandleTeamScoreModify(int, int)
+0x02cc:  0072a510  CTeamplayRoundBasedRules::IsInArenaMode()
+0x02d0:  0072a520  CTeamplayRoundBasedRules::IsInKothMode()
+0x02d4:  0072a530  CTeamplayRoundBasedRules::IsInTraining()
+0x02d8:  0072a540  CTeamplayRoundBasedRules::IsInItemTestingMode()
+0x02dc:  007233a0  CTeamplayRoundBasedRules::GetBonusRoundTime(bool)
+0x02e0:  00722e80  CTeamplayRoundBasedRules::FireGameEvent(IGameEvent*)
+0x02e4:  00723f60  CTeamplayRoundBasedRules::RoundCleanupShouldIgnore(CBaseEntity*)
+0x02e8:  00723f90  CTeamplayRoundBasedRules::ShouldCreateEntity(char const*)
+0x02ec:  0072a550  CTeamplayRoundBasedRules::SetupOnRoundStart()
+0x02f0:  0072a560  CTeamplayRoundBasedRules::SetupOnRoundRunning()
+0x02f4:  0072a570  CTeamplayRoundBasedRules::PreviousRoundEnd()
+0x02f8:  0072a580  CTeamplayRoundBasedRules::SendTeamScoresEvent()
+0x02fc:  0072a590  CTeamplayRoundBasedRules::SendWinPanelInfo()
+0x0300:  0072a5a0  CTeamplayRoundBasedRules::SetupSpawnPointsForRound()
+0x0304:  0072a5b0  CTeamplayRoundBasedRules::SetupOnStalemateStart()
+0x0308:  0072a5c0  CTeamplayRoundBasedRules::SetupOnStalemateEnd()
+0x030c:  00722990  CTeamplayRoundBasedRules::SetSetup(bool)
+0x0310:  0072a5d0  CTeamplayRoundBasedRules::ShouldGoToBonusRound()
+0x0314:  0072a5e0  CTeamplayRoundBasedRules::SetupOnBonusStart()
+0x0318:  0072a5f0  CTeamplayRoundBasedRules::SetupOnBonusEnd()
+0x031c:  0072a600  CTeamplayRoundBasedRules::BonusStateThink()
+0x0320:  0072a610  CTeamplayRoundBasedRules::BetweenRounds_Start()
+0x0324:  0072a620  CTeamplayRoundBasedRules::BetweenRounds_End()
+0x0328:  0072a630  CTeamplayRoundBasedRules::BetweenRounds_Think()
+0x032c:  0072a640  CTeamplayRoundBasedRules::PreRound_End()
+0x0330:  0072a650  CTeamplayRoundBasedRules::ShouldScorePerRound()
+0x0334:  0072a660  CTeamplayRoundBasedRules::IsValveMap()
+0x0338:  00724520  CTeamplayRoundBasedRules::RestartTournament()
+0x033c:  0072a670  CTeamplayRoundBasedRules::TournamentModeCanEndWithTimelimit()
+0x0340:  0072a680  CTeamplayRoundBasedRules::SetRoundOverlayDetails()
+0x0344:  0072a690  CTeamplayRoundBasedRules::GetWaitingForPlayersTime()
+0x0348:  0072a6a0  CTeamplayRoundBasedRules::FillOutTeamplayRoundWinEvent(IGameEvent*)
+0x034c:  0072a6b0  CTeamplayRoundBasedRules::PlayTrainCaptureAlert(CTeamControlPoint*, bool)
+0x0350:  0072a6c0  CTeamplayRoundBasedRules::PlaySpecialCapSounds(int, CTeamControlPoint*)
+0x0354:  0072a6d0  CTeamplayRoundBasedRules::RecalculateControlPointState()
+0x0358:  0072a6e0  CTeamplayRoundBasedRules::ShouldSkipAutoScramble()
+0x035c:  0072a6f0  CTeamplayRoundBasedRules::ShouldWaitToStartRecording()
+0x0360:  0072a700  CTeamplayRoundBasedRules::AllowWaitingForPlayers()
+0x0364:  00722f00  CTeamplayRoundBasedRules::CheckWinLimit(bool)
+0x0368:  0072a710  CTeamplayRoundBasedRules::CanChangelevelBecauseOfTimeLimit()
+0x036c:  0072a720  CTeamplayRoundBasedRules::CanGoToStalemate()
+0x0370:  007228f0  CTeamplayRoundBasedRules::InitTeams()
+0x0374:  00722920  CTeamplayRoundBasedRules::CountActivePlayers()
+0x0378:  00727030  CTeamplayRoundBasedRules::RoundRespawn()
+0x037c:  00722ae0  CTeamplayRoundBasedRules::CleanUpMap()
+0x0380:  00723520  CTeamplayRoundBasedRules::CheckRespawnWaves()
+0x0384:  0072a730  CTeamplayRoundBasedRules::GetStalemateSong(int)
+0x0388:  0072a740  CTeamplayRoundBasedRules::WinSongName(int)
+0x038c:  0072a750  CTeamplayRoundBasedRules::LoseSongName(int)
+0x0390:  0072a7e0  CTeamplayRoundBasedRules::RespawnTeam(int)
+0x0394:  00723630  CTeamplayRoundBasedRules::RestoreActiveTimer()
+0x0398:  0072a760  CTeamplayRoundBasedRules::InternalHandleTeamWin(int)
+0x039c:  0072a780  CTeamplayRoundBasedRules::HaveCheatsBeenEnabledDuringLevel()
+0x03a0:  fffffdb8  (unknown)
+0x03a4:  010c0da0  typeinfo for CTeamplayRoundBasedRules
+0x03a8:  0072cb30  non-virtual thunk to CTeamplayRoundBasedRules::~CTeamplayRoundBasedRules()
+0x03ac:  0072c970  non-virtual thunk to CTeamplayRoundBasedRules::~CTeamplayRoundBasedRules()
+0x03b0:  00722e70  non-virtual thunk to CTeamplayRoundBasedRules::FireGameEvent(IGameEvent*)
