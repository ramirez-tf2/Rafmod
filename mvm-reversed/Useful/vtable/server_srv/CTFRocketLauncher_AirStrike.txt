CTFRocketLauncher_AirStrike

+0x0000:  00883100  CTFRocketLauncher_AirStrike::~CTFRocketLauncher_AirStrike()
+0x0004:  008831a0  CTFRocketLauncher_AirStrike::~CTFRocketLauncher_AirStrike()
+0x0008:  009cfff0  CBaseEntity::SetRefEHandle(CBaseHandle const&)
+0x000c:  005fef90  CBaseEntity::GetRefEHandle() const
+0x0010:  005fef30  CBaseEntity::GetCollideable()
+0x0014:  005fef40  CBaseEntity::GetNetworkable()
+0x0018:  005fef50  CBaseEntity::GetBaseEntity()
+0x001c:  005fef80  CBaseEntity::GetModelIndex() const
+0x0020:  005fef60  CBaseEntity::GetModelName() const
+0x0024:  009e08a0  CBaseEntity::SetModelIndex(int)
+0x0028:  00881200  CTFRocketLauncher_AirStrike::GetServerClass()
+0x002c:  00881210  CTFRocketLauncher_AirStrike::YouForgotToImplementOrDeclareServerClass()
+0x0030:  00881250  CTFRocketLauncher_AirStrike::GetDataDescMap()
+0x0034:  009d3d10  CBaseEntity::SetModelIndexOverride(int, int)
+0x0038:  009b1140  CBaseAnimating::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
+0x003c:  009b85a0  CBaseAnimating::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
+0x0040:  009cfe80  CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
+0x0044:  0062e060  CBaseEntity::ShouldCollide(int, int) const
+0x0048:  009d3170  CBaseEntity::SetOwnerEntity(CBaseEntity*)
+0x004c:  009d6ac0  CBaseEntity::ShouldTransmit(CCheckTransmitInfo const*)
+0x0050:  009cdd70  CBaseCombatWeapon::UpdateTransmitState()
+0x0054:  009b1250  CBaseAnimating::SetTransmit(CCheckTransmitInfo*, bool)
+0x0058:  00830670  CTFWeaponBase::GetTracerType()
+0x005c:  008318f0  CTFWeaponBase::Spawn()
+0x0060:  00881560  CTFRocketLauncher::Precache()
+0x0064:  009badd0  CBaseAnimating::SetModel(char const*)
+0x0068:  00658310  CEconEntity::OnNewModel()
+0x006c:  009d1130  CBaseEntity::PostConstructor(char const*)
+0x0070:  009cf910  CBaseEntity::PostClientActive()
+0x0074:  0062d370  CBaseEntity::ParseMapData(CEntityMapData*)
+0x0078:  0062d3e0  CBaseEntity::KeyValue(char const*, char const*)
+0x007c:  0062db80  CBaseEntity::KeyValue(char const*, float)
+0x0080:  0062dbe0  CBaseEntity::KeyValue(char const*, Vector const&)
+0x0084:  0062dc60  CBaseEntity::GetKeyValue(char const*, char*, int)
+0x0088:  0082d1a0  CTFWeaponBase::Activate()
+0x008c:  009db940  CBaseEntity::SetParent(CBaseEntity*, int)
+0x0090:  009cefb0  CBaseCombatWeapon::ObjectCaps()
+0x0094:  009d9860  CBaseEntity::AcceptInput(char const*, CBaseEntity*, CBaseEntity*, variant_t, int)
+0x0098:  009b4590  CBaseAnimating::GetInputDispatchEffectPosition(char const*, Vector&, QAngle&)
+0x009c:  009d9df0  CBaseEntity::DrawDebugGeometryOverlays()
+0x00a0:  009b6d70  CBaseAnimating::DrawDebugTextOverlays()
+0x00a4:  009cfe00  CBaseEntity::Save(ISave&)
+0x00a8:  009b4500  CBaseAnimating::Restore(IRestore&)
+0x00ac:  009cfe40  CBaseEntity::ShouldSavePhysics()
+0x00b0:  009d9040  CBaseEntity::OnSave(IEntitySaveUtils*)
+0x00b4:  009b6b50  CBaseAnimating::OnRestore()
+0x00b8:  005fe990  CBaseEntity::RequiredEdictIndex()
+0x00bc:  005fe9a0  CBaseEntity::MoveDone()
+0x00c0:  005fe9d0  CBaseEntity::Think()
+0x00c4:  00629c70  CBaseCombatWeapon::NetworkStateChanged_m_nNextThinkTick()
+0x00c8:  00629cb0  CBaseCombatWeapon::NetworkStateChanged_m_nNextThinkTick(void*)
+0x00cc:  00629700  CBaseAnimating::GetBaseAnimating()
+0x00d0:  009cff80  CBaseEntity::GetResponseSystem()
+0x00d4:  009de960  CBaseEntity::DispatchResponse(char const*)
+0x00d8:  009cfd20  CBaseEntity::Classify()
+0x00dc:  005fea30  CBaseEntity::DeathNotice(CBaseEntity*)
+0x00e0:  005fea40  CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)
+0x00e4:  009cfd30  CBaseEntity::GetAutoAimRadius()
+0x00e8:  005fea60  CBaseEntity::GetAutoAimCenter()
+0x00ec:  0062f380  CBaseEntity::GetBeamTraceFilter()
+0x00f0:  009cfd70  CBaseEntity::PassesDamageFilter(CTakeDamageInfo const&)
+0x00f4:  0062fb50  CBaseEntity::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*, CDmgAccumulator*)
+0x00f8:  005feaa0  CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)
+0x00fc:  009d28e0  CBaseEntity::OnTakeDamage(CTakeDamageInfo const&)
+0x0100:  005feab0  CBaseEntity::AdjustDamageDirection(CTakeDamageInfo const&, Vector&, CBaseEntity*)
+0x0104:  009d18d0  CBaseEntity::TakeHealth(float, int)
+0x0108:  005fefa0  CBaseEntity::IsAlive()
+0x010c:  009d03a0  CBaseEntity::Event_Killed(CTakeDamageInfo const&)
+0x0110:  005feac0  CBaseEntity::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
+0x0114:  0062f730  CBaseEntity::BloodColor()
+0x0118:  005fead0  CBaseEntity::IsTriggered(CBaseEntity*)
+0x011c:  005feae0  CBaseEntity::IsNPC() const
+0x0120:  005feaf0  CBaseEntity::MyCombatCharacterPointer()
+0x0124:  005feb00  CBaseEntity::MyNextBotPointer()
+0x0128:  005feb10  CBaseEntity::GetDelay()
+0x012c:  009d1870  CBaseEntity::IsMoving()
+0x0130:  0062e540  CBaseEntity::DamageDecal(int, int)
+0x0134:  0062e0d0  CBaseEntity::DecalTrace(CGameTrace*, char const*)
+0x0138:  0062e1b0  CBaseEntity::ImpactTrace(CGameTrace*, int, char const*)
+0x013c:  005feb20  CBaseEntity::OnControls(CBaseEntity*)
+0x0140:  009d2040  CBaseEntity::HasTarget(string_t)
+0x0144:  005feb30  CBaseEntity::IsPlayer() const
+0x0148:  005feb40  CBaseEntity::IsNetClient() const
+0x014c:  005feb50  CBaseEntity::IsTemplate()
+0x0150:  005feb60  CBaseEntity::IsBaseObject() const
+0x0154:  005feb70  CBaseEntity::IsBaseTrain() const
+0x0158:  005feb80  CBaseEntity::IsCombatItem() const
+0x015c:  00629810  CBaseCombatWeapon::IsBaseCombatWeapon() const
+0x0160:  005feba0  CBaseEntity::IsWearable() const
+0x0164:  00629820  CBaseCombatWeapon::MyCombatWeaponPointer()
+0x0168:  005febc0  CBaseEntity::GetServerVehicle()
+0x016c:  009d1510  CBaseEntity::IsViewable()
+0x0170:  0082d3e0  CTFWeaponBase::ChangeTeam(int)
+0x0174:  009d1630  CBaseEntity::OnEntityEvent(EntityEvent_t, void*)
+0x0178:  005ff0e0  CBaseEntity::CanStandOn(CBaseEntity*) const
+0x017c:  005febd0  CBaseEntity::CanStandOn(edict_t*) const
+0x0180:  005fec20  CBaseEntity::GetEnemy()
+0x0184:  005fec30  CBaseEntity::GetEnemy() const
+0x0188:  0082c990  CTFWeaponBase::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
+0x018c:  009cfa70  CBaseEntity::StartTouch(CBaseEntity*)
+0x0190:  009cfac0  CBaseEntity::Touch(CBaseEntity*)
+0x0194:  009cfb50  CBaseEntity::EndTouch(CBaseEntity*)
+0x0198:  005fec40  CBaseEntity::StartBlocked(CBaseEntity*)
+0x019c:  009cfba0  CBaseEntity::Blocked(CBaseEntity*)
+0x01a0:  005fec50  CBaseEntity::EndBlocked()
+0x01a4:  006e29e0  CBaseEntity::PhysicsSimulate()
+0x01a8:  0082d0b0  CTFWeaponBase::UpdateOnRemove()
+0x01ac:  005fec60  CBaseEntity::StopLoopingSounds()
+0x01b0:  009d0450  CBaseEntity::SUB_AllowedToFade()
+0x01b4:  009b3790  CBaseAnimating::Teleport(Vector const*, QAngle const*, Vector const*)
+0x01b8:  009cff50  CBaseEntity::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
+0x01bc:  00625280  CBaseCombatWeapon::MakeTracer(Vector const&, CGameTrace const&, int)
+0x01c0:  0062f6a0  CBaseEntity::GetTracerAttachment()
+0x01c4:  00630f20  CBaseEntity::FireBullets(FireBulletsInfo_t const&)
+0x01c8:  0062f410  CBaseEntity::DoImpactEffect(CGameTrace&, int)
+0x01cc:  005fec70  CBaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo*)
+0x01d0:  0082cf30  CTFWeaponBase::Respawn()
+0x01d4:  005fec90  CBaseEntity::IsLockedByMaster()
+0x01d8:  005feca0  CBaseEntity::GetMaxHealth() const
+0x01dc:  009b0dd0  CBaseAnimating::ModifyOrAppendCriteria(AI_CriteriaSet&)
+0x01e0:  005fecb0  CBaseEntity::NetworkStateChanged_m_iMaxHealth()
+0x01e4:  005fecc0  CBaseEntity::NetworkStateChanged_m_iMaxHealth(void*)
+0x01e8:  005fecd0  CBaseEntity::NetworkStateChanged_m_iHealth()
+0x01ec:  005fece0  CBaseEntity::NetworkStateChanged_m_iHealth(void*)
+0x01f0:  005fecf0  CBaseEntity::NetworkStateChanged_m_lifeState()
+0x01f4:  005fed00  CBaseEntity::NetworkStateChanged_m_lifeState(void*)
+0x01f8:  005fed10  CBaseEntity::NetworkStateChanged_m_takedamage()
+0x01fc:  005fed20  CBaseEntity::NetworkStateChanged_m_takedamage(void*)
+0x0200:  007484d0  CTFWeaponBase::GetDamageType() const
+0x0204:  005fed30  CBaseEntity::GetDamage()
+0x0208:  005fed40  CBaseEntity::SetDamage(float)
+0x020c:  0062cb00  CBaseEntity::EyePosition()
+0x0210:  0062cb80  CBaseEntity::EyeAngles()
+0x0214:  0062cbb0  CBaseEntity::LocalEyeAngles()
+0x0218:  0062cbc0  CBaseEntity::EarPosition()
+0x021c:  009cf920  CBaseEntity::BodyTarget(Vector const&, bool)
+0x0220:  009cf960  CBaseEntity::HeadTarget(Vector const&)
+0x0224:  009d8d00  CBaseEntity::GetVectors(Vector*, Vector*, Vector*) const
+0x0228:  0062cc60  CBaseEntity::GetViewOffset() const
+0x022c:  0062cbf0  CBaseEntity::SetViewOffset(Vector const&)
+0x0230:  005fef00  CBaseEntity::GetSmoothedVelocity()
+0x0234:  009b5b80  CBaseAnimating::GetVelocity(Vector*, Vector*)
+0x0238:  009d3d90  CBaseEntity::FVisible(CBaseEntity*, int, CBaseEntity**)
+0x023c:  009d2610  CBaseEntity::FVisible(Vector const&, int, CBaseEntity**)
+0x0240:  005fed50  CBaseEntity::CanBeSeenBy(CAI_BaseNPC*)
+0x0244:  009d1090  CBaseEntity::GetAttackDamageScale(CBaseEntity*)
+0x0248:  009d0ff0  CBaseEntity::GetReceivedDamageScale(CBaseEntity*)
+0x024c:  005fed60  CBaseEntity::GetGroundVelocityToApply(Vector&)
+0x0250:  005fed90  CBaseEntity::PhysicsSplash(Vector const&, Vector const&, float, float)
+0x0254:  005feda0  CBaseEntity::Splash()
+0x0258:  0062cc70  CBaseEntity::WorldSpaceCenter() const
+0x025c:  009cfdc0  CBaseEntity::GetSoundEmissionOrigin() const
+0x0260:  00881950  CTFRocketLauncher::ModifyEmitSoundParams(EmitSound_t&)
+0x0264:  005fedb0  CBaseEntity::IsDeflectable()
+0x0268:  005fedc0  CBaseEntity::Deflected(CBaseEntity*, Vector&)
+0x026c:  0062ec20  CBaseEntity::CreateVPhysics()
+0x0270:  005fedd0  CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)
+0x0274:  0062eba0  CBaseEntity::VPhysicsDestroyObject()
+0x0278:  00630b80  CBaseEntity::VPhysicsUpdate(IPhysicsObject*)
+0x027c:  009d14b0  CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo const&)
+0x0280:  009cfc30  CBaseEntity::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
+0x0284:  005fede0  CBaseEntity::VPhysicsShadowUpdate(IPhysicsObject*)
+0x0288:  009d0ec0  CBaseEntity::VPhysicsCollision(int, gamevcollisionevent_t*)
+0x028c:  009d0eb0  CBaseEntity::VPhysicsFriction(IPhysicsObject*, float, int, int)
+0x0290:  009d9430  CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
+0x0294:  009cfc40  CBaseEntity::VPhysicsGetObjectList(IPhysicsObject**, int)
+0x0298:  009cfc70  CBaseEntity::VPhysicsIsFlesh()
+0x029c:  005fedf0  CBaseEntity::HasPhysicsAttacker(float)
+0x02a0:  006e0020  CBaseEntity::PhysicsSolidMaskForEntity() const
+0x02a4:  006e0c60  CBaseEntity::ResolveFlyCollisionCustom(CGameTrace&, Vector&)
+0x02a8:  00b48790  CBaseEntity::PerformCustomPhysics(Vector*, Vector*, QAngle*, QAngle*)
+0x02ac:  009b0c60  CBaseAnimating::GetStepOrigin() const
+0x02b0:  009b0ca0  CBaseAnimating::GetStepAngles() const
+0x02b4:  005fee00  CBaseEntity::ShouldDrawWaterImpacts()
+0x02b8:  005fee10  CBaseEntity::NetworkStateChanged_m_fFlags()
+0x02bc:  005fee20  CBaseEntity::NetworkStateChanged_m_fFlags(void*)
+0x02c0:  005fee30  CBaseEntity::NetworkStateChanged_m_nWaterLevel()
+0x02c4:  005fee40  CBaseEntity::NetworkStateChanged_m_nWaterLevel(void*)
+0x02c8:  005fee50  CBaseEntity::NetworkStateChanged_m_hGroundEntity()
+0x02cc:  005fee60  CBaseEntity::NetworkStateChanged_m_hGroundEntity(void*)
+0x02d0:  005fee70  CBaseEntity::NetworkStateChanged_m_vecBaseVelocity()
+0x02d4:  005fee80  CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void*)
+0x02d8:  005fee90  CBaseEntity::NetworkStateChanged_m_flFriction()
+0x02dc:  005feea0  CBaseEntity::NetworkStateChanged_m_flFriction(void*)
+0x02e0:  005feeb0  CBaseEntity::NetworkStateChanged_m_vecVelocity()
+0x02e4:  005feec0  CBaseEntity::NetworkStateChanged_m_vecVelocity(void*)
+0x02e8:  005feed0  CBaseEntity::NetworkStateChanged_m_vecViewOffset()
+0x02ec:  005feee0  CBaseEntity::NetworkStateChanged_m_vecViewOffset(void*)
+0x02f0:  005feef0  CBaseEntity::ShouldBlockNav() const
+0x02f4:  009b0c10  CBaseAnimating::GetIdealSpeed() const
+0x02f8:  009b0c20  CBaseAnimating::GetIdealAccel() const
+0x02fc:  009b7db0  CBaseAnimating::StudioFrameAdvance()
+0x0300:  009b1ee0  CBaseAnimating::SetSequence(int)
+0x0304:  00629710  CBaseAnimating::IsActivityFinished()
+0x0308:  009b34e0  CBaseAnimating::GetSequenceGroundSpeed(CStudioHdr*, int)
+0x030c:  00629720  CBaseAnimating::ClampRagdollForce(Vector const&, Vector*)
+0x0310:  009b1c70  CBaseAnimating::BecomeRagdollOnClient(Vector const&)
+0x0314:  009b0c00  CBaseAnimating::IsRagdoll()
+0x0318:  009b62f0  CBaseAnimating::CanBecomeRagdoll()
+0x031c:  009bab00  CBaseAnimating::GetSkeleton(CStudioHdr*, Vector*, Quaternion*, int)
+0x0320:  009b84d0  CBaseAnimating::GetBoneTransform(int, matrix3x4_t&)
+0x0324:  009b8f70  CBaseAnimating::SetupBones(matrix3x4_t*, int)
+0x0328:  009b1480  CBaseAnimating::CalculateIKLocks(float)
+0x032c:  009b6890  CBaseAnimating::DispatchAnimEvents(CBaseAnimating*)
+0x0330:  009cdf80  CBaseCombatWeapon::HandleAnimEvent(animevent_t*)
+0x0334:  009b0c50  CBaseAnimating::PopulatePoseParameters()
+0x0338:  009b4f10  CBaseAnimating::GetAttachment(int, matrix3x4_t&)
+0x033c:  009b8830  CBaseAnimating::InitBoneControllers()
+0x0340:  009b5e30  CBaseAnimating::GetGroundSpeedVelocity()
+0x0344:  009b1020  CBaseAnimating::RefreshCollisionBounds()
+0x0348:  009b1b00  CBaseAnimating::Ignite(float, bool, float, bool)
+0x034c:  009b0f60  CBaseAnimating::IgniteLifetime(float)
+0x0350:  009b0ea0  CBaseAnimating::IgniteNumHitboxFires(int)
+0x0354:  009b0de0  CBaseAnimating::IgniteHitboxFireScale(float)
+0x0358:  00629c20  CBaseAnimating::Extinguish()
+0x035c:  00629fc0  CBaseAnimating::SetLightingOriginRelative(CBaseEntity*)
+0x0360:  00629e00  CBaseAnimating::SetLightingOrigin(CBaseEntity*)
+0x0364:  00622730  CBaseCombatWeapon::GiveTo(CBaseEntity*)
+0x0368:  00657ed0  CEconEntity::CalculateVisibleClassFor(CBaseCombatCharacter*)
+0x036c:  00629750  CEconEntity::GetAttributeManager()
+0x0370:  00629770  CEconEntity::GetAttributeContainer()
+0x0374:  00629790  CEconEntity::GetAttributeOwner()
+0x0378:  006297e0  CEconEntity::GetAttributeList()
+0x037c:  008380d0  CTFWeaponBase::ReapplyProvision()
+0x0380:  00657f60  CEconEntity::UpdateBodygroups(CBaseCombatCharacter*, int)
+0x0384:  0082ce00  CTFWeaponBase::TranslateViewmodelHandActivityInternal(Activity)
+0x0388:  007484c0  CTFWeaponBase::IsPredicted() const
+0x038c:  00629840  CBaseCombatWeapon::GetSubType()
+0x0390:  00629850  CBaseCombatWeapon::SetSubType(int)
+0x0394:  0082e7b0  CTFWeaponBase::Equip(CBaseCombatCharacter*)
+0x0398:  00831110  CTFWeaponBase::Drop(Vector const&)
+0x039c:  00623600  CBaseCombatWeapon::UpdateClientData(CBasePlayer*)
+0x03a0:  006226e0  CBaseCombatWeapon::IsAllowedToSwitch()
+0x03a4:  0083f5a0  CTFWeaponBaseGun::CanBeSelected()
+0x03a8:  00830500  CTFWeaponBase::VisibleInWeaponSelection()
+0x03ac:  0082d280  CTFWeaponBase::HasAmmo()
+0x03b0:  00623060  CBaseCombatWeapon::SetPickupTouch()
+0x03b4:  00623100  CBaseCombatWeapon::DefaultTouch(CBaseEntity*)
+0x03b8:  006232a0  CBaseCombatWeapon::ShouldDisplayAltFireHUDHint()
+0x03bc:  00628c90  CBaseCombatWeapon::DisplayAltFireHudHint()
+0x03c0:  00625240  CBaseCombatWeapon::RescindAltFireHudHint()
+0x03c4:  006251a0  CBaseCombatWeapon::ShouldDisplayReloadHUDHint()
+0x03c8:  00625150  CBaseCombatWeapon::DisplayReloadHudHint()
+0x03cc:  00625110  CBaseCombatWeapon::RescindReloadHudHint()
+0x03d0:  00623370  CBaseCombatWeapon::SetViewModelIndex(int)
+0x03d4:  00832640  CTFWeaponBase::SendWeaponAnim(int)
+0x03d8:  00625080  CBaseCombatWeapon::SendViewModelAnim(int)
+0x03dc:  00624ff0  CBaseCombatWeapon::SetViewModel()
+0x03e0:  00622700  CBaseCombatWeapon::HasWeaponIdleTimeElapsed()
+0x03e4:  00623310  CBaseCombatWeapon::SetWeaponIdleTime(float)
+0x03e8:  00622720  CBaseCombatWeapon::GetWeaponIdleTime()
+0x03ec:  00623240  CBaseCombatWeapon::HasAnyAmmo()
+0x03f0:  0083f620  CTFWeaponBaseGun::HasPrimaryAmmo()
+0x03f4:  00624f10  CBaseCombatWeapon::HasSecondaryAmmo()
+0x03f8:  008377d0  CTFWeaponBase::CanHolster() const
+0x03fc:  00626990  CBaseCombatWeapon::DefaultDeploy(char*, char*, int, char*)
+0x0400:  0083f530  CTFWeaponBaseGun::CanDeploy()
+0x0404:  00836ef0  CTFWeaponBase::Deploy()
+0x0408:  0083f150  CTFWeaponBaseGun::Holster(CBaseCombatWeapon*)
+0x040c:  00629890  CBaseCombatWeapon::GetLastWeapon()
+0x0410:  0082f440  CTFWeaponBase::SetWeaponVisible(bool)
+0x0414:  00624ea0  CBaseCombatWeapon::IsWeaponVisible()
+0x0418:  00625fb0  CBaseCombatWeapon::ReloadOrSwitchWeapons()
+0x041c:  00839f00  CTFWeaponBase::OnActiveStateChanged(int)
+0x0420:  006298b0  CBaseCombatWeapon::HolsterOnDetach()
+0x0424:  006298c0  CBaseCombatWeapon::IsHolstered()
+0x0428:  0082c740  CTFWeaponBase::Detach()
+0x042c:  00627cb0  CBaseCombatWeapon::ItemPreFrame()
+0x0430:  00881460  CTFRocketLauncher::ItemPostFrame()
+0x0434:  00835900  CTFWeaponBase::ItemBusyFrame()
+0x0438:  008337b0  CTFWeaponBase::ItemHolsterFrame()
+0x043c:  00830e20  CTFWeaponBase::WeaponIdle()
+0x0440:  00622f20  CBaseCombatWeapon::HandleFireOnEmpty()
+0x0444:  0082d370  CTFWeaponBase::CanPerformSecondaryAttack() const
+0x0448:  00881320  CTFRocketLauncher::ShouldBlockPrimaryFire()
+0x044c:  00629900  CBaseCombatWeapon::IsWeaponZoomed()
+0x0450:  008338a0  CTFWeaponBase::CheckReload()
+0x0454:  00837920  CTFWeaponBase::FinishReload()
+0x0458:  0082e600  CTFWeaponBase::AbortReload()
+0x045c:  0083a900  CTFWeaponBase::Reload()
+0x0460:  00839df0  CTFWeaponBase::AutoFiresFullClip() const
+0x0464:  006246b0  CBaseCombatWeapon::UpdateAutoFire()
+0x0468:  008406f0  CTFWeaponBaseGun::PrimaryAttack()
+0x046c:  0083f840  CTFWeaponBaseGun::SecondaryAttack()
+0x0470:  006228c0  CBaseCombatWeapon::GetPrimaryAttackActivity()
+0x0474:  006228d0  CBaseCombatWeapon::GetSecondaryAttackActivity()
+0x0478:  00622810  CBaseCombatWeapon::GetDrawActivity()
+0x047c:  00629930  CBaseCombatWeapon::GetDefaultAnimSpeed()
+0x0480:  00622890  CBaseCombatWeapon::GetBulletType()
+0x0484:  0082d300  CTFWeaponBase::GetBulletSpread()
+0x0488:  00629940  CBaseCombatWeapon::GetBulletSpread(WeaponProficiency_t)
+0x048c:  00629980  CBaseCombatWeapon::GetSpreadBias(WeaponProficiency_t)
+0x0490:  006228b0  CBaseCombatWeapon::GetFireRate()
+0x0494:  00629990  CBaseCombatWeapon::GetMinBurst()
+0x0498:  006299a0  CBaseCombatWeapon::GetMaxBurst()
+0x049c:  006299b0  CBaseCombatWeapon::GetMinRestTime()
+0x04a0:  006299c0  CBaseCombatWeapon::GetMaxRestTime()
+0x04a4:  006299d0  CBaseCombatWeapon::GetRandomBurst()
+0x04a8:  006248d0  CBaseCombatWeapon::WeaponSound(WeaponSound_t, float)
+0x04ac:  006247b0  CBaseCombatWeapon::StopWeaponSound(WeaponSound_t)
+0x04b0:  006228a0  CBaseCombatWeapon::GetProficiencyValues()
+0x04b4:  00629a30  CBaseCombatWeapon::GetMaxAutoAimDeflection()
+0x04b8:  00629a40  CBaseCombatWeapon::WeaponAutoAimScale()
+0x04bc:  00629a50  CBaseCombatWeapon::StartSprinting()
+0x04c0:  00629a60  CBaseCombatWeapon::StopSprinting()
+0x04c4:  00629a70  CBaseCombatWeapon::GetDamage(float, int)
+0x04c8:  006233c0  CBaseCombatWeapon::SetActivity(Activity, float)
+0x04cc:  006228e0  CBaseCombatWeapon::AddViewKick()
+0x04d0:  006228f0  CBaseCombatWeapon::GetDeathNoticeName()
+0x04d4:  006236b0  CBaseCombatWeapon::OnPickedUp(CBaseCombatCharacter*)
+0x04d8:  00629a80  CBaseCombatWeapon::AddViewmodelBob(CBaseViewModel*, Vector&, QAngle&)
+0x04dc:  00629a90  CBaseCombatWeapon::CalcViewmodelBob()
+0x04e0:  00622920  CBaseCombatWeapon::GetControlPanelInfo(int, char const*&)
+0x04e4:  00622930  CBaseCombatWeapon::GetControlPanelClassName(int, char const*&)
+0x04e8:  00629aa0  CBaseCombatWeapon::ShouldShowControlPanels()
+0x04ec:  00629ab0  CBaseCombatWeapon::CanBePickedUpByNPCs()
+0x04f0:  00629ac0  CBaseCombatWeapon::GetSkinOverride() const
+0x04f4:  00835c70  CTFWeaponBase::GetViewModel(int) const
+0x04f8:  0082d0e0  CTFWeaponBase::GetWorldModel() const
+0x04fc:  00622d50  CBaseCombatWeapon::GetAnimPrefix() const
+0x0500:  0083a080  CTFWeaponBase::GetMaxClip1() const
+0x0504:  00622d10  CBaseCombatWeapon::GetMaxClip2() const
+0x0508:  0082c720  CTFWeaponBase::GetDefaultClip1() const
+0x050c:  00622cd0  CBaseCombatWeapon::GetDefaultClip2() const
+0x0510:  00622cb0  CBaseCombatWeapon::GetWeight() const
+0x0514:  00622c80  CBaseCombatWeapon::AllowsAutoSwitchTo() const
+0x0518:  00622c50  CBaseCombatWeapon::AllowsAutoSwitchFrom() const
+0x051c:  00839fe0  CTFWeaponBase::ForceWeaponSwitch() const
+0x0520:  00622c30  CBaseCombatWeapon::GetWeaponFlags() const
+0x0524:  00622c10  CBaseCombatWeapon::GetSlot() const
+0x0528:  00622bf0  CBaseCombatWeapon::GetPosition() const
+0x052c:  00622bd0  CBaseCombatWeapon::GetName() const
+0x0530:  00622d30  CBaseCombatWeapon::GetPrintName() const
+0x0534:  0082ccf0  CTFWeaponBase::GetShootSound(int) const
+0x0538:  00622a80  CBaseCombatWeapon::GetRumbleEffect() const
+0x053c:  006226a0  CBaseCombatWeapon::UsesClipsForAmmo1() const
+0x0540:  006226c0  CBaseCombatWeapon::UsesClipsForAmmo2() const
+0x0544:  00622680  CBaseCombatWeapon::GetEncryptionKey()
+0x0548:  00629ae0  CBaseCombatWeapon::GetPrimaryAmmoType() const
+0x054c:  00629af0  CBaseCombatWeapon::GetSecondaryAmmoType() const
+0x0550:  00748500  CTFWeaponBase::Clip1()
+0x0554:  00748540  CTFWeaponBase::Clip2()
+0x0558:  00622bb0  CBaseCombatWeapon::GetSpriteActive() const
+0x055c:  00622b90  CBaseCombatWeapon::GetSpriteInactive() const
+0x0560:  00622b70  CBaseCombatWeapon::GetSpriteAmmo() const
+0x0564:  00622b50  CBaseCombatWeapon::GetSpriteAmmo2() const
+0x0568:  00622b30  CBaseCombatWeapon::GetSpriteCrosshair() const
+0x056c:  00622b10  CBaseCombatWeapon::GetSpriteAutoaim() const
+0x0570:  00622af0  CBaseCombatWeapon::GetSpriteZoomedCrosshair() const
+0x0574:  00622ad0  CBaseCombatWeapon::GetSpriteZoomedAutoaim() const
+0x0578:  00622940  CBaseCombatWeapon::ActivityOverride(Activity, bool*)
+0x057c:  0082c840  CTFWeaponBase::ActivityList(int&)
+0x0580:  006244a0  CBaseCombatWeapon::PoseParameterOverride(bool)
+0x0584:  00629b30  CBaseCombatWeapon::PoseParamList(int&)
+0x0588:  00629b40  CBaseCombatWeapon::ShouldUseLargeViewModelVROverride()
+0x058c:  0082c700  CTFWeaponBase::FallInit()
+0x0590:  009ceb80  CBaseCombatWeapon::FallThink()
+0x0594:  0082f4e0  CTFWeaponBase::Materialize()
+0x0598:  0082c7e0  CTFWeaponBase::CheckRespawn()
+0x059c:  009ce7c0  CBaseCombatWeapon::Delete()
+0x05a0:  009ce8a0  CBaseCombatWeapon::Kill()
+0x05a4:  00629b50  CBaseCombatWeapon::CapabilitiesGet()
+0x05a8:  009ce170  CBaseCombatWeapon::WeaponLOSCondition(Vector const&, Vector const&, bool)
+0x05ac:  009ce710  CBaseCombatWeapon::WeaponRangeAttack1Condition(float, float)
+0x05b0:  009ce790  CBaseCombatWeapon::WeaponRangeAttack2Condition(float, float)
+0x05b4:  009ce7a0  CBaseCombatWeapon::WeaponMeleeAttack1Condition(float, float)
+0x05b8:  009ce7b0  CBaseCombatWeapon::WeaponMeleeAttack2Condition(float, float)
+0x05bc:  009cddb0  CBaseCombatWeapon::Operator_FrameUpdate(CBaseCombatCharacter*)
+0x05c0:  00832840  CTFWeaponBase::Operator_HandleAnimEvent(animevent_t*, CBaseCombatCharacter*)
+0x05c4:  00629b60  CBaseCombatWeapon::Operator_ForceNPCFire(CBaseCombatCharacter*, bool)
+0x05c8:  00629b70  CBaseCombatWeapon::GetDmgAccumulator()
+0x05cc:  00629b80  CBaseCombatWeapon::CanLower()
+0x05d0:  00832890  CTFWeaponBase::Ready()
+0x05d4:  0082e460  CTFWeaponBase::Lower()
+0x05d8:  00624e00  CBaseCombatWeapon::HideThink()
+0x05dc:  00622820  CBaseCombatWeapon::CanReload()
+0x05e0:  00882fe0  CTFRocketLauncher_AirStrike::GetWeaponID() const
+0x05e4:  007484f0  CTFWeaponBase::GetCustomDamageType() const
+0x05e8:  0082d2c0  CTFWeaponBase::UsesPrimaryAmmo()
+0x05ec:  0074e470  CTFWeaponBase::UberChargeAmmoPerShot()
+0x05f0:  007497b0  CTFWeaponBase::GetOwnerViaInterface()
+0x05f4:  00748550  CTFWeaponBase::OwnerCanJump()
+0x05f8:  0082eb40  CTFWeaponBase::UpdateHands()
+0x05fc:  00748560  CTFWeaponBase::OwnerCanTaunt()
+0x0600:  008333f0  CTFWeaponBase::CanBeCritBoosted()
+0x0604:  0082ec00  CTFWeaponBase::UpdateExtraWearables()
+0x0608:  0082dc20  CTFWeaponBase::ExtraWearableEquipped(CTFWearable*)
+0x060c:  0082de30  CTFWeaponBase::ExtraWearableViewModelEquipped(CTFWearable*)
+0x0610:  00748570  CTFWeaponBase::HideAttachmentsAndShowBodygroupsWhenPerformingWeaponIndependentTaunt() const
+0x0614:  0082e040  CTFWeaponBase::RemoveExtraWearables()
+0x0618:  00881800  CTFRocketLauncher::Misfire()
+0x061c:  0082c750  CTFWeaponBase::FireFullClipAtOnce()
+0x0620:  00835d50  CTFWeaponBase::CalcIsAttackCriticalHelper()
+0x0624:  008310c0  CTFWeaponBase::CalcIsAttackCriticalHelperNoCrits()
+0x0628:  00839e30  CTFWeaponBase::GetPenetrateType() const
+0x062c:  00837a80  CTFWeaponBase::GetProjectileFireSetup(CTFPlayer*, Vector, Vector*, QAngle*, bool, float)
+0x0630:  008399b0  CTFWeaponBase::GetSpreadAngles()
+0x0634:  00748580  CTFWeaponBase::IsFiring() const
+0x0638:  0082c9a0  CTFWeaponBase::AreRandomCritsEnabled()
+0x063c:  00881440  CTFRocketLauncher::DefaultReload(int, int, int)
+0x0640:  0082c780  CTFWeaponBase::IsReloading() const
+0x0644:  00881840  CTFRocketLauncher::CheckReloadMisfire()
+0x0648:  007485a0  CTFWeaponBase::CanDrop()
+0x064c:  007485b0  CTFWeaponBase::AllowTaunts()
+0x0650:  00830450  CTFWeaponBase::GetActivityWeaponRole() const
+0x0654:  00749660  CTFWeaponBase::GetViewModelWeaponRole()
+0x0658:  007485c0  CTFWeaponBase::AddAssociatedObject(CBaseObject*)
+0x065c:  007485d0  CTFWeaponBase::RemoveAssociatedObject(CBaseObject*)
+0x0660:  008382a0  CTFWeaponBase::ApplyOnHitAttributes(CBaseEntity*, CTFPlayer*, CTakeDamageInfo const&)
+0x0664:  0083aff0  CTFWeaponBase::ApplyPostHitEffects(CTakeDamageInfo const&, CTFPlayer*)
+0x0668:  00838180  CTFWeaponBase::ApplyOnInjuredAttributes(CTFPlayer*, CTFPlayer*, CTakeDamageInfo const&)
+0x066c:  008311b0  CTFWeaponBase::DeflectProjectiles()
+0x0670:  0082c9c0  CTFWeaponBase::DeflectPlayer(CTFPlayer*, CTFPlayer*, Vector&, Vector&, Vector&)
+0x0674:  0082d490  CTFWeaponBase::DeflectEntity(CBaseEntity*, CTFPlayer*, Vector&, Vector&, Vector&)
+0x0678:  007485e0  CTFWeaponBase::PlayDeflectionSound(bool)
+0x067c:  007485f0  CTFWeaponBase::GetDeflectionSize()
+0x0680:  00748610  CTFWeaponBase::GetJarateTime()
+0x0684:  00831f30  CTFWeaponBase::CanAttack()
+0x0688:  00748620  CTFWeaponBase::GetCanAttackFlags() const
+0x068c:  00835330  CTFWeaponBase::WeaponReset()
+0x0690:  00833a80  CTFWeaponBase::WeaponRegenerate()
+0x0694:  00748630  CTFWeaponBase::GetMuzzleFlashEffectName_3rd()
+0x0698:  00748640  CTFWeaponBase::GetMuzzleFlashEffectName_1st()
+0x069c:  008304c0  CTFWeaponBase::GetMuzzleFlashModel()
+0x06a0:  008304a0  CTFWeaponBase::GetMuzzleFlashModelLifetime()
+0x06a4:  008307f0  CTFWeaponBase::GetMuzzleFlashParticleEffect()
+0x06a8:  0082c7a0  CTFWeaponBase::GetInventoryModel()
+0x06ac:  00748650  CTFWeaponBase::GetSpeedMod()
+0x06b0:  00831e90  CTFWeaponBase::CanFireCriticalShot(bool)
+0x06b4:  00832110  CTFWeaponBase::CanFireRandomCriticalShot(float)
+0x06b8:  0082c960  CTFWeaponBase::OnControlStunned()
+0x06bc:  00748660  CTFWeaponBase::HideWhileStunned()
+0x06c0:  008316b0  CTFWeaponBase::IsViewModelFlipped()
+0x06c4:  00748670  CTFWeaponBase::GetMaxHealthMod()
+0x06c8:  00748680  CTFWeaponBase::GetLastDeployTime()
+0x06cc:  0083b8d0  CTFWeaponBase::IsEnergyWeapon() const
+0x06d0:  0085b610  CTFRocketLauncher::IsBlastImpactWeapon() const
+0x06d4:  007486a0  CTFWeaponBase::Energy_GetShotCost() const
+0x06d8:  007486b0  CTFWeaponBase::Energy_GetRechargeCost() const
+0x06dc:  0082c9d0  CTFWeaponBase::GetParticleColor(int)
+0x06e0:  00840dc0  CTFWeaponBaseGun::HasLastShotCritical()
+0x06e4:  007486c0  CTFWeaponBase::UseServerRandomSeed() const
+0x06e8:  0082c7f0  CTFWeaponBase::OnBulletFire(int)
+0x06ec:  00882910  CTFRocketLauncher_AirStrike::OnPlayerKill(CTFPlayer*, CTakeDamageInfo const&)
+0x06f0:  007486d0  CTFWeaponBase::GetLastHitTime()
+0x06f4:  007486e0  CTFWeaponBase::GetDropSkinOverride()
+0x06f8:  00831fa0  CTFWeaponBase::GetSkin()
+0x06fc:  008376b0  CTFWeaponBase::GetEffectBarProgress()
+0x0700:  007486f0  CTFWeaponBase::CanPickupOtherWeapon() const
+0x0704:  00748700  CTFWeaponBase::GetEffectBarAmmo()
+0x0708:  0083b8f0  CTFWeaponBase::InternalGetEffectBarRechargeTime()
+0x070c:  00835b40  CTFWeaponBase::CanInspect() const
+0x0710:  0083efc0  CTFWeaponBaseGun::DoFireEffects()
+0x0714:  00748710  CTFWeaponBaseGun::ShouldDoMuzzleFlash()
+0x0718:  00881340  CTFRocketLauncher::GetWeaponProjectileType() const
+0x071c:  008827d0  CTFRocketLauncher::FireProjectile(CTFPlayer*)
+0x0720:  0083f900  CTFWeaponBaseGun::RemoveProjectileAmmo(CTFPlayer*)
+0x0724:  00748740  CTFWeaponBaseGun::ModifyProjectile(CBaseEntity*)
+0x0728:  0083f400  CTFWeaponBaseGun::FireBullet(CTFPlayer*)
+0x072c:  00840f90  CTFWeaponBaseGun::FirePipeBomb(CTFPlayer*, int)
+0x0730:  008417b0  CTFWeaponBaseGun::FireArrow(CTFPlayer*, ProjectileType_t)
+0x0734:  0083ef40  CTFWeaponBaseGun::FireJar(CTFPlayer*)
+0x0738:  0083ef50  CTFWeaponBaseGun::FireFlameRocket(CTFPlayer*)
+0x073c:  0083f1c0  CTFWeaponBaseGun::FireEnergyBall(CTFPlayer*, bool)
+0x0740:  00840570  CTFWeaponBaseGun::GetWeaponSpread()
+0x0744:  0083f6f0  CTFWeaponBaseGun::GetCustomProjectileModel(CAttribute_String*)
+0x0748:  00841e40  CTFWeaponBaseGun::GetProjectileSpeed()
+0x074c:  00748750  CTFWeaponBaseGun::GetProjectileGravity()
+0x0750:  00748760  CTFWeaponBaseGun::GetProjectileSpread()
+0x0754:  008416f0  CTFWeaponBaseGun::GetAmmoPerShot()
+0x0758:  008401e0  CTFWeaponBaseGun::GetProjectileDamage()
+0x075c:  00748770  CTFWeaponBaseGun::ShouldPlayFireAnim()
+0x0760:  0083f0d0  CTFWeaponBaseGun::ZoomIn()
+0x0764:  0083f030  CTFWeaponBaseGun::ZoomOut()
+0x0768:  0083f6a0  CTFWeaponBaseGun::PlayWeaponShootSound()
+0x076c:  00841770  CTFWeaponBaseGun::ShouldRemoveDisguiseOnPrimaryAttack() const
+0x0770:  00748780  CTFWeaponBaseGun::ShouldRemoveInvisibilityOnPrimaryAttack() const
+0x0774:  008813e0  CTFRocketLauncher_AirStrike::GetCount()
+0x0778:  fffffb78  (unknown)
+0x077c:  01113b24  typeinfo for CTFRocketLauncher_AirStrike
+0x0780:  00629740  non-virtual thunk to CEconEntity::GetAttributeManager()
+0x0784:  00629760  non-virtual thunk to CEconEntity::GetAttributeContainer()
+0x0788:  00629780  non-virtual thunk to CEconEntity::GetAttributeOwner()
+0x078c:  006297d0  non-virtual thunk to CEconEntity::GetAttributeList()
+0x0790:  008380c0  non-virtual thunk to CTFWeaponBase::ReapplyProvision()
+0x0794:  fffff95c  (unknown)
+0x0798:  01113b24  typeinfo for CTFRocketLauncher_AirStrike
+0x079c:  007497a0  non-virtual thunk to CTFWeaponBase::GetOwnerViaInterface()
