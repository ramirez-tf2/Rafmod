CVEngineServer22

+0x0000:  001cd650  CVEngineServer::ChangeLevel(char const*, char const*)
+0x0004:  001cc980  CVEngineServer22::IsMapValid(char const*)
+0x0008:  001cc640  CVEngineServer::IsDedicatedServer()
+0x000c:  001cc650  CVEngineServer::IsInEditMode()
+0x0010:  001cdba0  CVEngineServer::PrecacheModel(char const*, bool)
+0x0014:  001cda60  CVEngineServer::PrecacheSentenceFile(char const*, bool)
+0x0018:  001cdc00  CVEngineServer::PrecacheDecal(char const*, bool)
+0x001c:  001cdb40  CVEngineServer::PrecacheGeneric(char const*, bool)
+0x0020:  001cdb20  CVEngineServer::IsModelPrecached(char const*) const
+0x0024:  001cdb00  CVEngineServer::IsDecalPrecached(char const*) const
+0x0028:  001cdae0  CVEngineServer::IsGenericPrecached(char const*) const
+0x002c:  001cc940  CVEngineServer::GetClusterForOrigin(Vector const&)
+0x0030:  001cdd20  CVEngineServer::GetPVSForCluster(int, int, unsigned char*)
+0x0034:  001cce80  CVEngineServer::CheckOriginInPVS(Vector const&, unsigned char const*, int)
+0x0038:  001cda30  CVEngineServer::CheckBoxInPVS(Vector const&, Vector const&, unsigned char const*, int)
+0x003c:  001cc690  CVEngineServer::GetPlayerUserId(edict_t const*)
+0x0040:  001cc700  CVEngineServer::GetPlayerNetworkIDString(edict_t const*)
+0x0044:  001cc760  CVEngineServer::GetEntityCount()
+0x0048:  001cce30  CVEngineServer::IndexOfEdict(edict_t const*)
+0x004c:  001cda00  CVEngineServer::PEntityOfEntIndex(int)
+0x0050:  001cc770  CVEngineServer::GetPlayerNetInfo(int)
+0x0054:  001cd9c0  CVEngineServer::CreateEdict(int)
+0x0058:  001cd990  CVEngineServer::RemoveEdict(edict_t*)
+0x005c:  001cd980  CVEngineServer::PvAllocEntPrivateData(long)
+0x0060:  001cc960  CVEngineServer::FreeEntPrivateData(void*)
+0x0064:  001cc7b0  CVEngineServer::SaveAllocMemory(unsigned int, unsigned int)
+0x0068:  001cc7c0  CVEngineServer::SaveFreeMemory(void*)
+0x006c:  001ce5e0  CVEngineServer::EmitAmbientSound(int, Vector const&, char const*, float, soundlevel_t, int, int, float)
+0x0070:  001cd8a0  CVEngineServer::FadeClientVolume(edict_t const*, float, float, float, float)
+0x0074:  001cd850  CVEngineServer::SentenceGroupPick(int, char*, int)
+0x0078:  001cd7e0  CVEngineServer::SentenceGroupPickSequential(int, char*, int, int, int)
+0x007c:  001cd780  CVEngineServer::SentenceIndexFromName(char const*)
+0x0080:  001cd770  CVEngineServer::SentenceNameFromIndex(int)
+0x0084:  001cd730  CVEngineServer::SentenceGroupIndexFromName(char const*)
+0x0088:  001cd720  CVEngineServer::SentenceGroupNameFromIndex(int)
+0x008c:  001cd710  CVEngineServer::SentenceLength(int)
+0x0090:  001cd600  CVEngineServer::ServerCommand(char const*)
+0x0094:  001cd5f0  CVEngineServer::ServerExecute()
+0x0098:  001cd510  CVEngineServer::ClientCommand(edict_t*, char const*, ...)
+0x009c:  001cd3d0  CVEngineServer::LightStyle(int, char const*)
+0x00a0:  001cd340  CVEngineServer::StaticDecal(Vector const&, int, int, int, bool)
+0x00a4:  001cd320  CVEngineServer::Message_DetermineMulticastRecipients(bool, Vector const&, CBitVec<255>&)
+0x00a8:  001cd290  CVEngineServer::EntityMessageBegin(int, ServerClass*, bool)
+0x00ac:  001cd1f0  CVEngineServer::UserMessageBegin(IRecipientFilter*, int)
+0x00b0:  001ce3e0  CVEngineServer::MessageEnd()
+0x00b4:  001ccef0  CVEngineServer::ClientPrintf(edict_t*, char const*)
+0x00b8:  001cc7d0  CVEngineServer::Con_NPrintf(int, char const*, ...)
+0x00bc:  001cc7e0  CVEngineServer::Con_NXPrintf(con_nprint_s const*, char const*, ...)
+0x00c0:  001ccd90  CVEngineServer::SetView(edict_t const*, edict_t const*)
+0x00c4:  001cd1b0  CVEngineServer::Time()
+0x00c8:  001cccc0  CVEngineServer::CrosshairAngle(edict_t const*, float, float)
+0x00cc:  001cd190  CVEngineServer::GetGameDir(char*, int)
+0x00d0:  001cd170  CVEngineServer::CompareFileTime(char const*, char const*, int*)
+0x00d4:  001cd150  CVEngineServer::LockNetworkStringTables(bool)
+0x00d8:  001cd120  CVEngineServer::CreateFakeClient(char const*)
+0x00dc:  001ce150  CVEngineServer::GetClientConVarValue(int, char const*)
+0x00e0:  001cd100  CVEngineServer::ParseFile(char const*, char*, int)
+0x00e4:  001cd0e0  CVEngineServer::CopyFile(char const*, char const*)
+0x00e8:  001cd0b0  CVEngineServer::ResetPVS(unsigned char*, int)
+0x00ec:  001cd0d0  CVEngineServer::AddOriginToPVS(Vector const&)
+0x00f0:  001cd090  CVEngineServer::SetAreaPortalState(int, int)
+0x00f4:  001cc130  CVEngineServer::PlaybackTempEntity(IRecipientFilter&, float, void const*, SendTable const*, int)
+0x00f8:  001cd6e0  CVEngineServer::CheckHeadnodeVisible(int, unsigned char const*, int)
+0x00fc:  001cbac0  CVEngineServer::CheckAreasConnected(int, int)
+0x0100:  001cbaa0  CVEngineServer::GetArea(Vector const&)
+0x0104:  001cba80  CVEngineServer::GetAreaBits(int, unsigned char*, int)
+0x0108:  001cba60  CVEngineServer::GetAreaPortalPlane(Vector const&, int, VPlane*)
+0x010c:  001cb990  CVEngineServer::LoadGameState(char const*, bool)
+0x0110:  001cb9a0  CVEngineServer::LoadAdjacentEnts(char const*, char const*)
+0x0114:  001cb9b0  CVEngineServer::ClearSaveDir()
+0x0118:  001cba30  CVEngineServer::GetMapEntitiesString()
+0x011c:  001cba50  CVEngineServer::TextMessageGet(char const*)
+0x0120:  001cba40  CVEngineServer::LogPrint(char const*)
+0x0124:  001cbc70  CVEngineServer::BuildEntityClusterList(edict_t*, PVSInfo_t*)
+0x0128:  001cba00  CVEngineServer::SolidMoved(edict_t*, ICollideable*, Vector const*, bool)
+0x012c:  001cb9e0  CVEngineServer::TriggerMoved(edict_t*, bool)
+0x0130:  001cca00  CVEngineServer::CreateSpatialPartition(Vector const&, Vector const&)
+0x0134:  001cc9f0  CVEngineServer::DestroySpatialPartition(ISpatialPartition*)
+0x0138:  001cebf0  CVEngineServer::DrawMapToScratchPad(IScratchPad3D*, unsigned long)
+0x013c:  001cd020  CVEngineServer::GetEntityTransmitBitsForClient(int)
+0x0140:  001cc820  CVEngineServer::IsPaused()
+0x0144:  001cd1e0  CVEngineServer::ForceExactFile(char const*)
+0x0148:  001cdaa0  CVEngineServer::ForceModelBounds(char const*, Vector const&, Vector const&)
+0x014c:  001cb9c0  CVEngineServer::ClearSaveDirAfterClientLoad()
+0x0150:  001ccc40  CVEngineServer::SetFakeClientConVarValue(edict_t*, char const*, char const*)
+0x0154:  001cda80  CVEngineServer::ForceSimpleMaterial(char const*)
+0x0158:  001cc660  CVEngineServer::IsInCommentaryMode()
+0x015c:  001cd070  CVEngineServer::SetAreaPortalStates(int const*, int const*, int)
+0x0160:  001cdcb0  CVEngineServer::NotifyEdictFlagsChange(int)
+0x0164:  001cdc60  CVEngineServer::GetPrevCheckTransmitInfo(edict_t*)
+0x0168:  001cc830  CVEngineServer::GetSharedEdictChangeInfo()
+0x016c:  001ccfb0  CVEngineServer::AllowImmediateEdictReuse()
+0x0170:  001cc670  CVEngineServer::IsInternalBuild()
+0x0174:  001ccbd0  CVEngineServer::GetChangeAccessor(edict_t const*)
+0x0178:  001cc840  CVEngineServer::GetMostRecentlyLoadedFileName()
+0x017c:  001cc850  CVEngineServer::GetSaveFileName()
+0x0180:  001cc860  CVEngineServer::MultiplayerEndGame()
+0x0184:  001cc870  CVEngineServer::ChangeTeam(char const*)
+0x0188:  001cbb40  CVEngineServer::CleanUpEntityClusterList(PVSInfo_t*)
+0x018c:  001cc880  CVEngineServer::SetAchievementMgr(IAchievementMgr*)
+0x0190:  001cc890  CVEngineServer::GetAchievementMgr()
+0x0194:  001ccfa0  CVEngineServer::GetAppID()
+0x0198:  001cb9d0  CVEngineServer::IsLowViolence()
+0x019c:  001ccfc0  CVEngineServer::StartQueryCvarValue(edict_t*, char const*)
+0x01a0:  001ccf50  CVEngineServer::InsertServerCommand(char const*)
+0x01a4:  001cce10  CVEngineServer::GetPlayerInfo(int, player_info_s*)
+0x01a8:  001ccc00  CVEngineServer::IsClientFullyAuthenticated(edict_t*)
+0x01ac:  001cdcf0  CVEngineServer::SetDedicatedServerBenchmarkMode(bool)
+0x01b0:  001cc8a0  CVEngineServer::SetGamestatsData(CGamestatsData*)
+0x01b4:  001cc8b0  CVEngineServer::GetGamestatsData()
+0x01b8:  001ccba0  CVEngineServer::GetClientSteamID(edict_t*)
+0x01bc:  001ce1c0  CVEngineServer::GetGameServerSteamID()
+0x01c0:  001cd430  CVEngineServer::ClientCommandKeyValues(edict_t*, KeyValues*)
+0x01c4:  001cdf70  CVEngineServer::GetClientSteamIDByPlayerIndex(int)
+0x01c8:  001cc8d0  CVEngineServer::GetClusterCount()
+0x01cc:  001cca40  CVEngineServer::GetAllClusterBounds(bbox_t*, int)
+0x01d0:  001cc7f0  CVEngineServer::CreateFakeClientEx(char const*, bool)
+0x01d4:  001cca30  CVEngineServer::GetServerVersion() const
+0x01d8:  001cca20  CVEngineServer::GetServerTime() const
+0x01dc:  001cc8f0  CVEngineServer::GetIServer()
+0x01e0:  001ce0f0  CVEngineServer::IsPlayerNameLocked(edict_t const*)
+0x01e4:  001ce070  CVEngineServer::CanPlayerChangeName(edict_t const*)
+0x01e8:  001cdda0  CVEngineServer::FindMap(char*, int)
+0x01ec:  001cc8c0  CVEngineServer::GetReplay()
