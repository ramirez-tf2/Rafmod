00000000       F *UND*	00000000              abort@@GLIBC_2.0
00000000       F *UND*	00000000              accept@@GLIBC_2.0
00000000       F *UND*	00000000              access@@GLIBC_2.0
00000000       F *UND*	00000000              acosf@@GLIBC_2.0
00000000       F *UND*	00000000              acos@@GLIBC_2.0
00000000       F *UND*	00000000              ApproximateProcessMemoryUsage
00000000       F *UND*	00000000              asin@@GLIBC_2.0
00000000       F *UND*	00000000              atan2f@@GLIBC_2.0
00000000       F *UND*	00000000              atan2@@GLIBC_2.0
00000000       F *UND*	00000000              atan@@GLIBC_2.0
00000000       F *UND*	00000000              bind@@GLIBC_2.0
00000000       F *UND*	00000000              CallAssertFailedNotifyFunc
00000000       F *UND*	00000000              calloc@@GLIBC_2.0
00000000       F *UND*	00000000              cbrtf@@GLIBC_2.0
00000000       F *UND*	00000000              CClockSpeedInit::Init()
00000000       F *UND*	00000000              chdir@@GLIBC_2.0
00000000       F *UND*	00000000              chmod@@GLIBC_2.0
00000000       F *UND*	00000000              chown@@GLIBC_2.1
00000000       F *UND*	00000000              closedir@@GLIBC_2.0
00000000       F *UND*	00000000              close@@GLIBC_2.0
00000000       F *UND*	00000000              CommandLine_Tier0
00000000       F *UND*	00000000              COM_TimestampedLog
00000000       F *UND*	00000000              ConDMsg
00000000       F *UND*	00000000              connect@@GLIBC_2.0
00000000       F *UND*	00000000              cosf@@GLIBC_2.0
00000000       F *UND*	00000000              cos@@GLIBC_2.0
00000000       F *UND*	00000000              CreateSimpleThread
00000000       F *UND*	00000000              CThread::~CThread()
00000000       F *UND*	00000000              CThread::CThread()
00000000       F *UND*	00000000              CThreadEvent::CThreadEvent(bool)
00000000       F *UND*	00000000              CThreadEvent::Set()
00000000       F *UND*	00000000              CThread::GetThreadProc()
00000000       F *UND*	00000000              CThread::Init()
00000000       F *UND*	00000000              CThread::IsAlive()
00000000       F *UND*	00000000              CThread::IsThreadRunning()
00000000       F *UND*	00000000              CThreadLocalBase::~CThreadLocalBase()
00000000       F *UND*	00000000              CThreadLocalBase::CThreadLocalBase()
00000000       F *UND*	00000000              CThreadLocalBase::Set(void*)
00000000       F *UND*	00000000              CThread::OnExit()
00000000       F *UND*	00000000              CThreadRWLock::LockForWrite()
00000000       F *UND*	00000000              CThreadRWLock::UnlockWrite()
00000000       F *UND*	00000000              CThreadRWLock::WaitForRead()
00000000       F *UND*	00000000              CThreadSpinRWLock::LockForRead()
00000000       F *UND*	00000000              CThreadSpinRWLock::UnlockRead()
00000000       F *UND*	00000000              CThreadSpinRWLock::UnlockWrite()
00000000       F *UND*	00000000              CThreadSyncObject::~CThreadSyncObject()
00000000       F *UND*	00000000              CUniformRandomStream::CUniformRandomStream()
00000000       F *UND*	00000000              CUniformRandomStream::SetSeed(int)
00000000       F *UND*	00000000              CVProfile::~CVProfile()
00000000       F *UND*	00000000              CVProfile::CVProfile()
00000000       F *UND*	00000000              CVProfile::GetNumBudgetGroups()
00000000       F *UND*	00000000              CVProfile::ResetCounters(CounterGroup_t)
00000000       F *UND*	00000000              CVProfile::Term()
00000000       F *UND*	00000000              CVProfNode::EnterScope()
00000000       F *UND*	00000000              CVProfNode::ExitScope()
00000000       F *UND*	00000000              CVProfNode::MarkFrame()
00000000       F *UND*	00000000              CVProfNode::Pause()
00000000       F *UND*	00000000              CVProfNode::Reset()
00000000       F *UND*	00000000              CVProfNode::ResetPeak()
00000000       F *UND*	00000000              CVProfNode::Resume()
00000000       F *UND*	00000000              __cxa_atexit@@GLIBC_2.1.3
00000000       F *UND*	00000000              __cxa_begin_catch@@CXXABI_1.3
00000000       F *UND*	00000000              __cxa_end_catch@@CXXABI_1.3
00000000       F *UND*	00000000              __cxa_guard_abort@@CXXABI_1.3
00000000       F *UND*	00000000              __cxa_guard_acquire@@CXXABI_1.3
00000000       F *UND*	00000000              __cxa_guard_release@@CXXABI_1.3
00000000       F *UND*	00000000              __cxa_pure_virtual@@CXXABI_1.3
00000000       F *UND*	00000000              DevMsg
00000000       F *UND*	00000000              DevWarning
00000000       F *UND*	00000000              dlclose@@GLIBC_2.0
00000000       F *UND*	00000000              dlerror@@GLIBC_2.0
00000000       F *UND*	00000000              dl_iterate_phdr@@GLIBC_2.2.4
00000000       F *UND*	00000000              dlopen@@GLIBC_2.1
00000000       F *UND*	00000000              dlsym@@GLIBC_2.0
00000000       F *UND*	00000000              DoNewAssertDialog
00000000       F *UND*	00000000              dup@@GLIBC_2.0
00000000       F *UND*	00000000              __dynamic_cast@@CXXABI_1.3
00000000       F *UND*	00000000              __errno_location@@GLIBC_2.0
00000000       F *UND*	00000000              Error
00000000       F *UND*	00000000              _exit@@GLIBC_2.0
00000000       F *UND*	00000000              _ExitOnFatalAssert
00000000       F *UND*	00000000              exp@@GLIBC_2.0
00000000       F *UND*	00000000              fclose@@GLIBC_2.1
00000000       F *UND*	00000000              ferror@@GLIBC_2.0
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
00000000       F *UND*	00000000              fopen64@@GLIBC_2.1
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
00000000       F *UND*	00000000              fprintf@@GLIBC_2.0
00000000       F *UND*	00000000              fputs@@GLIBC_2.0
00000000       F *UND*	00000000              fread@@GLIBC_2.0
00000000       F *UND*	00000000              free@@GLIBC_2.0
00000000       F *UND*	00000000              freopen@@GLIBC_2.0
00000000       F *UND*	00000000              fseek@@GLIBC_2.0
00000000       F *UND*	00000000              ftell@@GLIBC_2.0
00000000       F *UND*	00000000              futimes@@GLIBC_2.3
00000000       F *UND*	00000000              fwrite@@GLIBC_2.0
00000000       F *UND*	00000000              __fxstat@@GLIBC_2.0
00000000       F *UND*	00000000              GetCPUFrequencyResults
00000000       F *UND*	00000000              GetCPUInformation
00000000       F *UND*	00000000              getcwd@@GLIBC_2.0
00000000       F *UND*	00000000              getenv@@GLIBC_2.0
00000000       F *UND*	00000000              gethostbyname@@GLIBC_2.0
00000000       F *UND*	00000000              gethostname@@GLIBC_2.0
00000000       F *UND*	00000000              getpid@@GLIBC_2.0
00000000       F *UND*	00000000              getpwuid@@GLIBC_2.0
00000000       F *UND*	00000000              getrusage@@GLIBC_2.0
00000000       F *UND*	00000000              getsockname@@GLIBC_2.0
00000000       F *UND*	00000000              getsockopt@@GLIBC_2.0
00000000       F *UND*	00000000              GetSpewOutputColor
00000000       F *UND*	00000000              getuid@@GLIBC_2.0
00000000       F *UND*	00000000              __gxx_personality_v0@@CXXABI_1.3
00000000       F *UND*	00000000              HushAsserts
00000000       F *UND*	00000000              iconv_close@@GLIBC_2.1
00000000       F *UND*	00000000              iconv@@GLIBC_2.1
00000000       F *UND*	00000000              iconv_open@@GLIBC_2.1
00000000       F *UND*	00000000              inet_addr@@GLIBC_2.0
00000000       F *UND*	00000000              ioctl@@GLIBC_2.0
00000000       F *UND*	00000000              isalnum@@GLIBC_2.0
00000000       F *UND*	00000000              ispunct@@GLIBC_2.0
00000000       F *UND*	00000000              isspace@@GLIBC_2.0
00000000       F *UND*	00000000              isupper@@GLIBC_2.0
00000000       F *UND*	00000000              iswcntrl@@GLIBC_2.0
00000000       F *UND*	00000000              iswspace@@GLIBC_2.0
00000000       F *UND*	00000000              KeyValuesSystem
00000000       F *UND*	00000000              lchown@@GLIBC_2.0
00000000       F *UND*	00000000              link@@GLIBC_2.0
00000000       F *UND*	00000000              listen@@GLIBC_2.0
00000000       F *UND*	00000000              localtime@@GLIBC_2.0
00000000       F *UND*	00000000              Log
00000000       F *UND*	00000000              log10@@GLIBC_2.0
00000000       F *UND*	00000000              log@@GLIBC_2.0
00000000       F *UND*	00000000              longjmp@@GLIBC_2.0
00000000       F *UND*	00000000              lseek64@@GLIBC_2.2
00000000       F *UND*	00000000              lseek@@GLIBC_2.0
00000000       F *UND*	00000000              __lxstat64@@GLIBC_2.2
00000000       F *UND*	00000000              __lxstat@@GLIBC_2.0
00000000       F *UND*	00000000              mallinfo@@GLIBC_2.0
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
00000000       F *UND*	00000000              mbstowcs@@GLIBC_2.0
00000000       F *UND*	00000000              memalign@@GLIBC_2.0
00000000       F *UND*	00000000              MemAllocScratch
00000000       F *UND*	00000000              memchr@@GLIBC_2.0
00000000       F *UND*	00000000              memcpy@@GLIBC_2.0
00000000       F *UND*	00000000              MemFreeScratch
00000000       F *UND*	00000000              memmove@@GLIBC_2.0
00000000       F *UND*	00000000              memset@@GLIBC_2.0
00000000       F *UND*	00000000              MinidumpUserStreamInfoGet
00000000       F *UND*	00000000              MinidumpUserStreamInfoSetHeader
00000000       F *UND*	00000000              mkdir@@GLIBC_2.0
00000000       F *UND*	00000000              mkfifo@@GLIBC_2.0
00000000       F *UND*	00000000              mount@@GLIBC_2.0
00000000       F *UND*	00000000              Msg
00000000       F *UND*	00000000              open64@@GLIBC_2.2
00000000       F *UND*	00000000              opendir@@GLIBC_2.0
00000000       F *UND*	00000000              open@@GLIBC_2.0
00000000       F *UND*	00000000              Plat_BeginWatchdogTimer
00000000       F *UND*	00000000              Plat_DebugString
00000000       F *UND*	00000000              Plat_EndWatchdogTimer
00000000       F *UND*	00000000              Plat_FloatTime
00000000       F *UND*	00000000              Plat_GetPagedPoolInfo
00000000       F *UND*	00000000              Plat_IsInDebugSession
00000000       F *UND*	00000000              Plat_localtime
00000000       F *UND*	00000000              Plat_MSTime
00000000       F *UND*	00000000              Plat_SetBenchmarkMode
00000000       F *UND*	00000000              Plat_SetWatchdogHandlerFunction
00000000       F *UND*	00000000              pow@@GLIBC_2.0
00000000       F *UND*	00000000              printf@@GLIBC_2.0
00000000       F *UND*	00000000              pthread_mutexattr_init@@GLIBC_2.0
00000000       F *UND*	00000000              pthread_mutexattr_settype@@GLIBC_2.1
00000000       F *UND*	00000000              pthread_mutex_destroy@@GLIBC_2.0
00000000       F *UND*	00000000              pthread_mutex_init@@GLIBC_2.0
00000000       F *UND*	00000000              pthread_mutex_lock@@GLIBC_2.0
00000000       F *UND*	00000000              pthread_mutex_unlock@@GLIBC_2.0
00000000       F *UND*	00000000              puts@@GLIBC_2.0
00000000       F *UND*	00000000              qsort@@GLIBC_2.0
00000000       F *UND*	00000000              raise@@GLIBC_2.0
00000000       F *UND*	00000000              RandomFloat
00000000       F *UND*	00000000              RandomFloatExp
00000000       F *UND*	00000000              RandomInt
00000000       F *UND*	00000000              RandomSeed
00000000       F *UND*	00000000              readdir@@GLIBC_2.0
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000       F *UND*	00000000              realloc@@GLIBC_2.0
00000000       F *UND*	00000000              realpath@@GLIBC_2.3
00000000       F *UND*	00000000              recv@@GLIBC_2.0
00000000       F *UND*	00000000              ReleaseThreadHandle
00000000       F *UND*	00000000              rename@@GLIBC_2.0
00000000       F *UND*	00000000              rmdir@@GLIBC_2.0
00000000       F *UND*	00000000              scandir@@GLIBC_2.0
00000000       F *UND*	00000000              select@@GLIBC_2.0
00000000       F *UND*	00000000              send@@GLIBC_2.0
00000000       F *UND*	00000000              sendto@@GLIBC_2.0
00000000       F *UND*	00000000              setenv@@GLIBC_2.0
00000000       F *UND*	00000000              _setjmp@@GLIBC_2.0
00000000       F *UND*	00000000              setsockopt@@GLIBC_2.0
00000000       F *UND*	00000000              ShouldUseNewAssertDialog
00000000       F *UND*	00000000              siglongjmp@@GLIBC_2.0
00000000       F *UND*	00000000              signal@@GLIBC_2.0
00000000       F *UND*	00000000              __sigsetjmp@@GLIBC_2.0
00000000       F *UND*	00000000              sincosf@@GLIBC_2.1
00000000       F *UND*	00000000              sincos@@GLIBC_2.1
00000000       F *UND*	00000000              sinf@@GLIBC_2.0
00000000       F *UND*	00000000              sin@@GLIBC_2.0
00000000       F *UND*	00000000              snprintf@@GLIBC_2.0
00000000       F *UND*	00000000              socket@@GLIBC_2.0
00000000       F *UND*	00000000              SpewActivate
00000000       F *UND*	00000000              _SpewInfo
00000000       F *UND*	00000000              _SpewMessage
00000000       F *UND*	00000000              SpewOutputFunc
00000000       F *UND*	00000000              __sprintf_chk@@GLIBC_2.3.4
00000000       F *UND*	00000000              sprintf@@GLIBC_2.0
00000000       F *UND*	00000000              sscanf@@GLIBC_2.0
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
00000000       F *UND*	00000000              std::string::_M_leak_hard()@@GLIBCXX_3.4
00000000       F *UND*	00000000              std::terminate()@@GLIBCXX_3.4
00000000       F *UND*	00000000              SteamAPI_RegisterCallback
00000000       F *UND*	00000000              SteamAPI_SetBreakpadAppID
00000000       F *UND*	00000000              SteamAPI_SetMiniDumpComment
00000000       F *UND*	00000000              SteamAPI_SetTryCatchCallbacks
00000000       F *UND*	00000000              SteamAPI_UnregisterCallback
00000000       F *UND*	00000000              SteamAPI_UseBreakpadCrashHandler
00000000       F *UND*	00000000              SteamClient
00000000       F *UND*	00000000              SteamGameServer_GetHSteamPipe
00000000       F *UND*	00000000              SteamGameServer_GetHSteamUser
00000000       F *UND*	00000000              SteamGameServer_GetIPCCallCount
00000000       F *UND*	00000000              SteamGameServer_InitSafe
00000000       F *UND*	00000000              SteamGameServer_RunCallbacks
00000000       F *UND*	00000000              SteamGameServer_Shutdown
00000000       F *UND*	00000000              strcasecmp@@GLIBC_2.0
00000000       F *UND*	00000000              strcasestr@@GLIBC_2.1
00000000       F *UND*	00000000              strcat@@GLIBC_2.0
00000000       F *UND*	00000000              strchr@@GLIBC_2.0
00000000       F *UND*	00000000              strcmp@@GLIBC_2.0
00000000       F *UND*	00000000              strcpy@@GLIBC_2.0
00000000       F *UND*	00000000              strdup@@GLIBC_2.0
00000000       F *UND*	00000000              strerror@@GLIBC_2.0
00000000       F *UND*	00000000              strftime@@GLIBC_2.0
00000000       F *UND*	00000000              strlen@@GLIBC_2.0
00000000       F *UND*	00000000              strncasecmp@@GLIBC_2.0
00000000       F *UND*	00000000              strncat@@GLIBC_2.0
00000000       F *UND*	00000000              strncpy@@GLIBC_2.0
00000000       F *UND*	00000000              strpbrk@@GLIBC_2.0
00000000       F *UND*	00000000              strrchr@@GLIBC_2.0
00000000       F *UND*	00000000              strstr@@GLIBC_2.0
00000000       F *UND*	00000000              strtod@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
00000000       F *UND*	00000000              strtoul@@GLIBC_2.0
00000000       F *UND*	00000000              swprintf@@GLIBC_2.2
00000000       F *UND*	00000000              symlink@@GLIBC_2.0
00000000       F *UND*	00000000              tanf@@GLIBC_2.0
00000000       F *UND*	00000000              tan@@GLIBC_2.0
00000000       F *UND*	00000000              TelemetrySetLevel
00000000       F *UND*	00000000              TelemetryTick
00000000       F *UND*	00000000              ThreadGetCurrentId
00000000       F *UND*	00000000              ThreadInMainThread
00000000       F *UND*	00000000              ThreadInterlockedAssignIf
00000000       F *UND*	00000000              ThreadInterlockedAssignIf64
00000000       F *UND*	00000000              ThreadInterlockedCompareExchangePointer
00000000       F *UND*	00000000              ThreadInterlockedDecrement
00000000       F *UND*	00000000              ThreadInterlockedExchange
00000000       F *UND*	00000000              ThreadInterlockedExchangeAdd
00000000       F *UND*	00000000              ThreadInterlockedExchangePointer
00000000       F *UND*	00000000              ThreadInterlockedIncrement
00000000       F *UND*	00000000              ThreadJoin
00000000       F *UND*	00000000              ThreadSleep
00000000       F *UND*	00000000              time@@GLIBC_2.0
00000000       F *UND*	00000000              tolower@@GLIBC_2.0
00000000       F *UND*	00000000              toupper@@GLIBC_2.0
00000000       F *UND*	00000000              towlower@@GLIBC_2.0
00000000       F *UND*	00000000              towupper@@GLIBC_2.0
00000000       F *UND*	00000000              tzset@@GLIBC_2.0
00000000       F *UND*	00000000              unlink@@GLIBC_2.0
00000000       F *UND*	00000000              usleep@@GLIBC_2.0
00000000       F *UND*	00000000              utime@@GLIBC_2.0
00000000       F *UND*	00000000              utimes@@GLIBC_2.0
00000000       F *UND*	00000000              __vsnprintf_chk@@GLIBC_2.3.4
00000000       F *UND*	00000000              vsnprintf@@GLIBC_2.0
00000000       F *UND*	00000000              vswprintf@@GLIBC_2.2
00000000       F *UND*	00000000              Warning
00000000       F *UND*	00000000              wcschr@@GLIBC_2.0
00000000       F *UND*	00000000              wcslen@@GLIBC_2.0
00000000       F *UND*	00000000              wcsncat@@GLIBC_2.0
00000000       F *UND*	00000000              wcsncpy@@GLIBC_2.0
00000000       F *UND*	00000000              wcstol@@GLIBC_2.0
00000000       F *UND*	00000000              wcstoll@@GLIBC_2.1
00000000       F *UND*	00000000              wcstombs@@GLIBC_2.0
00000000       F *UND*	00000000              write@@GLIBC_2.0
00000000       F *UND*	00000000              WriteMiniDump
00000000       F *UND*	00000000              __xmknod@@GLIBC_2.0
00000000       F *UND*	00000000              __xstat64@@GLIBC_2.2
00000000       F *UND*	00000000              __xstat@@GLIBC_2.0
00000000       O *UND*	00000000              CVProfNode::s_iCurrentUniqueNodeID
00000000       O *UND*	00000000              g_ClockSpeed
00000000       O *UND*	00000000              g_ClockSpeedMillisecondsMultiplier
00000000       O *UND*	00000000              g_ClockSpeedSecondsMultiplier
00000000       O *UND*	00000000              g_pSteamClientGameServer
00000000       O *UND*	00000000              g_pThreadPool
00000000       O *UND*	00000000              g_pVCR
00000000       O *UND*	00000000              g_Telemetry
00000000       O *UND*	00000000              g_VProfCurrentProfile
00000000       O *UND*	00000000              g_VProfSignalSpike
00000000       O *UND*	00000000              stderr@@GLIBC_2.0
00000000  w      *UND*	00000000              __gmon_start__
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0022a64e l       .text	00000000              .L19
0022a65a l       .text	00000000              .L23
0022a669 l       .text	00000000              .L20
0022a66e l       .text	00000000              .L24
0022a676 l       .text	00000000              .L25
0022a67d l       .text	00000000              .L26
0022a684 l       .text	00000000              .L17
0022a81c l       .text	00000000              .L47
0022a849 l       .text	00000000              .L48
0022a867 l       .text	00000000              .L49
0022a885 l       .text	00000000              .L50
0022a8a2 l       .text	00000000              .L51
0022a8ca l       .text	00000000              .L52
0022a8e5 l       .text	00000000              .L54
0022a900 l       .text	00000000              .L53
0022a91b l       .text	00000000              .L55
0022a944 l       .text	00000000              .L56
0022a97f l       .text	00000000              .L57
0022a9a5 l       .text	00000000              .L58
0022a9dc l       .text	00000000              .L59
0022a9ff l       .text	00000000              .L60
0022aa12 l       .text	00000000              .L61
0022aa2a l       .text	00000000              .L62
0022aa45 l       .text	00000000              .L63
0022aa72 l       .text	00000000              .L64
0022aab0 l       .text	00000000              .L65
0022aad0 l       .text	00000000              .L66
0022aaf2 l       .text	00000000              .L67
0022ab25 l       .text	00000000              .L68
0022ab4b l       .text	00000000              .L69
0022ab6e l       .text	00000000              .L70
0022ab81 l       .text	00000000              .L71
0022abb3 l       .text	00000000              .L46
0022abb8 l       .text	00000000              .L43
0022b5c1 l       .text	00000000              .L214
0022b5c5 l       .text	00000000              .L215
0022b5ca l       .text	00000000              .L216
0022b5ce l       .text	00000000              .L217
0022b5da l       .text	00000000              .L218
0022b5df l       .text	00000000              .L219
0022b5e9 l       .text	00000000              .L220
0022b5ed l       .text	00000000              .L221
0022b5f3 l       .text	00000000              .L222
0022b5f9 l       .text	00000000              .L223
0022b5ff l       .text	00000000              .L224
0022b603 l       .text	00000000              .L228
0022b60a l       .text	00000000              .L226
0022b611 l       .text	00000000              .L225
0022b618 l       .text	00000000              .L229
0022b61f l       .text	00000000              .L227
0022b626 l       .text	00000000              .L230
0022b68c l       .text	00000000              .L244
0022b7db l       .text	00000000              .L271
0022b7e5 l       .text	00000000              .L272
0022b811 l       .text	00000000              .L273
0022b85c l       .text	00000000              .L274
0022b875 l       .text	00000000              .L275
0022c3b1 l       .text	00000000              .L47
0022c3bd l       .text	00000000              .L51
0022c3cc l       .text	00000000              .L48
0022c3d1 l       .text	00000000              .L52
0022c3d9 l       .text	00000000              .L53
0022c3e0 l       .text	00000000              .L54
0022c3e7 l       .text	00000000              .L45
002c8068 g       *ABS*	00000000              __bss_start
002c8068 g       *ABS*	00000000              _edata
0038b4c0 g       *ABS*	00000000              _end
000a64d0 l     F .text	00000163              AddDependency(CVertInfo*, int, CVertIndex const&, CVertIndex const&, int, bool, bool) [clone .isra.3] [clone .constprop.8]
000fc960 l     F .text	000007f6              AddEmptyMesh(model_t*, CDispGroup*, ddispinfo_t const*, int*, int, int, int)
0022c5ef l     F .text	000000e2              add_fdes
00327580 l     O .bss	00000024              addip
0013c210 l     F .text	000002fd              AddModelDebugOverlay(DrawModelInfo_t const&, DrawModelResults_t const&, Vector const&)
000a5140 l     F .text	00000118              AddNeighbor(CCoreDispInfo*, int, int, NeighborSpan, CCoreDispInfo*, int, NeighborSpan)
002c8960 l     O .bss	00000004              AddNeighbor(CCoreDispInfo*, int, int, NeighborSpan, CCoreDispInfo*, int, NeighborSpan)::__executeCount
00207790 l     F .text	00000039              AddPointToBounds(Vector const&, Vector&, Vector&)
001070a0 l     F .text	00000150              AddPropOffsetToMap(CSendTablePrecalc*, int, int)
00120a70 l     F .text	000001b6              AddRecvTableR(SendTable*, RecvTable**, int&)
0018b8a0 l     F .text	000001b6              AddRecvTableR(SendTable*, RecvTable**, int&)
002c8060 l     O .data	00000008              adds.7496
0035d87c l     O .bss	00000001              AddSpewRecord(char const*)::s_bReentrancyGuard
0012a8e0 l     F .text	00000005              AddTransitionResources(CSaveRestoreData*, char const*, char const*)
00223960 g     F .text	00000285              adler32
00223bf0 g     F .text	000000c5              adler32_combine
00223cc0 g     F .text	000000c4              adler32_combine64
000b5710 l     F .text	00000160              adler32(unsigned long, unsigned char const*, unsigned int)
000de3d0 l     F .text	0000026e              alias(CCommand const&)
0030d0e0 l     O .bss	00000024              alias_command
000a85f0 l     F .text	00000098              AllocateStringHelper2(char const*, char*)
000a8690 l     F .text	0000001a              AllocateStringHelper(char const*, ...)
000a86b0 l     F .text	0000001a              AllocateUniqueDataTableName(bool, char const*, ...)
000db6b0 l     F .text	00000077              AllocChangeFrameList(int, int)
001f1f60 l     F .text	0000006a              AllocString(char const*, int)
003269c8 l     O .bss	00000004              AllocTempVector()::s_nIndex
003269e0 l     O .bss	00000600              AllocTempVector()::s_vecTemp
000d4e60 l     F .text	00000007              AllowDebugDedicatedServerOutsideSteam()
0020c9e0 l     F .text	0000007f              AngleDiff(float, float)
0020ca60 l     F .text	00000052              AngleDistance(float, float)
00207550 l     F .text	00000149              AngleIMatrix(QAngle const&, matrix3x4_t&)
002076f0 l     F .text	00000064              AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
002076a0 l     F .text	0000004a              AngleIMatrix(RadianEuler const&, matrix3x4_t&)
00207230 l     F .text	0000012f              AngleMatrix(QAngle const&, matrix3x4_t&)
00207360 l     F .text	0000003c              AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
002073a0 l     F .text	0000004a              AngleMatrix(RadianEuler const&, matrix3x4_t&)
002073f0 l     F .text	0000003c              AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
0020cac0 l     F .text	0000005a              AngleNormalize(float)
0020cb20 l     F .text	0000003b              AngleNormalizePositive(float)
002094e0 l     F .text	0000010f              AngleQuaternion(QAngle const&, Quaternion&)
002093d0 l     F .text	0000010f              AngleQuaternion(RadianEuler const&, Quaternion&)
0020cb60 l     F .text	00000043              AnglesAreEqual(float, float, float)
00206880 l     F .text	0000008c              AngleVectors(QAngle const&, Vector*)
00206910 l     F .text	00000163              AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
00206a80 l     F .text	00000151              AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
002d33a0 l     O .bss	00000004              (anonymous namespace)::GetSuggestGameInfoDirFn()::s_pfnSuggestGameInfoDir
001fbfd0 l     F .text	00000058              (anonymous namespace)::Q_UTF32ToUChar32(wchar_t const*, wchar_t&, bool&)
0020c910 l     F .text	000000cd              ApproachAngle(float, float, float)
0020c8b0 l     F .text	0000005e              Approach(float, float, float)
00202e30 l     F .text	00000031              AppSystemCreateInterfaceFn(char const*, int*)
000ffac0 l     F .text	00000067              AreBitArraysEqual(void const*, void const*, int)
00102cf0 l     F .text	000001ce              Array_CompareDeltas(SendProp const*, bf_read*, bf_read*)
00103050 l     F .text	000001e0              Array_Decode(DecodeInfo*)
00102b10 l     F .text	0000002b              Array_DecodeZero(DecodeInfo*)
00102ec0 l     F .text	0000018e              Array_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
001029a0 l     F .text	00000103              Array_FastCopy(SendProp const*, RecvProp const*, unsigned char const*, unsigned char*, int)
00104da0 l     F .text	00000039              Array_GetLength(unsigned char const*, SendProp const*, int)
00102ab0 l     F .text	0000000a              Array_GetTypeNameString()
00102c20 l     F .text	000000cd              Array_IsEncodedZero(SendProp const*, bf_read*)
00102ac0 l     F .text	00000046              Array_IsZero(unsigned char const*, DVariant*, SendProp const*)
00102b50 l     F .text	000000c2              Array_SkipProp(SendProp const*, bf_read*)
000bb590 l     F .text	00000017              Assert(TState&, bool, char const*)
000a7800 l     F .text	00000182              AssignRangeMultiplier(int, double)
003750a0 l     O .bss	00000048              async_serialize
001c2290 l     F .text	000000fe              AsyncUpload_QueueData(char const*, unsigned int, unsigned int, void const*)
001c1240 l     F .text	00000023              AsyncUpload_Shutdown()
00209360 l     F .text	00000068              AxisAngleQuaternion(Vector const&, float, Quaternion&)
001a50b0 l     F .text	00000805              banid(CCommand const&)
00327780 l     O .bss	00000024              banid_command
003275c0 l     O .bss	00000024              banip
0007f100 l     F .text	00000040              Base_CmdKeyValues::~Base_CmdKeyValues()
0007f100 l     F .text	00000040              Base_CmdKeyValues::~Base_CmdKeyValues()
0007f140 l     F .text	0000001f              Base_CmdKeyValues::~Base_CmdKeyValues()
00088e10 l     F .text	0000001f              Base_CmdKeyValues::Base_CmdKeyValues(KeyValues*)
00088e10 l     F .text	0000001f              Base_CmdKeyValues::Base_CmdKeyValues(KeyValues*)
000893a0 l     F .text	00000395              Base_CmdKeyValues::ReadFromBuffer(bf_read&)
002c8500 l     O .bss	0000000c              Base_CmdKeyValues::ReadFromBuffer(bf_read&)::tm_fmt
0007f020 l     F .text	00000060              Base_CmdKeyValues::ToString() const
00089760 l     F .text	0000014e              Base_CmdKeyValues::WriteToBuffer(bf_write&)
0025d520 l     O .rodata	00000078              base_dist
0022c8ca l     F .text	00000048              base_from_cb_data
0022c322 l     F .text	00000048              base_from_object
0025d4a0 l     O .rodata	00000074              base_length
002095f0 l     F .text	00000087              BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
000dd8d0 l     F .text	00000005              BeginLoadingUpdates(MaterialNonInteractiveMode_t)
000e3b50 l     F .text	00000295              BeginTrace()
000db550 l     F .text	00000010              bench_end(CCommand const&)
002da600 l     O .bss	00000024              bench_end_command
000db650 l     F .text	0000001b              bench_start(CCommand const&)
002da5c0 l     O .bss	00000024              bench_start_command
000db3a0 l     F .text	00000005              bench_upload(CCommand const&)
002da640 l     O .bss	00000024              bench_upload_command
001dc1b0 l     F .text	00000032              bf_read::bf_read()
001dc1b0 l     F .text	00000032              bf_read::bf_read()
001dc240 l     F .text	0000004c              bf_read::bf_read(char const*, void const*, int, int)
001dc240 l     F .text	0000004c              bf_read::bf_read(char const*, void const*, int, int)
001dc1f0 l     F .text	00000044              bf_read::bf_read(void const*, int, int)
001dc1f0 l     F .text	00000044              bf_read::bf_read(void const*, int, int)
001dc330 l     F .text	0000006c              bf_read::CheckReadUBitLong(int)
001ddb60 l     F .text	00000174              bf_read::CompareBitsAt(int, bf_read*, int, int)
001dda50 l     F .text	00000110              bf_read::ExciseBits(int, int)
001dc750 l     F .text	000000de              bf_read::PeekUBitLong(int)
001dd9d0 l     F .text	00000079              bf_read::ReadAndAllocateString(bool*)
001dc690 l     F .text	000000bc              bf_read::ReadBitAngle(int)
001dd640 l     F .text	00000033              bf_read::ReadBitAngles(QAngle&)
001dcca0 l     F .text	000001cb              bf_read::ReadBitCoord()
001dd0d0 l     F .text	000000f6              bf_read::ReadBitCoordBits()
002569a8 l     O .rodata	0000000c              bf_read::ReadBitCoordBits()::numbits_table
001dd1d0 l     F .text	0000010e              bf_read::ReadBitCoordMPBits(bool, bool)
002569b4 l     O .rodata	00000008              bf_read::ReadBitCoordMPBits(bool, bool)::numbits_table
001dce70 l     F .text	00000258              bf_read::ReadBitCoordMP(bool, bool)
00256990 l     O .rodata	00000010              bf_read::ReadBitCoordMP(bool, bool)::mul_table
002569a0 l     O .rodata	00000008              bf_read::ReadBitCoordMP(bool, bool)::numbits_table
001dcbf0 l     F .text	000000a1              bf_read::ReadBitLong(int, bool)
001dd3e0 l     F .text	000000eb              bf_read::ReadBitNormal()
001dc610 l     F .text	00000076              bf_read::ReadBitsClamped_ptr(void*, unsigned int, unsigned int)
001dc3a0 l     F .text	00000268              bf_read::ReadBits(void*, int)
001dd2e0 l     F .text	000000f1              bf_read::ReadBitVec3Coord(Vector&)
001dd4d0 l     F .text	00000162              bf_read::ReadBitVec3Normal(Vector&)
001dd7a0 l     F .text	00000030              bf_read::ReadBytes(void*, int)
001dd770 l     F .text	00000025              bf_read::ReadFloat()
001dd680 l     F .text	000000eb              bf_read::ReadLongLong()
001dc960 l     F .text	0000008e              bf_read::ReadSBitLong(int)
001dcb80 l     F .text	00000020              bf_read::ReadSignedVarInt32()
001dcba0 l     F .text	00000047              bf_read::ReadSignedVarInt64()
001dd7d0 l     F .text	000001f1              bf_read::ReadString(char*, int, bool, int*)
001dc830 l     F .text	00000086              bf_read::ReadUBitLongNoInline(int)
001dc8c0 l     F .text	0000009e              bf_read::ReadUBitVarInternal(int)
001dc9f0 l     F .text	0000009a              bf_read::ReadVarInt32()
001dca90 l     F .text	000000e2              bf_read::ReadVarInt64()
001dc2e0 l     F .text	00000013              bf_read::Reset()
001dc300 l     F .text	0000000e              bf_read::SetAssertOnOverflow(bool)
001dc310 l     F .text	0000000e              bf_read::SetDebugName(char const*)
001dc320 l     F .text	0000000c              bf_read::SetOverflowFlag()
001dc290 l     F .text	00000043              bf_read::StartReading(void const*, int, int, int)
001da420 l     F .text	00000032              bf_write::bf_write()
001da420 l     F .text	00000032              bf_write::bf_write()
001da460 l     F .text	00000054              bf_write::bf_write(char const*, void*, int, int)
001da460 l     F .text	00000054              bf_write::bf_write(char const*, void*, int, int)
001da4c0 l     F .text	00000054              bf_write::bf_write(void*, int, int)
001da4c0 l     F .text	00000054              bf_write::bf_write(void*, int, int)
001dacb0 l     F .text	0000002d              bf_write::ByteSizeSignedVarInt32(int)
001dace0 l     F .text	00000051              bf_write::ByteSizeSignedVarInt64(long long)
001dac50 l     F .text	0000001d              bf_write::ByteSizeVarInt32(unsigned int)
001dac70 l     F .text	00000037              bf_write::ByteSizeVarInt64(unsigned long long)
001da5a0 l     F .text	0000000b              bf_write::GetDebugName()
001da570 l     F .text	00000013              bf_write::Reset()
001da5c0 l     F .text	0000000e              bf_write::SeekToBit(int)
001da590 l     F .text	0000000e              bf_write::SetAssertOnOverflow(bool)
001da5b0 l     F .text	0000000e              bf_write::SetDebugName(char const*)
001da520 l     F .text	00000043              bf_write::StartWriting(void*, int, int, int)
001db410 l     F .text	000000f4              bf_write::WriteBitAngle(float, int)
001dbdc0 l     F .text	0000002e              bf_write::WriteBitAngles(QAngle const&)
001db710 l     F .text	0000023c              bf_write::WriteBitCoord(float)
001db510 l     F .text	000001ff              bf_write::WriteBitCoordMP(float, bool, bool)
001dad40 l     F .text	000000d1              bf_write::WriteBitLong(unsigned int, int, bool)
001dbaf0 l     F .text	0000013b              bf_write::WriteBitNormal(float)
001db1b0 l     F .text	00000256              bf_write::WriteBitsFromBuffer(bf_read*, int)
001dae20 l     F .text	0000038c              bf_write::WriteBits(void const*, int)
001db950 l     F .text	0000019d              bf_write::WriteBitVec3Coord(Vector const&)
001dbc30 l     F .text	0000018d              bf_write::WriteBitVec3Normal(Vector const&)
001dbe20 l     F .text	000000a4              bf_write::WriteByte(int)
001dc140 l     F .text	0000000d              bf_write::WriteBytes(void const*, int)
001dbdf0 l     F .text	00000022              bf_write::WriteChar(int)
001dc110 l     F .text	00000022              bf_write::WriteFloat(float)
001dbfb0 l     F .text	00000022              bf_write::WriteLong(long)
001dbfe0 l     F .text	00000121              bf_write::WriteLongLong(long long)
001da5d0 l     F .text	000000d4              bf_write::WriteSBitLong(int, int)
001dbed0 l     F .text	00000022              bf_write::WriteShort(int)
001dac00 l     F .text	00000018              bf_write::WriteSignedVarInt32(int)
001dac20 l     F .text	0000002a              bf_write::WriteSignedVarInt64(long long)
001dc150 l     F .text	00000052              bf_write::WriteString(char const*)
001da6b0 l     F .text	0000021a              bf_write::WriteVarInt32(unsigned int)
001da8d0 l     F .text	00000321              bf_write::WriteVarInt64(unsigned long long)
001dbf00 l     F .text	000000a4              bf_write::WriteWord(int)
001f26d0 l     F .text	0000014f              BGetLocalFormattedDateAndTime(long, char*, int, char*, int)
001f2820 l     F .text	00000031              BGetLocalFormattedDate(long, char*, int)
001f2860 l     F .text	00000031              BGetLocalFormattedTime(long, char*, int)
002082a0 l     F .text	0000008a              Bias(float, float)
0038af90 l     O .bss	00000004              Bias(float, float)::lastExponent
000bc670 l     F .text	0000004b              bi_init(TState&, char*, unsigned int, int)
001371f0 l     F .text	000000b0              bind(CCommand const&)
0031c2e0 l     O .bss	00000024              bind_command
00137120 l     F .text	000000cc              BindKey(char const*, bool, char const*)
00136e50 l     F .text	00000005              bind_mac(CCommand const&)
0031c320 l     O .bss	00000024              bind_mac_command
000de900 l     F .text	0000006d              BindToggle(CCommand const&)
0030cfe0 l     O .bss	00000024              BindToggle_command
000bcd80 l     F .text	00000028              bi_reverse(unsigned int, int)
000bcdb0 l     F .text	00000153              bi_windup(TState&)
000fc2b0 l     F .text	000004bf              BlendCorners(CCoreDispInfo**, int)
000fb840 l     F .text	000006d5              BlendEdges(CCoreDispInfo**, int)
000fb370 l     F .text	00000414              BlendSubNeighbors(CCoreDispInfo**, int)
000eb030 l     F .text	0000007e              BLoadHDContent(char const*, char const*)
00234530 l     O .rodata	00000013              bl_order
0025d474 l     O .rodata	00000013              bl_order
00000000       F *UND*	00000000              CVProfile::HideBudgetGroup(int, bool)
000a32e0 l     F .text	00000148              bool CDispCollTree::EdgeCrossAxis<0>(Ray_t const&, unsigned short, CDispCollHelper*)
000a3430 l     F .text	00000148              bool CDispCollTree::EdgeCrossAxis<1>(Ray_t const&, unsigned short, CDispCollHelper*)
000a3580 l     F .text	00000148              bool CDispCollTree::EdgeCrossAxis<2>(Ray_t const&, unsigned short, CDispCollHelper*)
00196730 l     F .text	0000014d              bool CVoxelHash::EnumerateElementsInSingleVoxel<CIntersectBox>(Voxel_t, CIntersectBox const&, int, IPartitionEnumerator*)
00196a00 l     F .text	00000144              bool CVoxelHash::EnumerateElementsInSingleVoxel<CIntersectRay>(Voxel_t, CIntersectRay const&, int, IPartitionEnumerator*)
00196880 l     F .text	00000180              bool CVoxelHash::EnumerateElementsInVoxel<CIntersectBox>(Voxel_t, CIntersectBox const&, int, IPartitionEnumerator*)
00196b50 l     F .text	00000167              bool CVoxelHash::EnumerateElementsInVoxel<CIntersectRay>(Voxel_t, CIntersectRay const&, int, IPartitionEnumerator*)
00196cc0 l     F .text	000001b2              bool CVoxelHash::EnumerateElementsInVoxel<CIntersectSweptBox>(Voxel_t, CIntersectSweptBox const&, int, IPartitionEnumerator*)
00233a80 l     O .rodata	0000004c              border
002065f0 l     F .text	00000289              BoxOnPlaneSide(float const*, float const*, cplane_t const*)
0020b150 l     F .text	00000072              BSpline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0020aea0 l     F .text	000002a6              BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
002c8080 l    d  .bss	00000000              .bss
001cf300 l     F .text	00000052              budget_toggle_group(CCommand const&)
003781e0 l     O .bss	00000024              budget_toggle_group_command
000bc2c0 l     F .text	000000be              build_bl_tree(TState&)
000fa610 l     F .text	000003cc              BuildDispSurfInit(model_t*, CCoreDispInfo*, msurface2_t*) [clone .isra.41]
00203fc0 l     F .text	000004c7              BuildGammaTable(float, float, float, int)
0013eb00 l     F .text	00000597              BuildGeneralMapList(CUtlVector<maplist_map_t, CUtlMemory<maplist_map_t, int> >*, bool, char const*, char*, int*)
001c56d0 l     F .text	00000023              BuildMinidumpComment(char const*, bool)
001c4ec0 l     F .text	0000000a              build_number()
001071f0 l     F .text	00000188              BuildPropOffsetToIndexMap(CSendTablePrecalc*, CStandardSendProxies const*)
00112e20 l     F .text	00000098              BuildRecipientList(CUtlVector<edict_t*, CUtlMemory<edict_t*, int> >&, IRecipientFilter const&)
00147b90 l     F .text	0000019d              BuildSpriteLoadName(char const*, char*, int, bool&) [clone .constprop.176]
000fafe0 l     F .text	00000162              BuildTagData(CCoreDispInfo*, CDispInfo*)
002283f0 l     F .text	00000688              build_tree
000bbea0 l     F .text	000002f0              build_tree(TState&, tree_desc*)
0012bff0 l     F .text	00000038              cache_print(CCommand const&)
0031aba0 l     O .bss	00000024              cache_print_command
0012c030 l     F .text	00000038              cache_print_lru(CCommand const&)
0031abe0 l     O .bss	00000024              cache_print_lru_command
0012c070 l     F .text	00000038              cache_print_summary(CCommand const&)
0031ac20 l     O .bss	00000024              cache_print_summary_command
0008fca0 l     F .text	0000030f              CalcBarycentricCooefs(Vector const&, Vector const&, Vector const&, Vector const&, float&, float&, float&)
0020bc10 l     F .text	00000063              CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
0020c160 l     F .text	00000072              CalcClosestPointOnLine2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
0020c2a0 l     F .text	0000008b              CalcClosestPointOnLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
0020bf40 l     F .text	0000009e              CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
0020bdc0 l     F .text	00000085              CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
0020c0d0 l     F .text	00000088              CalcClosestPointToLineT2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
0020bd00 l     F .text	000000b8              CalcClosestPointToLineT(Vector const&, Vector const&, Vector const&, Vector&)
0020c240 l     F .text	0000005b              CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0020c390 l     F .text	0000005b              CalcDistanceSqrToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0020c060 l     F .text	0000006d              CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
0020bed0 l     F .text	0000006d              CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
0020c1e0 l     F .text	0000005f              CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0020c330 l     F .text	0000005f              CalcDistanceToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0020bfe0 l     F .text	00000071              CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
0020be50 l     F .text	00000071              CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
0020d890 l     F .text	0000005f              CalcFovX(float, float)
0020d800 l     F .text	00000082              CalcFovY(float, float)
0020c3f0 l     F .text	000002f9              CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
000f81b0 l     F .text	00000027              CalcMaxNumVertsAndIndices(int, int*, int*)
000ff970 l     F .text	0000005f              CalcPathLengths_R(CSendNode*, CUtlVector<int, CUtlMemory<int, int> >&, int, int&)
0020bb30 l     F .text	000000e0              CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
0020bc80 l     F .text	0000007f              CalcSqrDistAndClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&, float&)
0020e270 l     F .text	00000372              CalcTriangleTangentSpace(Vector const&, Vector const&, Vector const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector&, Vector&)
002121e0 l     F .text	000001d5              CalculateAABBFromProjectionMatrixInverse(VMatrix const&, Vector*, Vector*)
002123c0 l     F .text	00000035              CalculateAABBFromProjectionMatrix(VMatrix const&, Vector*, Vector*)
00212400 l     F .text	000001b0              CalculateSphereFromProjectionMatrixInverse(VMatrix const&, Vector*, float*)
002125b0 l     F .text	00000035              CalculateSphereFromProjectionMatrix(VMatrix const&, Vector*, float*)
00203670 l     F .text	0000005e              CAppSystemGroup::AddSystem(IAppSystem*, char const*)
002036d0 l     F .text	000000ac              CAppSystemGroup::AddSystem(int, char const*)
00203780 l     F .text	0000007c              CAppSystemGroup::AddSystems(AppSystemInfo_t*)
00202a40 l     F .text	000000a1              CAppSystemGroup::CAppSystemGroup(CAppSystemGroup*)
00202a40 l     F .text	000000a1              CAppSystemGroup::CAppSystemGroup(CAppSystemGroup*)
00203070 l     F .text	0000006c              CAppSystemGroup::ConnectSystems()
00202b60 l     F .text	00000041              CAppSystemGroup::DisconnectSystems()
00202db0 l     F .text	0000007c              CAppSystemGroup::FindSystem(char const*)
00202c00 l     F .text	0000000b              CAppSystemGroup::GetErrorStage() const
00202c10 l     F .text	0000000a              CAppSystemGroup::GetFactory()
00202b50 l     F .text	0000000b              CAppSystemGroup::GetParent()
00203010 l     F .text	0000005c              CAppSystemGroup::InitSystems()
002034d0 l     F .text	00000194              CAppSystemGroup::LoadModule(char const*)
00202a20 l     F .text	00000016              CAppSystemGroup::LoadModuleDLL(char const*)
002033e0 l     F .text	000000e7              CAppSystemGroup::LoadModule(void* (*)(char const*, int*))
002032d0 l     F .text	000000ae              CAppSystemGroup::OnShutdown()
002030e0 l     F .text	0000009e              CAppSystemGroup::OnStartup()
00203190 l     F .text	00000139              CAppSystemGroup::RemoveAllSystems()
00202e70 l     F .text	00000193              CAppSystemGroup::ReportStartupFailure(int, int)
00203390 l     F .text	0000004d              CAppSystemGroup::Run()
00203380 l     F .text	00000009              CAppSystemGroup::Shutdown()
00202bb0 l     F .text	00000041              CAppSystemGroup::ShutdownSystems()
00203180 l     F .text	00000009              CAppSystemGroup::Startup()
00202af0 l     F .text	00000060              CAppSystemGroup::UnloadAllModules()
000c46a0 l     F .text	00000030              CaselessStringLessThan(char const* const&, char const* const&)
00180140 l     F .text	000000d2              CaselessStringLessThanIgnoreSlashes(char const* const&, char const* const&)
001c2930 l     F .text	00000015              CAsyncUploaderThread::CallbackThreadProc(void*)
001c0490 l     F .text	00000095              CAsyncUploaderThread::DataEntry::AllocCopy() const
001c2140 l     F .text	00000142              CAsyncUploaderThread::QueueData(char const*, unsigned int, unsigned int, void const*)
001c1180 l     F .text	000000c0              CAsyncUploaderThread::TerminateAndSelfDelete()
001c1d60 l     F .text	000003d3              CAsyncUploaderThread::ThreadProc()
0020a290 l     F .text	000001d3              Catmull_Rom_Spline_Integral_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00209d70 l     F .text	00000254              Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00209fd0 l     F .text	000000d2              Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
0020a0b0 l     F .text	000001d3              Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0020a470 l     F .text	00000072              Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00209b10 l     F .text	0000025e              Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00209860 l     F .text	000002a1              Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000c0520 l     F .text	0000004d              CAutoGain::CAutoGain()
000c0520 l     F .text	0000004d              CAutoGain::CAutoGain()
000c05c0 l     F .text	00000179              CAutoGain::ProcessSamples(short*, int)
000c0570 l     F .text	0000004d              CAutoGain::Reset(int, float, float, float)
000edfd0 l     F .text	00000005              CBaseAppSystem<ICvarQuery>::Disconnect()
001c5a30 l     F .text	0000000a              CBaseAppSystem<IDedicatedServerAPI>::Connect(void* (*)(char const*, int*))
001c5a40 l     F .text	00000005              CBaseAppSystem<IDedicatedServerAPI>::Disconnect()
001c5a60 l     F .text	0000000a              CBaseAppSystem<IDedicatedServerAPI>::Init()
001c5a50 l     F .text	00000007              CBaseAppSystem<IDedicatedServerAPI>::QueryInterface(char const*)
001c5a70 l     F .text	00000005              CBaseAppSystem<IDedicatedServerAPI>::Shutdown()
000c7340 l     F .text	000002fb              CBaseAutoCompleteFileList::AutoCompletionFunc(char const*, char (*) [64])
000c8420 l     F .text	00000056              CBaseClient::ActivatePlayer()
000cae30 l     F .text	0000009b              CBaseClient::~CBaseClient()
000cae30 l     F .text	0000009b              CBaseClient::~CBaseClient()
000caef0 l     F .text	0000001f              CBaseClient::~CBaseClient()
000c95d0 l     F .text	00000180              CBaseClient::CBaseClient()
000c95d0 l     F .text	00000180              CBaseClient::CBaseClient()
000ca0f0 l     F .text	000000b8              CBaseClient::CheckFlushNameChange(bool)
000c90f0 l     F .text	000001ad              CBaseClient::Clear()
000c7ad0 l     F .text	00000096              CBaseClient::ClientPrintf(char const*, ...)
000ca1b0 l     F .text	00000051              CBaseClient::ClientRequestNameChange(char const*)
000c8300 l     F .text	00000119              CBaseClient::Connect(char const*, int, INetChannel*, bool, int)
000c8bf0 l     F .text	000003dc              CBaseClient::ConnectionStart(INetChannel*)
000c79a0 l     F .text	00000005              CBaseClient::DemoRestart()
000c81f0 l     F .text	000000fa              CBaseClient::Disconnect(char const*, ...)
000c9b70 l     F .text	000004d5              CBaseClient::EndTrace(bf_write&)
002d5634 l     O .bss	0000000c              CBaseClient::EndTrace(bf_write&)::tm_fmt
000c8550 l     F .text	00000044              CBaseClient::ExecuteStringCommand(char const*)
000c8630 l     F .text	00000198              CBaseClient::FillUserInfo(player_info_s&)
000c7fc0 l     F .text	00000216              CBaseClient::FireGameEvent(IGameEvent*)
00235734 l     O .rodata	0000000e              CBaseClient::FireGameEvent(IGameEvent*)::__FUNCTION__
002d5628 l     O .bss	0000000c              CBaseClient::FireGameEvent(IGameEvent*)::tm_fmt
000c8b30 l     F .text	000000ad              CBaseClient::FreeBaselines()
000cc330 l     F .text	0000000b              CBaseClient::GetClientName() const
000c78e0 l     F .text	00000007              CBaseClient::GetDeltaFrame(int)
000c7a40 l     F .text	00000026              CBaseClient::GetMaxAckTickCount() const
000cc350 l     F .text	0000000e              CBaseClient::GetNetChannel()
000c79c0 l     F .text	00000021              CBaseClient::GetNetworkID() const
000ca9e0 l     F .text	00000048              CBaseClient::GetNetworkIDString() const
000cc2f0 l     F .text	0000000b              CBaseClient::GetPlayerSlot() const
000c7820 l     F .text	00000024              CBaseClient::GetRate() const
000cc370 l     F .text	0000000e              CBaseClient::GetServer()
000c78b0 l     F .text	0000002b              CBaseClient::GetUpdateRate() const
000cc310 l     F .text	0000000b              CBaseClient::GetUserID() const
000c85b0 l     F .text	0000007f              CBaseClient::GetUserSetting(char const*) const
000c7a90 l     F .text	0000002b              CBaseClient::IgnoreTempEntity(CEventInfo*)
000c8fe0 l     F .text	000000fb              CBaseClient::Inactivate()
000cc3f0 l     F .text	00000012              CBaseClient::IsActive() const
000cc390 l     F .text	00000012              CBaseClient::IsConnected() const
000cc420 l     F .text	0000000f              CBaseClient::IsFakeClient() const
000cc480 l     F .text	00000007              CBaseClient::IsHearingClient(int) const
000cc440 l     F .text	0000000f              CBaseClient::IsHLTV() const
000ca050 l     F .text	0000009c              CBaseClient::IsNameChangeOnCooldown(bool)
000cc4a0 l     F .text	00000007              CBaseClient::IsProximityHearingClient(int) const
000cc460 l     F .text	0000000f              CBaseClient::IsReplay() const
000cc3c0 l     F .text	00000012              CBaseClient::IsSpawned() const
000cc4b0 l     F .text	00000007              CBaseClient::IsSplitScreenUser() const
000ca3b0 l     F .text	0000027b              CBaseClient::OnRequestFullUpdate()
002d5688 l     O .bss	0000000c              CBaseClient::OnRequestFullUpdate()::tm_fmt
000ca7c0 l     F .text	0000002c              CBaseClient::OnSignonStateFull()
000c92b0 l     F .text	0000031c              CBaseClient::ProcessBaselineAck(CLC_BaselineAck*)
000c7dd0 l     F .text	000000dc              CBaseClient::ProcessClientInfo(CLC_ClientInfo*)
000c7a80 l     F .text	0000000a              CBaseClient::ProcessCmdKeyValues(CLC_CmdKeyValues*)
000c7d00 l     F .text	000000ba              CBaseClient::ProcessListenEvents(CLC_ListenEvents*)
000ca2b0 l     F .text	000000f5              CBaseClient::ProcessSetConVar(NET_SetConVar*)
000c8490 l     F .text	000000aa              CBaseClient::ProcessSignonState(NET_SignonState*)
000c7970 l     F .text	00000022              CBaseClient::ProcessStringCmd(NET_StringCmd*)
000c7910 l     F .text	0000004d              CBaseClient::ProcessTick(NET_Tick*)
000c7c60 l     F .text	00000089              CBaseClient::Reconnect()
000cb1e0 l     F .text	000000f2              CBaseClient::SendNetMsg(INetMessage&, bool)
000caa30 l     F .text	000003db              CBaseClient::SendServerInfo()
000c8a50 l     F .text	000000d4              CBaseClient::SendSignonData()
000cb5b0 l     F .text	00000cd5              CBaseClient::SendSnapshot(CClientFrame*)
00235742 l     O .rodata	0000000d              CBaseClient::SendSnapshot(CClientFrame*)::__FUNCTION__
002d5658 l     O .bss	0000000c              CBaseClient::SendSnapshot(CClientFrame*)::tm_fmt
002d5664 l     O .bss	0000000c              CBaseClient::SendSnapshot(CClientFrame*)::tm_fmt
002d5670 l     O .bss	0000000c              CBaseClient::SendSnapshot(CClientFrame*)::tm_fmt
002d567c l     O .bss	0000000c              CBaseClient::SendSnapshot(CClientFrame*)::tm_fmt
000c7a00 l     F .text	00000022              CBaseClient::SetMaxRoutablePayloadSize(int)
000c97e0 l     F .text	000002c5              CBaseClient::SetName(char const*)
000c77d0 l     F .text	00000032              CBaseClient::SetRate(int, bool)
000ca7f0 l     F .text	0000007a              CBaseClient::SetSignonState(int, int)
000ca7a0 l     F .text	00000018              CBaseClient::SetSteamID(CSteamID const&)
000c7860 l     F .text	00000032              CBaseClient::SetUpdateRate(int, bool)
000ca210 l     F .text	00000087              CBaseClient::SetUserCVar(char const*, char const*)
000c8960 l     F .text	000000ee              CBaseClient::ShouldSendMessages()
000c7eb0 l     F .text	00000103              CBaseClient::SpawnPlayer()
000c9ab0 l     F .text	000000b2              CBaseClient::StartTrace(bf_write&)
000cd2e0 l     F .text	00000062              CBaseClientState::~CBaseClientState()
000cd2e0 l     F .text	00000062              CBaseClientState::~CBaseClientState()
000cd370 l     F .text	0000001f              CBaseClientState::~CBaseClientState()
000d1290 l     F .text	00000169              CBaseClientState::CBaseClientState()
000d1290 l     F .text	00000169              CBaseClientState::CBaseClientState()
000cd9b0 l     F .text	0000003f              CBaseClientState::CheckForResend()
000cd670 l     F .text	00000339              CBaseClientState::CheckForResend() [clone .part.26]
000d2640 l     F .text	0000011c              CBaseClientState::Clear()
000ccaa0 l     F .text	000000e6              CBaseClientState::Connect(char const*, char const*)
000cc810 l     F .text	00000073              CBaseClientState::ConnectionClosing(char const*)
000cc790 l     F .text	00000073              CBaseClientState::ConnectionCrashed(char const*)
000ccb90 l     F .text	00000726              CBaseClientState::ConnectionStart(INetChannel*)
000d1750 l     F .text	000000c7              CBaseClientState::ConnectMethodAllowsRedirects()
000d29f0 l     F .text	0000010b              CBaseClientState::CopyEntityBaseline(int, int)
000cd550 l     F .text	00000117              CBaseClientState::Disconnect(char const*, bool)
000cc900 l     F .text	00000010              CBaseClientState::FileDenied(char const*, unsigned int)
000cc910 l     F .text	00000010              CBaseClientState::FileReceived(char const*, unsigned int)
000cc8a0 l     F .text	00000059              CBaseClientState::FileRequested(char const*, unsigned int)
000cc890 l     F .text	00000010              CBaseClientState::FileSent(char const*, unsigned int)
000d1e50 l     F .text	0000004b              CBaseClientState::FindClientClass(char const*)
000d25f0 l     F .text	00000046              CBaseClientState::ForceFullUpdate()
000d1fa0 l     F .text	00000061              CBaseClientState::FreeEntityBaselines()
000cc920 l     F .text	00000178              CBaseClientState::FullConnect(netadr_s&)
000d2d60 l     F .text	0000000a              CBaseClientState::GetCDKeyHash()
000d2b20 l     F .text	00000153              CBaseClientState::GetClassBaseline(int, void const**, int*)
000d2b00 l     F .text	00000016              CBaseClientState::GetClientClass(int)
000d2de0 l     F .text	00000025              CBaseClientState::GetClientName()
000d2d90 l     F .text	0000000a              CBaseClientState::GetConnectionRetryNumber() const
000cc760 l     F .text	0000000a              CBaseClientState::GetDemoProtocolVersion() const
000d1f80 l     F .text	00000018              CBaseClientState::GetEntityBaseline(int, int)
000d1820 l     F .text	00000024              CBaseClientState::GetStringTable(char const*) const
000d2d80 l     F .text	00000007              CBaseClientState::HookClientStringTable(char const*)
000d2d70 l     F .text	00000005              CBaseClientState::InstallStringTableCallback(char const*)
000d2c80 l     F .text	00000091              CBaseClientState::IsClientConnectionViaMatchMaking()
000d1ea0 l     F .text	000000dd              CBaseClientState::LinkClasses()
000d2d50 l     F .text	00000005              CBaseClientState::PacketEnd()
000d2d40 l     F .text	00000005              CBaseClientState::PacketStart(int, int)
000d1400 l     F .text	0000005a              CBaseClientState::PrepareSteamConnectResponse(unsigned long long, bool, netadr_s const&, bf_write&)
000d0e70 l     F .text	0000041e              CBaseClientState::ProcessClassInfo(SVC_ClassInfo*)
002d5a2c l     O .bss	0000000c              CBaseClientState::ProcessClassInfo(SVC_ClassInfo*)::tm_fmt
000cc780 l     F .text	0000000a              CBaseClientState::ProcessCmdKeyValues(SVC_CmdKeyValues*)
000ceb50 l     F .text	00000ab9              CBaseClientState::ProcessConnectionlessPacket(netpacket_s*)
002d59c0 l     O .bss	0000000c              CBaseClientState::ProcessConnectionlessPacket(netpacket_s*)::tm_fmt
000cf8f0 l     F .text	000004b5              CBaseClientState::ProcessCreateStringTable(SVC_CreateStringTable*)
002d5a44 l     O .bss	0000000c              CBaseClientState::ProcessCreateStringTable(SVC_CreateStringTable*)::tm_fmt
000ce010 l     F .text	00000202              CBaseClientState::ProcessGameEventList(SVC_GameEventList*)
002d5a8c l     O .bss	0000000c              CBaseClientState::ProcessGameEventList(SVC_GameEventList*)::tm_fmt
000d0290 l     F .text	00000408              CBaseClientState::ProcessGetCvarValue(SVC_GetCvarValue*)
002d5a98 l     O .bss	0000000c              CBaseClientState::ProcessGetCvarValue(SVC_GetCvarValue*)::tm_fmt
000cde20 l     F .text	000001df              CBaseClientState::ProcessMenu(SVC_Menu*)
002d5a08 l     O .bss	0000000c              CBaseClientState::ProcessMenu(SVC_Menu*)::tm_fmt
000cf620 l     F .text	000002bc              CBaseClientState::ProcessPacketEntities(SVC_PacketEntities*)
002d5a68 l     O .bss	0000000c              CBaseClientState::ProcessPacketEntities(SVC_PacketEntities*)::tm_fmt
000ce480 l     F .text	00000202              CBaseClientState::ProcessPrint(SVC_Print*)
002d59fc l     O .bss	0000000c              CBaseClientState::ProcessPrint(SVC_Print*)::tm_fmt
000ce230 l     F .text	00000240              CBaseClientState::ProcessSendTable(SVC_SendTable*)
002d5a20 l     O .bss	0000000c              CBaseClientState::ProcessSendTable(SVC_SendTable*)::tm_fmt
000d2020 l     F .text	000005cf              CBaseClientState::ProcessServerInfo(SVC_ServerInfo*)
002d5a14 l     O .bss	0000000c              CBaseClientState::ProcessServerInfo(SVC_ServerInfo*)::tm_fmt
000d06b0 l     F .text	00000302              CBaseClientState::ProcessSetConVar(NET_SetConVar*)
002d59e4 l     O .bss	0000000c              CBaseClientState::ProcessSetConVar(NET_SetConVar*)::tm_fmt
000cdc10 l     F .text	000001ff              CBaseClientState::ProcessSetPause(SVC_SetPause*)
002d5a38 l     O .bss	0000000c              CBaseClientState::ProcessSetPause(SVC_SetPause*)::tm_fmt
000cda00 l     F .text	000001ff              CBaseClientState::ProcessSetView(SVC_SetView*)
002d5a5c l     O .bss	0000000c              CBaseClientState::ProcessSetView(SVC_SetView*)::tm_fmt
000ce6a0 l     F .text	00000220              CBaseClientState::ProcessSignonState(NET_SignonState*)
002d59f0 l     O .bss	0000000c              CBaseClientState::ProcessSignonState(NET_SignonState*)::tm_fmt
000d0020 l     F .text	00000252              CBaseClientState::ProcessStringCmd(NET_StringCmd*)
002d59d8 l     O .bss	0000000c              CBaseClientState::ProcessStringCmd(NET_StringCmd*)::tm_fmt
000cfdc0 l     F .text	00000250              CBaseClientState::ProcessTick(NET_Tick*)
002d59cc l     O .bss	0000000c              CBaseClientState::ProcessTick(NET_Tick*)::tm_fmt
000ce8d0 l     F .text	0000026b              CBaseClientState::ProcessUpdateStringTable(SVC_UpdateStringTable*)
002d5a50 l     O .bss	0000000c              CBaseClientState::ProcessUpdateStringTable(SVC_UpdateStringTable*)::tm_fmt
000d18b0 l     F .text	00000592              CBaseClientState::ReadPacketEntities(CEntityReadInfo&)
002d5a74 l     O .bss	0000000c              CBaseClientState::ReadPacketEntities(CEntityReadInfo&)::tm_fmt
000d09c0 l     F .text	0000041c              CBaseClientState::RunFrame()
00236b84 l     O .rodata	00000009              CBaseClientState::RunFrame()::__FUNCTION__
002d59a8 l     O .bss	0000000c              CBaseClientState::RunFrame()::tm_fmt
002d59b4 l     O .bss	0000000c              CBaseClientState::RunFrame()::tm_fmt
000d1460 l     F .text	000002e5              CBaseClientState::SendConnectPacket(int, int, unsigned long long, bool)
000d1850 l     F .text	0000005e              CBaseClientState::SendStringCmd(char const*)
000d2760 l     F .text	00000281              CBaseClientState::SetEntityBaseline(int, ClientClass*, int, char*, int)
002d5a80 l     O .bss	0000000c              CBaseClientState::SetEntityBaseline(int, ClientClass*, int, char*, int)::tm_fmt
000cd480 l     F .text	000000c8              CBaseClientState::SetSignonState(int, int)
000cb2e0 l     F .text	000002c9              CBaseClient::TraceNetworkData(bf_write&, char const*, ...)
002d5640 l     O .bss	0000000c              CBaseClient::TraceNetworkData(bf_write&, char const*, ...)::tm_fmt
000caf10 l     F .text	000002b9              CBaseClient::TraceNetworkMsg(int, char const*, ...)
002d564c l     O .bss	0000000c              CBaseClient::TraceNetworkMsg(int, char const*, ...)::tm_fmt
000ca630 l     F .text	00000164              CBaseClient::UpdateAcknowledgedFramecount(int)
000c87d0 l     F .text	00000183              CBaseClient::UpdateSendState()
000c7b70 l     F .text	000000dc              CBaseClient::UpdateUserSettings()
000c78f0 l     F .text	00000005              CBaseClient::WriteGameSounds(bf_write&)
0017a350 l     F .text	00000067              CBaseEdict::GetChangeAccessor()
0017a410 l     F .text	00000067              CBaseEdict::GetChangeAccessor() const
000acd10 l     F .text	00000015              CBasePhonemeTag::CBasePhonemeTag()
000acd10 l     F .text	00000015              CBasePhonemeTag::CBasePhonemeTag()
000acd30 l     F .text	0000001b              CBasePhonemeTag::CBasePhonemeTag(CBasePhonemeTag const&)
000acd30 l     F .text	0000001b              CBasePhonemeTag::CBasePhonemeTag(CBasePhonemeTag const&)
000d7830 l     F .text	0000019e              CBaseServer::AddTag(char const*)
000d31c0 l     F .text	00000224              CBaseServer::BroadcastMessage(INetMessage&, bool, bool)
000d4350 l     F .text	000001f1              CBaseServer::BroadcastMessage(INetMessage&, IRecipientFilter&)
000d33f0 l     F .text	00000086              CBaseServer::BroadcastPrintf(char const*, ...)
000d3a70 l     F .text	00000294              CBaseServer::CalculateCPUUsage()
00237d14 l     O .rodata	00000012              CBaseServer::CalculateCPUUsage()::__FUNCTION__
002d6030 l     O .bss	00000004              CBaseServer::CalculateCPUUsage()::s_lastAvg
002d5fe0 l     O .bss	00000048              CBaseServer::CalculateCPUUsage()::s_lastUsage
002d5fc8 l     O .bss	0000000c              CBaseServer::CalculateCPUUsage()::tm_fmt
000d85f0 l     F .text	00000081              CBaseServer::~CBaseServer()
000d85f0 l     F .text	00000081              CBaseServer::~CBaseServer()
000d8680 l     F .text	0000001f              CBaseServer::~CBaseServer()
000d4e70 l     F .text	000001b0              CBaseServer::CBaseServer()
000d4e70 l     F .text	000001b0              CBaseServer::CBaseServer()
000d4170 l     F .text	000000e8              CBaseServer::CheckChallengeNr(netadr_s&, int)
000d3810 l     F .text	00000251              CBaseServer::CheckChallengeType(CBaseClient*, int, netadr_s&, int, char const*, int, int)
000d3480 l     F .text	000000ed              CBaseServer::CheckIPConnectionReuse(netadr_s&)
000d4260 l     F .text	00000057              CBaseServer::CheckIPRestrictions(netadr_s const&, int)
000d6a30 l     F .text	000000c1              CBaseServer::CheckMasterServerRequestRestart()
000d3780 l     F .text	0000008b              CBaseServer::CheckPassword(netadr_s&, char const*, char const*)
000d40e0 l     F .text	0000004a              CBaseServer::CheckProtocol(netadr_s&, int, int)
000d5d20 l     F .text	0000035a              CBaseServer::CheckTimeouts()
002d6034 l     O .bss	0000000c              CBaseServer::CheckTimeouts()::tm_fmt
000d4700 l     F .text	000002dc              CBaseServer::Clear()
000d6970 l     F .text	000000ba              CBaseServer::CompressPackedEntity(ServerClass*, char const*, int&)
002d6058 l     O .bss	00004000              CBaseServer::CompressPackedEntity(ServerClass*, char const*, int&)::s_packedData
000d59c0 l     F .text	000000d7              CBaseServer::ConnectClient(netadr_s&, int, int, int, int, char const*, char const*, char const*, int)
000d5450 l     F .text	0000056d              CBaseServer::ConnectClient(netadr_s&, int, int, int, int, char const*, char const*, char const*, int) [clone .part.57]
000d50c0 l     F .text	00000384              CBaseServer::CreateFakeClient(char const*)
000d92d0 l     F .text	00000007              CBaseServer::CreateNewClient(int)
000d3110 l     F .text	00000017              CBaseServer::DisconnectClient(IClient*, char const*)
000d3f10 l     F .text	000000e0              CBaseServer::FillServerInfo(SVC_ServerInfo&)
002d5e60 l     O .bss	00000104              CBaseServer::FillServerInfo(SVC_ServerInfo&)::gamedir
000d92e0 l     F .text	0000000a              CBaseServer::FinishCertificateCheck(netadr_s&, int, char const*, int)
000d6b00 l     F .text	000000e1              CBaseServer::ForwardPacketsFromMasterServerUpdater()
000d3d10 l     F .text	0000005e              CBaseServer::GetChallengeNr(netadr_s&)
000d2ff0 l     F .text	0000000a              CBaseServer::GetChallengeType(netadr_s&)
000d6670 l     F .text	00000198              CBaseServer::GetClassBaseline(ServerClass*, void const**, int*)
002da0a8 l     O .bss	00000001              CBaseServer::GetClassBaseline(ServerClass*, void const**, int*)::dummy
000d9210 l     F .text	0000000e              CBaseServer::GetClassBits() const
000d91b0 l     F .text	0000000e              CBaseServer::GetClientCount() const
000d9180 l     F .text	00000024              CBaseServer::GetClient(int)
000d9220 l     F .text	0000000e              CBaseServer::GetCPUUsage()
000d6550 l     F .text	0000002d              CBaseServer::GetFinalTickTime() const
000d86a0 l     F .text	00000166              CBaseServer::GetFreeClient(netadr_s&)
000d6580 l     F .text	00000042              CBaseServer::GetInstanceBaselineTable()
000d65d0 l     F .text	00000042              CBaseServer::GetLightStyleTable()
000d91e0 l     F .text	0000000b              CBaseServer::GetMapName() const
000d9170 l     F .text	0000000e              CBaseServer::GetMaxClients() const
000d4660 l     F .text	00000025              CBaseServer::GetName() const
000d3000 l     F .text	000000e8              CBaseServer::GetNetStats(float&, float&)
000d5020 l     F .text	000000a0              CBaseServer::GetNextUserID()
000d9200 l     F .text	0000000e              CBaseServer::GetNumClasses() const
000d2e60 l     F .text	0000004b              CBaseServer::GetNumClients() const
000d2e10 l     F .text	0000004b              CBaseServer::GetNumFakeClients() const
000d2f50 l     F .text	0000009b              CBaseServer::GetNumPlayers()
000d2eb0 l     F .text	0000009f              CBaseServer::GetNumProxies() const
000d4690 l     F .text	00000062              CBaseServer::GetPassword() const
000d49e0 l     F .text	000001d8              CBaseServer::GetPlayerInfo(int, player_info_s*)
000d91f0 l     F .text	0000000e              CBaseServer::GetSpawnCount() const
000d91c0 l     F .text	0000000b              CBaseServer::GetTick() const
000d91d0 l     F .text	0000000e              CBaseServer::GetTickInterval() const
000d30f0 l     F .text	00000020              CBaseServer::GetTime() const
000d9320 l     F .text	00000019              CBaseServer::GetUDPPort() const
000d6620 l     F .text	00000046              CBaseServer::GetUserInfoTable()
000d5bd0 l     F .text	000000aa              CBaseServer::InactivateClients()
000d3570 l     F .text	00000086              CBaseServer::Init(bool)
000d9230 l     F .text	0000000f              CBaseServer::IsActive() const
000d9250 l     F .text	0000000f              CBaseServer::IsDedicated() const
000d92a0 l     F .text	00000007              CBaseServer::IsHLTV() const
000d9240 l     F .text	0000000f              CBaseServer::IsLoading() const
000d9270 l     F .text	00000012              CBaseServer::IsMultiplayer() const
000d9290 l     F .text	00000007              CBaseServer::IsPausable() const
000d9260 l     F .text	0000000f              CBaseServer::IsPaused() const
000d92b0 l     F .text	00000007              CBaseServer::IsReplay() const
000d6bf0 l     F .text	00000797              CBaseServer::ProcessConnectionlessPacket(netpacket_s*)
000d79d0 l     F .text	00000244              CBaseServer::RecalculateTags()
002da148 l     O .bss	00000001              CBaseServer::RecalculateTags()::bRecalculatingTags
000d5c80 l     F .text	0000009b              CBaseServer::ReconnectClients()
000d36c0 l     F .text	000000b7              CBaseServer::RejectConnection(netadr_s const&, int, char const*)
000d92c0 l     F .text	00000005              CBaseServer::RemoveClientFromGame(CBaseClient*)
000d7390 l     F .text	000001ea              CBaseServer::RemoveTag(char const*)
000d3d70 l     F .text	00000194              CBaseServer::ReplyChallenge(netadr_s&, int)
000d3600 l     F .text	000000c0              CBaseServer::ReplyServerChallenge(netadr_s&)
000d5aa0 l     F .text	00000012              CBaseServer::RequireValidChallenge(netadr_s&)
000d81f0 l     F .text	000003f7              CBaseServer::RunFrame()
002da0cc l     O .bss	0000000c              CBaseServer::RunFrame()::tm_fmt
002da0d8 l     O .bss	0000000c              CBaseServer::RunFrame()::tm_fmt
000d4bc0 l     F .text	00000292              CBaseServer::SendClientMessages(bool)
002da0e4 l     O .bss	0000000c              CBaseServer::SendClientMessages(bool)::tm_fmt
000d62f0 l     F .text	0000024a              CBaseServer::SendPendingServerInfo()
002d604c l     O .bss	0000000c              CBaseServer::SendPendingServerInfo()::tm_fmt
000d6540 l     F .text	0000000f              CBaseServer::SetMasterServerRulesDirty()
000d3160 l     F .text	00000025              CBaseServer::SetMaxClients(int)
000d4130 l     F .text	00000039              CBaseServer::SetPassword(char const*)
000d42c0 l     F .text	0000008e              CBaseServer::SetPaused(bool)
000d3130 l     F .text	0000000a              CBaseServer::ShouldUpdateMasterServer()
000d4550 l     F .text	00000108              CBaseServer::Shutdown()
000d6810 l     F .text	0000015b              CBaseServer::UncompressPackedEntity(PackedEntity*, int&)
000d7e40 l     F .text	000003b0              CBaseServer::UpdateMasterServer()
002da0c8 l     O .bss	00000001              CBaseServer::UpdateMasterServer()::bUpdateMasterServers
000d92f0 l     F .text	00000005              CBaseServer::UpdateMasterServerPlayers()
000d7d70 l     F .text	000000c2              CBaseServer::UpdateMasterServerRules()
002da0ac l     O .bss	0000000c              CBaseServer::UpdateMasterServer()::tm_fmt
000d6080 l     F .text	0000026d              CBaseServer::UpdateUserSettings()
002d6040 l     O .bss	0000000c              CBaseServer::UpdateUserSettings()::tm_fmt
000d3ff0 l     F .text	000000eb              CBaseServer::UserInfoChanged(int)
000d5ac0 l     F .text	00000082              CBaseServer::ValidChallenge(netadr_s&, int)
000d5b50 l     F .text	0000007c              CBaseServer::ValidInfoChallenge(netadr_s&, char const*)
001a1300 l     F .text	00001f23              CBaseServer::WriteDeltaEntities(CBaseClient*, CClientFrame*, CClientFrame*, bf_write&)
00327388 l     O .bss	0000000c              CBaseServer::WriteDeltaEntities(CBaseClient*, CClientFrame*, CClientFrame*, bf_write&)::tm_fmt
000d8810 l     F .text	0000094c              CBaseServer::WriteTempEntities(CBaseClient*, CFrameSnapshot*, CFrameSnapshot*, bf_write&, int)
002da0f0 l     O .bss	0000000c              CBaseServer::WriteTempEntities(CBaseClient*, CFrameSnapshot*, CFrameSnapshot*, bf_write&, int)::tm_fmt
000db3b0 l     F .text	0000000f              CBenchmarkResults::CBenchmarkResults()
000db3b0 l     F .text	0000000f              CBenchmarkResults::CBenchmarkResults()
000db3c0 l     F .text	0000000b              CBenchmarkResults::IsBenchmarkRunning()
000db560 l     F .text	00000042              CBenchmarkResults::SetResultsFilename(char const*)
000db5b0 l     F .text	000000a0              CBenchmarkResults::StartBenchmark(CCommand const&)
000db3d0 l     F .text	0000017f              CBenchmarkResults::StopBenchmark()
000db670 l     F .text	00000005              CBenchmarkResults::Upload()
0008dfc0 l     F .text	0000002b              CBlockingUDPSocket::~CBlockingUDPSocket()
0008dfc0 l     F .text	0000002b              CBlockingUDPSocket::~CBlockingUDPSocket()
0008dff0 l     F .text	0000001f              CBlockingUDPSocket::~CBlockingUDPSocket()
0008e080 l     F .text	0000006f              CBlockingUDPSocket::CBlockingUDPSocket()
0008e080 l     F .text	0000006f              CBlockingUDPSocket::CBlockingUDPSocket()
0008e010 l     F .text	0000006f              CBlockingUDPSocket::CreateSocket()
0008e1b0 l     F .text	0000008f              CBlockingUDPSocket::ReceiveSocketMessage(sockaddr_in*, unsigned char*, unsigned int)
0008e240 l     F .text	00000041              CBlockingUDPSocket::SendSocketMessage(sockaddr_in const&, unsigned char const*, unsigned int)
0008e0f0 l     F .text	000000b3              CBlockingUDPSocket::WaitForMessage(float)
00151a90 l     F .text	0000006a              CBrushBSPIterator::EnumerateLeaf(int, int)
001162b0 l     F .text	00000017              CBrushConvexInfo::GetContents(int)
0008e900 l     F .text	000001d6              CBSPTreeData::AddHandleToLeaf(int, unsigned short)
0008e640 l     F .text	0000007e              CBSPTreeData::~CBSPTreeData()
0008e640 l     F .text	0000007e              CBSPTreeData::~CBSPTreeData()
0008e6c0 l     F .text	0000001f              CBSPTreeData::~CBSPTreeData()
0008e3e0 l     F .text	000000f8              CBSPTreeData::CBSPTreeData()
0008e3e0 l     F .text	000000f8              CBSPTreeData::CBSPTreeData()
0008e550 l     F .text	00000035              CBSPTreeData::CountElementsInLeaf(int)
0008e800 l     F .text	00000056              CBSPTreeData::ElementMoved(unsigned short, Vector const&, Vector const&)
0008e2b0 l     F .text	0000008d              CBSPTreeData::EnumerateElementsInLeaf(int, IBSPTreeDataEnumerator*, int)
0008eaf0 l     F .text	00000027              CBSPTreeData::EnumerateLeaf(int, int)
0008e3a0 l     F .text	00000014              CBSPTreeData::EnumerateLeavesAlongRay(Ray_t const&, ISpatialLeafEnumerator*, int)
0008e340 l     F .text	00000014              CBSPTreeData::EnumerateLeavesAtPoint(Vector const&, ISpatialLeafEnumerator*, int)
0008e360 l     F .text	00000014              CBSPTreeData::EnumerateLeavesInBox(Vector const&, Vector const&, ISpatialLeafEnumerator*, int)
0008e380 l     F .text	00000014              CBSPTreeData::EnumerateLeavesInSphere(Vector const&, float, ISpatialLeafEnumerator*, int)
0008eb20 l     F .text	000001a2              CBSPTreeData::Init(ISpatialQuery*)
0008e510 l     F .text	00000038              CBSPTreeData::InsertIntoTree(unsigned short, Vector const&, Vector const&)
0008ed80 l     F .text	00000053              CBSPTreeData::Insert(int, Vector const&, Vector const&)
0008e290 l     F .text	0000001d              CBSPTreeData::IsElementInTree(unsigned short) const
0008ecd0 l     F .text	000000a6              CBSPTreeData::NewHandle(int)
0008e6e0 l     F .text	00000114              CBSPTreeData::RemoveFromTree(unsigned short)
0008e860 l     F .text	00000098              CBSPTreeData::Remove(unsigned short)
0008e590 l     F .text	000000ab              CBSPTreeData::Shutdown()
000dee10 l     F .text	00000049              Cbuf_AddExecutionMarker(ECmdExecutionMarker, char const*)
000de730 l     F .text	000000f2              Cbuf_AddText(char const*)
000dfeb0 l     F .text	000002a6              Cbuf_AddTextWithMarkers(ECmdExecutionMarker, char const*, ECmdExecutionMarker)
000de720 l     F .text	00000009              Cbuf_Clear()
000df590 l     F .text	000004a8              Cbuf_Execute()
000df500 l     F .text	00000089              Cbuf_ExecuteCommand(CCommand const&, cmd_source_t) [clone .constprop.60]
0030cf74 l     O .bss	0000000c              Cbuf_ExecuteCommand(CCommand const&, cmd_source_t)::tm_fmt
0030cf70 l     O .bss	00000004              Cbuf_Execute()::__executeCount
00238e1c l     O .rodata	0000000d              Cbuf_Execute()::__FUNCTION__
0030cf54 l     O .bss	0000000c              Cbuf_Execute()::tm_fmt
0030cf60 l     O .bss	0000000c              Cbuf_Execute()::tm_fmt
000dee60 l     F .text	00000016              Cbuf_HasRoomForExecutionMarkers(int)
000de6f0 l     F .text	0000001c              Cbuf_Init()
000de830 l     F .text	000000d0              Cbuf_InsertText(char const*)
000de710 l     F .text	00000005              Cbuf_Shutdown()
001ddce0 l     F .text	00000072              CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
001ddd60 l     F .text	0000034a              CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
001bfc70 l     F .text	00000028              CCallback<CSteam3Server, ComputeNewPlayerCompatibilityResult_t, true>::Run(void*)
001bfd10 l     F .text	00000028              CCallback<CSteam3Server, GSPolicyResponse_t, true>::Run(void*)
001bfdb0 l     F .text	00000028              CCallback<CSteam3Server, SteamServerConnectFailure_t, true>::Run(void*)
001bfde0 l     F .text	00000028              CCallback<CSteam3Server, SteamServersConnected_t, true>::Run(void*)
001bfd60 l     F .text	00000028              CCallback<CSteam3Server, SteamServersDisconnected_t, true>::Run(void*)
001bfcc0 l     F .text	00000028              CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>::Run(void*)
001bfe10 l     F .text	0000001e              CCallbackImpl<1>::~CCallbackImpl()
001bfe10 l     F .text	0000001e              CCallbackImpl<1>::~CCallbackImpl()
001bfd50 l     F .text	0000000a              CCallbackImpl<1>::GetCallbackSizeBytes()
001bfd40 l     F .text	0000000d              CCallbackImpl<1>::Run(void*, bool, unsigned long long)
001bfd00 l     F .text	0000000a              CCallbackImpl<20>::GetCallbackSizeBytes()
001bfcf0 l     F .text	0000000d              CCallbackImpl<20>::Run(void*, bool, unsigned long long)
001bfcb0 l     F .text	0000000a              CCallbackImpl<24>::GetCallbackSizeBytes()
001bfca0 l     F .text	0000000d              CCallbackImpl<24>::Run(void*, bool, unsigned long long)
001bfe30 l     F .text	0000001e              CCallbackImpl<4>::~CCallbackImpl()
001bfe30 l     F .text	0000001e              CCallbackImpl<4>::~CCallbackImpl()
001bfda0 l     F .text	0000000a              CCallbackImpl<4>::GetCallbackSizeBytes()
001bfd90 l     F .text	0000000d              CCallbackImpl<4>::Run(void*, bool, unsigned long long)
000db820 l     F .text	00000045              CChangeFrameList::~CChangeFrameList()
000db820 l     F .text	00000045              CChangeFrameList::~CChangeFrameList()
000db870 l     F .text	0000004c              CChangeFrameList::~CChangeFrameList()
000db960 l     F .text	00000085              CChangeFrameList::Copy()
000db760 l     F .text	0000000b              CChangeFrameList::GetNumProps()
000db7b0 l     F .text	00000046              CChangeFrameList::GetPropsChangedAfterTick(int, int*, int)
000db740 l     F .text	0000001a              CChangeFrameList::Release()
000db770 l     F .text	00000036              CChangeFrameList::SetChangeTick(int const*, int, int)
0018eab0 l     F .text	00000009              CClassMemoryPool<decal_t>::~CClassMemoryPool()
0018eab0 l     F .text	00000009              CClassMemoryPool<decal_t>::~CClassMemoryPool()
001f82b0 l     F .text	0000008a              CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
001f82b0 l     F .text	0000008a              CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
00108590 l     F .text	000000d0              CClientDatatableStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
001ca2a0 l     F .text	00000010              CClientEngineTools::AdjustEngineViewport(int&, int&, int&, int&)
001caec0 l     F .text	0000000e              CClientEngineTools::~CClientEngineTools()
001caec0 l     F .text	0000000e              CClientEngineTools::~CClientEngineTools()
001caf30 l     F .text	00000012              CClientEngineTools::~CClientEngineTools()
001c9fb0 l     F .text	0000000c              CClientEngineTools::InToolMode()
001ca340 l     F .text	00000010              CClientEngineTools::IsThirdPersonCamera()
001ca8c0 l     F .text	00000010              CClientEngineTools::LevelInitPostEntityAllTools()
001ca900 l     F .text	00000010              CClientEngineTools::LevelInitPreEntityAllTools()
001ca840 l     F .text	00000010              CClientEngineTools::LevelShutdownPostEntityAllTools()
001ca880 l     F .text	00000010              CClientEngineTools::LevelShutdownPreEntityAllTools()
001ca7c0 l     F .text	00000010              CClientEngineTools::PostRenderAllTools()
001c9f60 l     F .text	0000004a              CClientEngineTools::PostToolMessage(unsigned int, KeyValues*)
001ca800 l     F .text	00000010              CClientEngineTools::PreRenderAllTools()
001ca1f0 l     F .text	00000010              CClientEngineTools::SetupAudioState(AudioState_t&)
001ca240 l     F .text	00000010              CClientEngineTools::SetupEngineView(Vector&, QAngle&, float&)
001ca9c0 l     F .text	00000010              CClientEngineTools::VGui_PostRenderAllTools(int)
001caa00 l     F .text	00000010              CClientEngineTools::VGui_PreRenderAllTools(int)
000dcae0 l     F .text	00000042              CClientFrame::~CClientFrame()
000dcae0 l     F .text	00000042              CClientFrame::~CClientFrame()
000dcb30 l     F .text	0000001f              CClientFrame::~CClientFrame()
000dc9d0 l     F .text	000000a5              CClientFrame::CClientFrame()
000dc9d0 l     F .text	000000a5              CClientFrame::CClientFrame()
000dcb70 l     F .text	000000d0              CClientFrame::CClientFrame(CFrameSnapshot*)
000dcb70 l     F .text	000000d0              CClientFrame::CClientFrame(CFrameSnapshot*)
000dc920 l     F .text	000000a5              CClientFrame::CClientFrame(int)
000dc920 l     F .text	000000a5              CClientFrame::CClientFrame(int)
000dcc40 l     F .text	000001f0              CClientFrame::CopyFrame(CClientFrame&)
000dcb50 l     F .text	00000015              CClientFrame::Init(CFrameSnapshot*)
000dca80 l     F .text	0000000e              CClientFrame::Init(int)
000dd160 l     F .text	0000000a              CClientFrame::IsMemPoolAllocated()
000dcea0 l     F .text	00000044              CClientFrameManager::AddClientFrame(CClientFrame*)
000dcef0 l     F .text	00000028              CClientFrameManager::AllocateFrame()
000dd090 l     F .text	00000049              CClientFrameManager::~CClientFrameManager()
000dd090 l     F .text	00000049              CClientFrameManager::~CClientFrameManager()
000dd0e0 l     F .text	0000001f              CClientFrameManager::~CClientFrameManager()
000dd100 l     F .text	00000059              CClientFrameManager::CClientFrameManager()
000dd100 l     F .text	00000059              CClientFrameManager::CClientFrameManager()
000dce90 l     F .text	0000000b              CClientFrameManager::CountClientFrames()
000dcfc0 l     F .text	000000c6              CClientFrameManager::DeleteClientFrames(int)
000dcf20 l     F .text	00000051              CClientFrameManager::FreeFrame(CClientFrame*)
000dce30 l     F .text	0000005a              CClientFrameManager::GetClientFrame(int, bool)
000dcf80 l     F .text	00000040              CClientFrameManager::RemoveOldestFrame()
000dca90 l     F .text	0000004a              CClientFrame::SetSnapshot(CFrameSnapshot*)
0010a190 l     F .text	0000001a              CClientSendProp::~CClientSendProp()
0010a190 l     F .text	0000001a              CClientSendProp::~CClientSendProp()
0010a180 l     F .text	0000000e              CClientSendProp::CClientSendProp()
0010a180 l     F .text	0000000e              CClientSendProp::CClientSendProp()
0010a1f0 l     F .text	00000174              CClientSendTable::~CClientSendTable()
0010a1f0 l     F .text	00000174              CClientSendTable::~CClientSendTable()
0010a1b0 l     F .text	0000003b              CClientSendTable::CClientSendTable()
0010a1b0 l     F .text	0000003b              CClientSendTable::CClientSendTable()
000ddb20 l     F .text	0000013b              CClientState::~CClientState()
000ddb20 l     F .text	0000013b              CClientState::~CClientState()
000ddc90 l     F .text	0000001f              CClientState::~CClientState()
000ddcb0 l     F .text	000002b9              CClientState::CClientState()
000ddcb0 l     F .text	000002b9              CClientState::CClientState()
000dd660 l     F .text	00000005              CClientState::Clear()
000dd520 l     F .text	00000005              CClientState::ConnectionClosing(char const*)
000dd530 l     F .text	00000005              CClientState::ConnectionCrashed(char const*)
000dd5c0 l     F .text	00000005              CClientState::Disconnect(char const*, bool)
000dd5a0 l     F .text	00000005              CClientState::FileDenied(char const*, unsigned int)
000dd580 l     F .text	00000005              CClientState::FileReceived(char const*, unsigned int)
000dd590 l     F .text	00000005              CClientState::FileRequested(char const*, unsigned int)
000dd5b0 l     F .text	00000005              CClientState::FileSent(char const*, unsigned int)
000dd5d0 l     F .text	00000005              CClientState::FullConnect(netadr_s&)
000dd650 l     F .text	0000000a              CClientState::GetCDKeyHash()
000ddae0 l     F .text	00000007              CClientState::GetTime() const
000dd8a0 l     F .text	00000007              CClientState::HookClientStringTable(char const*)
000ddad0 l     F .text	00000007              CClientState::InstallEngineStringTableCallback(char const*)
000dd5f0 l     F .text	00000005              CClientState::InstallStringTableCallback(char const*)
000dd570 l     F .text	00000005              CClientState::PacketEnd()
000dd560 l     F .text	00000005              CClientState::PacketStart(int, int)
000dd6e0 l     F .text	0000000a              CClientState::ProcessBSPDecal(SVC_BSPDecal*)
000dd7a0 l     F .text	0000000a              CClientState::ProcessClassInfo(SVC_ClassInfo*)
000dd550 l     F .text	00000007              CClientState::ProcessConnectionlessPacket(netpacket_s*)
000dd700 l     F .text	0000000a              CClientState::ProcessCrosshairAngle(SVC_CrosshairAngle*)
000dd6c0 l     F .text	0000000a              CClientState::ProcessEntityMessage(SVC_EntityMessage*)
000dd720 l     F .text	0000000a              CClientState::ProcessFixAngle(SVC_FixAngle*)
000dd680 l     F .text	0000000a              CClientState::ProcessGameEvent(SVC_GameEvent*)
000dd840 l     F .text	0000000a              CClientState::ProcessPacketEntities(SVC_PacketEntities*)
000dd880 l     F .text	0000000a              CClientState::ProcessPrefetch(SVC_Prefetch*)
000dd7e0 l     F .text	0000000a              CClientState::ProcessServerInfo(SVC_ServerInfo*)
000dd780 l     F .text	0000000a              CClientState::ProcessSetPause(SVC_SetPause*)
000dd860 l     F .text	0000000a              CClientState::ProcessSounds(SVC_Sounds*)
000dd7c0 l     F .text	0000000a              CClientState::ProcessStringCmd(NET_StringCmd*)
000dd820 l     F .text	0000000a              CClientState::ProcessTempEntities(SVC_TempEntities*)
000dd800 l     F .text	0000000a              CClientState::ProcessTick(NET_Tick*)
000dd6a0 l     F .text	0000000a              CClientState::ProcessUserMessage(SVC_UserMessage*)
000dd740 l     F .text	0000000a              CClientState::ProcessVoiceData(SVC_VoiceData*)
000dd760 l     F .text	0000000a              CClientState::ProcessVoiceInit(SVC_VoiceInit*)
000dd640 l     F .text	00000005              CClientState::ReadDeletions(CEntityReadInfo&)
000dd620 l     F .text	00000005              CClientState::ReadDeltaEnt(CEntityReadInfo&)
000dd600 l     F .text	00000005              CClientState::ReadEnterPVS(CEntityReadInfo&)
000dd610 l     F .text	00000005              CClientState::ReadLeavePVS(CEntityReadInfo&)
000dd630 l     F .text	00000005              CClientState::ReadPreserveEnt(CEntityReadInfo&)
000dd890 l     F .text	00000005              CClientState::RunFrame()
000ddab0 l     F .text	00000005              CClientState::SendClientInfo()
000ddac0 l     F .text	00000005              CClientState::SendServerCmdKeyValues(KeyValues*)
000dd5e0 l     F .text	00000007              CClientState::SetSignonState(int, int)
000dd350 l     F .text	000001ac              CClockDriftMgr::AdjustAverageDifferenceBy(float)
000dd330 l     F .text	0000001e              CClockDriftMgr::AdjustFrameTime(float)
000dd1f0 l     F .text	00000009              CClockDriftMgr::CClockDriftMgr()
000dd1f0 l     F .text	00000009              CClockDriftMgr::CClockDriftMgr()
000dd170 l     F .text	0000007d              CClockDriftMgr::Clear()
000dd210 l     F .text	000000e3              CClockDriftMgr::GetCurrentClockDifference() const
000dd500 l     F .text	00000007              CClockDriftMgr::IsClockCorrectionEnabled()
000dd200 l     F .text	00000005              CClockDriftMgr::SetServerTick(int)
000dd300 l     F .text	00000025              CClockDriftMgr::ShowDebugInfo(float)
000e4c90 l     F .text	00000040              CCollisionBSPData::~CCollisionBSPData()
000e4c90 l     F .text	00000040              CCollisionBSPData::~CCollisionBSPData()
000e0540 l     F .text	00000023              CCollisionBSPData::GetSurfaceAtIndex(unsigned short)
002c6cc8 l     O .data	00000008              CCollisionBSPData::nullsurface
0013cac0 l     F .text	000005ae              CColorMeshData::CreateResource(colormeshparams_t const&)
001df620 l     F .text	000001cd              CCommandBuffer::AddText(char const*, int)
001df180 l     F .text	00000031              CCommandBuffer::BeginProcessingCommands(int)
001df260 l     F .text	00000053              CCommandBuffer::~CCommandBuffer()
001df260 l     F .text	00000053              CCommandBuffer::~CCommandBuffer()
001df7f0 l     F .text	00000136              CCommandBuffer::CCommandBuffer()
001df7f0 l     F .text	00000136              CCommandBuffer::CCommandBuffer()
001df1c0 l     F .text	0000008d              CCommandBuffer::Compact()
001df150 l     F .text	0000002b              CCommandBuffer::DelayAllQueuedCommands(int)
001df370 l     F .text	000000a1              CCommandBuffer::DequeueNextCommand()
001df420 l     F .text	00000036              CCommandBuffer::DequeueNextCommand(char const**&)
001df2c0 l     F .text	000000a2              CCommandBuffer::EndProcessingCommands()
001df250 l     F .text	0000000e              CCommandBuffer::GetNextCommandHandle()
001df090 l     F .text	000000a8              CCommandBuffer::GetNextCommandLength(char const*, int, int*, int*)
001df490 l     F .text	00000047              CCommandBuffer::InsertCommandAtAppropriateTime(int)
001df4e0 l     F .text	00000136              CCommandBuffer::InsertCommand(char const*, int, int)
001df460 l     F .text	00000029              CCommandBuffer::InsertImmediateCommand(int)
001df140 l     F .text	0000000f              CCommandBuffer::IsProcessingCommands()
001defa0 l     F .text	00000038              CCommandBuffer::LimitArgumentBufferSize(int)
001defe0 l     F .text	000000af              CCommandBuffer::ParseArgV0(CUtlBuffer&, char*, int, char const**)
001def80 l     F .text	00000011              CCommandBuffer::SetWaitDelayTime(int)
001e0930 l     F .text	00000045              CCommand::CCommand()
001e0930 l     F .text	00000045              CCommand::CCommand()
001e0980 l     F .text	00000140              CCommand::CCommand(int, char const**)
001e0980 l     F .text	00000140              CCommand::CCommand(int, char const**)
001e0ae0 l     F .text	0000000a              CCommand::DefaultBreakSet()
001e0d00 l     F .text	00000087              CCommand::FindArg(char const*) const
001e0d90 l     F .text	00000048              CCommand::FindArgInt(char const*, int) const
001e0ac0 l     F .text	00000019              CCommand::Reset()
001e0af0 l     F .text	00000209              CCommand::Tokenize(char const*, characterset_t*)
00126c40 l     F .text	00000029              CCommonHostState::SetWorldModel(model_t*)
000fdc90 l     F .text	00000005              CConstructorChecker::~CConstructorChecker()
000fdc90 l     F .text	00000005              CConstructorChecker::~CConstructorChecker()
00094250 l     F .text	0000006e              CCoreDispInfo::BaseFacePlaneToDispUV(Vector const&, Vector2D&)
00091090 l     F .text	000000ac              CCoreDispInfo::BuildTriBLtoTR(int)
00090fe0 l     F .text	000000ac              CCoreDispInfo::BuildTriTLtoBR(int)
000917f0 l     F .text	0000030e              CCoreDispInfo::CalcBoundingBoxAtNode(int)
00092250 l     F .text	000002cd              CCoreDispInfo::CalcDispSurfCoords(bool, int)
00091b40 l     F .text	000003a1              CCoreDispInfo::CalcErrorTermAtNode(int, int)
00091730 l     F .text	000000bf              CCoreDispInfo::CalcMinMaxBoundingBoxAtNode(int, Vector&, Vector&)
00091ef0 l     F .text	000000ed              CCoreDispInfo::CalcNeighborVertIndicesAtNode(int, int)
00091fe0 l     F .text	000000a4              CCoreDispInfo::CalcNodeInfo(int, int)
000929b0 l     F .text	00000b2b              CCoreDispInfo::CalcNormalFromEdges(int, int, bool*, Vector&)
00091370 l     F .text	00000159              CCoreDispInfo::CalcRayBoundingBoxes(int, int (*) [3])
000914d0 l     F .text	000000d2              CCoreDispInfo::CalcTriSurfBoundingBoxes(int, int (*) [3])
000915b0 l     F .text	00000102              CCoreDispInfo::CalcTriSurfIndices(int, int (*) [3])
000916c0 l     F .text	00000068              CCoreDispInfo::CalcTriSurfInfoAtNode(int)
000911f0 l     F .text	0000017c              CCoreDispInfo::CalcTriSurfPlanes(int, int (*) [3])
00092140 l     F .text	000000ab              CCoreDispInfo::CalcVertIndicesAtNodes(int)
00090f50 l     F .text	00000066              CCoreDispInfo::~CCoreDispInfo()
00090f50 l     F .text	00000066              CCoreDispInfo::~CCoreDispInfo()
00090e30 l     F .text	00000120              CCoreDispInfo::CCoreDispInfo()
00090e30 l     F .text	00000120              CCoreDispInfo::CCoreDispInfo()
00097280 l     F .text	0000009d              CCoreDispInfo::Create()
00096520 l     F .text	00000244              CCoreDispInfo::CreateBoundingBoxes(CoreDispBBox_t*, int)
00097150 l     F .text	00000087              CCoreDispInfo::CreateTris()
000971e0 l     F .text	00000095              CCoreDispInfo::CreateWithoutLOD()
00095b40 l     F .text	000007d9              CCoreDispInfo::DispUVToSurf_TriBLToTR_1(Vector const&, int, int, int, int, Vector&, Vector*, float*, bool)
00095350 l     F .text	000007e1              CCoreDispInfo::DispUVToSurf_TriBLToTR_2(Vector const&, int, int, int, int, Vector&, Vector*, float*, bool)
00096320 l     F .text	000000b2              CCoreDispInfo::DispUVToSurf_TriBLToTR(Vector&, Vector*, float*, float, float, Vector const&)
00094aa0 l     F .text	000007d9              CCoreDispInfo::DispUVToSurf_TriTLToBR_1(Vector const&, int, int, int, int, Vector&, Vector*, float*, bool)
000942c0 l     F .text	000007d1              CCoreDispInfo::DispUVToSurf_TriTLToBR_2(Vector const&, int, int, int, int, Vector&, Vector*, float*, bool)
00095280 l     F .text	000000c2              CCoreDispInfo::DispUVToSurf_TriTLToBR(Vector&, Vector*, float*, float, float, Vector const&)
000963e0 l     F .text	000000fa              CCoreDispInfo::DispUVToSurf(Vector2D const&, Vector&, Vector*, float*)
000934e0 l     F .text	0000005b              CCoreDispInfo::DoesEdgeExist(int, int, int, int)
000911e0 l     F .text	00000009              CCoreDispInfo::GenerateCollisionData()
00091140 l     F .text	00000095              CCoreDispInfo::GenerateCollisionSurface()
00093630 l     F .text	0000042b              CCoreDispInfo::GenerateDispSurf()
00093540 l     F .text	000000ee              CCoreDispInfo::GenerateDispSurfNormals()
00092520 l     F .text	00000481              CCoreDispInfo::GenerateDispSurfTangentSpaces()
000921f0 l     F .text	00000060              CCoreDispInfo::GenerateLODTree()
0008faf0 l     F .text	00000015              CCoreDispInfo::GetCornerNeighbors(int)
0008fb10 l     F .text	0000001e              CCoreDispInfo::GetDispUtilsByIndex(int)
0008fad0 l     F .text	00000015              CCoreDispInfo::GetEdgeNeighbor(int)
00091b00 l     F .text	0000003e              CCoreDispInfo::GetMaxErrorFromChildren(int, int)
00092090 l     F .text	000000a6              CCoreDispInfo::GetNodeVertIndexFromParentIndex(int, int, int)
000964e0 l     F .text	0000003b              CCoreDispInfo::GetPositionOnSurface(float, float, Vector&, Vector*, float*)
0008fb30 l     F .text	00000012              CCoreDispInfo::GetPowerInfo() const
00096770 l     F .text	00000066              CCoreDispInfo::GetTriangleIndicesForDispBBox(int, int (*) [3])
00096ac0 l     F .text	00000018              CCoreDispInfo::GetTriCount()
00096ae0 l     F .text	00000057              CCoreDispInfo::GetTriIndices(int, unsigned short&, unsigned short&, unsigned short&)
00096bc0 l     F .text	000000c4              CCoreDispInfo::GetTriPos(int, Vector&, Vector&, Vector&)
00097020 l     F .text	00000126              CCoreDispInfo::InitDispInfo(int, int, float, CDispVert const*, CDispTri const*)
00096ce0 l     F .text	0000033a              CCoreDispInfo::InitDispInfo(int, int, float, float*, Vector*, float*)
00096c90 l     F .text	00000047              CCoreDispInfo::InitTris()
00097350 l     F .text	00000030              CCoreDispInfo::IsTriBuildable(int)
00097380 l     F .text	00000019              CCoreDispInfo::IsTriRemove(int)
00097320 l     F .text	00000028              CCoreDispInfo::IsTriWalkable(int)
000973a0 l     F .text	0000024c              CCoreDispInfo::Position_Update(int, Vector)
00090fc0 l     F .text	0000001a              CCoreDispInfo::SetDispUtilsHelperInfo(CCoreDispInfo**, int)
00096b40 l     F .text	00000073              CCoreDispInfo::SetTriIndices(int, unsigned short, unsigned short, unsigned short)
000967e0 l     F .text	000002d1              CCoreDispInfo::SurfToBaseFacePlane(Vector const&, Vector&)
00090ac0 l     F .text	000000cd              CCoreDispNode::Init()
00090490 l     F .text	00000142              CCoreDispSurface::AdjustSurfPointData()
000907c0 l     F .text	000002f7              CCoreDispSurface::CalcLuxelCoords(int, bool, Vector const&, Vector const&)
00090100 l     F .text	00000009              CCoreDispSurface::CCoreDispSurface()
00090100 l     F .text	00000009              CCoreDispSurface::CCoreDispSurface()
00090400 l     F .text	00000090              CCoreDispSurface::FindSurfPointStartIndex()
00090180 l     F .text	00000183              CCoreDispSurface::GeneratePointStartIndexFromMappingAxes(Vector const&, Vector const&)
00090310 l     F .text	000000e2              CCoreDispSurface::GenerateSurfPointStartIndex()
0008ffb0 l     F .text	00000143              CCoreDispSurface::Init()
000905e0 l     F .text	000001dc              CCoreDispSurface::LongestInU(Vector const&, Vector const&)
00090110 l     F .text	00000065              CCoreDispSurface::SetNeighborData(CDispNeighbor const*, CDispCornerNeighbors const*)
000c0ad0 l     F .text	0000001d              CCPairLessFunc(ccpair const&, ccpair const&)
000db680 l     F .text	00000005              CCS_Init()
000db690 l     F .text	00000005              CCS_Shutdown()
000db6a0 l     F .text	00000005              CCS_Tick(float)
000ee010 l     F .text	000001f1              CCvarQuery::AreConVarsLinkable(ConVar const*, ConVar const*)
000edf40 l     F .text	00000036              CCvarQuery::Connect(void* (*)(char const*, int*))
000edf80 l     F .text	00000022              CCvarQuery::Init()
000edfe0 l     F .text	00000025              CCvarQuery::QueryInterface(char const*)
000edfb0 l     F .text	0000001d              CCvarQuery::Shutdown()
000ecda0 l     F .text	0000006b              CCvarUtilities::CountVariablesWithFlags(int)
000ecea0 l     F .text	000000c8              CCvarUtilities::CvarDifferences(CCommand const&)
000ed150 l     F .text	00000108              CCvarUtilities::CvarFindFlags_f(CCommand const&)
000ece10 l     F .text	0000006c              CCvarUtilities::CvarHelp(CCommand const&)
000ed4b0 l     F .text	00000a6d              CCvarUtilities::CvarList(CCommand const&)
000ecf90 l     F .text	00000197              CCvarUtilities::CvarToggle(CCommand const&)
000ec910 l     F .text	00000272              CCvarUtilities::IsCommand(CCommand const&)
000ecb90 l     F .text	00000155              CCvarUtilities::IsValidToggleCommand(char const*)
000ec750 l     F .text	000001be              CCvarUtilities::SetDirect(ConVar*, char const*)
000eccf0 l     F .text	000000a8              CCvarUtilities::WriteVariables(CUtlBuffer&)
0012bee0 l     F .text	00000054              CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
0012bee0 l     F .text	00000054              CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
001e1e30 l     F .text	0000000e              CDataManagerBase::AvailableSize()
001e1f80 l     F .text	000000aa              CDataManagerBase::BreakAllLocks()
001e23a0 l     F .text	000000d4              CDataManagerBase::BreakLock(memhandle_t__*)
001e1e50 l     F .text	00000018              CDataManagerBase::~CDataManagerBase()
001e1e50 l     F .text	00000018              CDataManagerBase::~CDataManagerBase()
001e1e70 l     F .text	0000001f              CDataManagerBase::~CDataManagerBase()
001e2cd0 l     F .text	0000007a              CDataManagerBase::CDataManagerBase(unsigned int)
001e2cd0 l     F .text	0000007a              CDataManagerBase::CDataManagerBase(unsigned int)
001e2aa0 l     F .text	00000126              CDataManagerBase::CreateHandle(bool)
001e2480 l     F .text	00000112              CDataManagerBase::DestroyResource(memhandle_t__*)
001e20f0 l     F .text	000000ba              CDataManagerBase::EnsureCapacity(unsigned int)
001e2740 l     F .text	000001f8              CDataManagerBase::FlushAll()
001e2940 l     F .text	0000015f              CDataManagerBase::FlushAllUnlocked()
001e21f0 l     F .text	0000001b              CDataManagerBase::FlushToTargetSize()
001e2030 l     F .text	000000b7              CDataManagerBase::GetForFreeByIndex(unsigned short)
0037b4a0 l     O .bss	00000004              CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
001e2bd0 l     F .text	00000076              CDataManagerBase::GetLockHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
001e2c50 l     F .text	00000076              CDataManagerBase::GetLRUHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
001e2300 l     F .text	0000009e              CDataManagerBase::GetResource_NoLock(memhandle_t__*)
001e1d10 l     F .text	0000007b              CDataManagerBase::GetResource_NoLockNoLRUTouch(memhandle_t__*)
001e2d50 l     F .text	00000005              CDataManagerBase::Lock()
001e25a0 l     F .text	000000de              CDataManagerBase::LockResource(memhandle_t__*)
001e2680 l     F .text	000000b1              CDataManagerBase::MarkAsStale(memhandle_t__*)
001e1cc0 l     F .text	0000003c              CDataManagerBase::NotifySizeChanged(memhandle_t__*, unsigned int, unsigned int)
001e21b0 l     F .text	00000036              CDataManagerBase::Purge(unsigned int)
001e1d00 l     F .text	0000000e              CDataManagerBase::SetTargetSize(unsigned int)
001e1d90 l     F .text	00000053              CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
001e1e20 l     F .text	0000000b              CDataManagerBase::TargetSize()
001e1df0 l     F .text	00000027              CDataManagerBase::ToHandle(unsigned short)
001e2210 l     F .text	00000080              CDataManagerBase::TouchByIndex(unsigned short)
001e2290 l     F .text	00000067              CDataManagerBase::TouchResource(memhandle_t__*)
001e2d60 l     F .text	0000000a              CDataManagerBase::TryLock()
001e2d70 l     F .text	00000005              CDataManagerBase::Unlock()
001e1e90 l     F .text	000000ef              CDataManagerBase::UnlockResource(memhandle_t__*)
001e1e40 l     F .text	0000000b              CDataManagerBase::UsedSize()
000a2f60 l     F .text	0000003f              CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::~CDataManager()
000a2f60 l     F .text	0000003f              CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::~CDataManager()
000a30c0 l     F .text	00000047              CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::~CDataManager()
000a3750 l     F .text	0000005f              CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::DestroyResourceStorage(void*)
000a2f40 l     F .text	0000001f              CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::GetRealSize(void*)
000a3000 l     F .text	0000007b              CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::Lock()
000a2fa0 l     F .text	00000054              CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::TryLock()
000a3080 l     F .text	00000035              CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>::Unlock()
00111b20 l     F .text	00000041              CDatatableStack::CDatatableStack(CSendTablePrecalc*, unsigned char*, int)
00111b20 l     F .text	00000041              CDatatableStack::CDatatableStack(CSendTablePrecalc*, unsigned char*, int)
00111b70 l     F .text	0000006d              CDatatableStack::Init(bool)
0018eaa0 l     F .text	00000005              CDecalChecker::~CDecalChecker()
0018eaa0 l     F .text	00000005              CDecalChecker::~CDecalChecker()
0018e700 l     F .text	00000047              CDecalVertCache::AllocBlock()
0018e750 l     F .text	0000008f              CDecalVertCache::AllocBlocks(int)
0018e5e0 l     F .text	00000118              CDecalVertCache::FindFreeBlocks(int)
0018e590 l     F .text	00000049              CDecalVertCache::FreeBlock(int)
0018e3d0 l     F .text	0000006e              CDecalVertCache::FreeCachedVerts(decal_t*)
0018e440 l     F .text	000000ca              CDecalVertCache::GetCachedVerts(decal_t*)
0018e510 l     F .text	0000005b              CDecalVertCache::Init()
0018e570 l     F .text	0000001d              CDecalVertCache::NextBlock(decalcache_t*)
0018e7e0 l     F .text	00000115              CDecalVertCache::StoreVertsInCache(decal_t*, CDecalVert*)
001c45b0 l     F .text	0000000f              CDedicatedServerAPI::AddConsoleText(char*)
001c5170 l     F .text	000001c9              CDedicatedServerAPI::Connect(void* (*)(char const*, int*))
001c4e30 l     F .text	0000007b              CDedicatedServerAPI::Disconnect()
001c5340 l     F .text	00000389              CDedicatedServerAPI::ModInit(ModInfo_t&)
001c5960 l     F .text	000000c4              CDedicatedServerAPI::ModShutdown()
001c4670 l     F .text	00000020              CDedicatedServerAPI::QueryInterface(char const*)
001c4860 l     F .text	0000002f              CDedicatedServerAPI::RunFrame()
001c4890 l     F .text	00000047              CDedicatedServerAPI::UpdateHostname(char*, int)
001c4570 l     F .text	00000038              CDedicatedServerAPI::UpdateStatus(float*, int*, int*, char*, int)
001e1af0 l     F .text	00000021              CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
0013c650 l     F .text	00000007              CDefaultDataCacheClient::GetItemName(unsigned int, void const*, char*, unsigned int)
0013c640 l     F .text	00000007              CDefaultDataCacheClient::HandleCacheNotification(DataCacheNotification_t const&)
00140470 l     F .text	00000014              CDefOps<CUtlSymbol>::LessFunc(CUtlSymbol const&, CUtlSymbol const&)
000f01f0 l     F .text	00000012              CDefOps<void*>::LessFunc(void* const&, void* const&)
0010f190 l     F .text	00000034              CDeltaBitsWriter::~CDeltaBitsWriter() [clone .isra.45]
00121430 l     F .text	0000013a              CDeltaEntityCache::AddDeltaBits(int, int, int, bf_write*)
00121360 l     F .text	00000009              CDeltaEntityCache::~CDeltaEntityCache()
00121360 l     F .text	00000009              CDeltaEntityCache::~CDeltaEntityCache()
00121280 l     F .text	0000008d              CDeltaEntityCache::CDeltaEntityCache()
00121280 l     F .text	0000008d              CDeltaEntityCache::CDeltaEntityCache()
001213d0 l     F .text	00000056              CDeltaEntityCache::FindDeltaBits(int, int, int&)
00121310 l     F .text	0000004d              CDeltaEntityCache::Flush()
00121370 l     F .text	00000056              CDeltaEntityCache::SetTick(int, int)
000f3100 l     F .text	00000022              CDemoFile::~CDemoFile()
000f3100 l     F .text	00000022              CDemoFile::~CDemoFile()
000f1b60 l     F .text	00000020              CDemoFile::CDemoFile()
000f1b60 l     F .text	00000020              CDemoFile::CDemoFile()
000f2e40 l     F .text	00000080              CDemoFile::Close()
000f2250 l     F .text	0000002d              CDemoFile::GetCurPos(bool)
000f3150 l     F .text	0000000e              CDemoFile::GetProtocolVersion()
000f3130 l     F .text	00000011              CDemoFile::GetSize()
000f2e20 l     F .text	0000001b              CDemoFile::IsOpen()
000f2ec0 l     F .text	00000238              CDemoFile::Open(char const*, bool, bool, int, bool)
000f20b0 l     F .text	00000194              CDemoFile::ReadCmdHeader(unsigned char&, int&)
000f1ee0 l     F .text	00000028              CDemoFile::ReadCmdInfo(democmdinfo_t&)
000f2520 l     F .text	00000028              CDemoFile::ReadConsoleCommand()
00315280 l     O .bss	00000400              CDemoFile::ReadConsoleCommand()::cmdstring
000f2b80 l     F .text	00000197              CDemoFile::ReadDemoHeader()
000f24d0 l     F .text	0000004a              CDemoFile::ReadNetworkDataTables(bf_read*)
000f22c0 l     F .text	000001ba              CDemoFile::ReadRawData(char*, int)
000f1d10 l     F .text	00000179              CDemoFile::ReadSequenceInfo(int&, int&)
000f2480 l     F .text	0000004a              CDemoFile::ReadStringTables(bf_read*)
000f2550 l     F .text	000000e9              CDemoFile::ReadUserCmd(char*, int&)
000f2280 l     F .text	00000036              CDemoFile::SeekTo(int, bool)
000f1f10 l     F .text	0000019c              CDemoFile::WriteCmdHeader(unsigned char, int)
0023a9c0 l     O .rodata	00000024              CDemoFile::WriteCmdHeader(unsigned char, int)::cmdname
000f1e90 l     F .text	00000043              CDemoFile::WriteCmdInfo(democmdinfo_t&)
000f2940 l     F .text	000000a8              CDemoFile::WriteConsoleCommand(char const*, int)
000f29f0 l     F .text	00000188              CDemoFile::WriteDemoHeader()
000f2d20 l     F .text	000000f2              CDemoFile::WriteFileBytes(void*, int)
000f28c0 l     F .text	00000076              CDemoFile::WriteNetworkDataTables(bf_write*, int)
000f2640 l     F .text	000000dd              CDemoFile::WriteRawData(char const*, int)
000f1b80 l     F .text	00000190              CDemoFile::WriteSequenceInfo(int, int)
000f2840 l     F .text	00000076              CDemoFile::WriteStringTables(bf_write*, int)
000f2720 l     F .text	00000112              CDemoFile::WriteUserCmd(int, char const*, unsigned char, int)
000f3260 l     F .text	0000009b              CDevShotGenerator::BuildMapList()
000f3540 l     F .text	00000038              CDevShotGenerator::~CDevShotGenerator()
000f3540 l     F .text	00000038              CDevShotGenerator::~CDevShotGenerator()
000f3220 l     F .text	00000039              CDevShotGenerator::CDevShotGenerator()
000f3220 l     F .text	00000039              CDevShotGenerator::CDevShotGenerator()
000f3320 l     F .text	00000011              CDevShotGenerator::EnableDevShotGeneration(bool)
000f33b0 l     F .text	00000075              CDevShotGenerator::NextMap()
000f3340 l     F .text	00000005              CDevShotGenerator::Shutdown()
000f3350 l     F .text	00000053              CDevShotGenerator::StartDevShotGeneration()
000a4c90 l     F .text	00000017              CDispCircumferenceIterator::CDispCircumferenceIterator(int)
000a4c90 l     F .text	00000017              CDispCircumferenceIterator::CDispCircumferenceIterator(int)
000a4cb0 l     F .text	000000c0              CDispCircumferenceIterator::Next()
0009ff70 l     F .text	00000418              CDispCollTree::AABBTree_BuildTreeTrisInSphere_r(Vector const&, float, int, unsigned short*, unsigned short)
002c8858 l     O .bss	0000000c              CDispCollTree::AABBTree_BuildTreeTrisInSphere_r(Vector const&, float, int, unsigned short*, unsigned short)::tm_fmt
0009f0d0 l     F .text	00000078              CDispCollTree::AABBTree_CalcBounds()
000a1770 l     F .text	000004fa              CDispCollTree::AABBTree_CopyDispData(CCoreDispInfo*)
000a1c70 l     F .text	0000003d              CDispCollTree::AABBTree_Create(CCoreDispInfo*)
000a0c90 l     F .text	00000123              CDispCollTree::AABBTree_CreateLeafs()
0009ee90 l     F .text	0000023a              CDispCollTree::AABBTree_GenerateBoxes_r(int, Vector*, Vector*)
000a0390 l     F .text	00000038              CDispCollTree::AABBTree_GetTrisInSphere(Vector const&, float, unsigned short*, int)
000a03d0 l     F .text	0000065b              CDispCollTree::AABBTree_IntersectAABB(Vector const&, Vector const&)
002c8864 l     O .bss	0000000c              CDispCollTree::AABBTree_IntersectAABB(Vector const&, Vector const&)::tm_fmt
0009f840 l     F .text	00000099              CDispCollTree::AABBTree_Ray(Ray_t const&, RayDispOutput_t&)
0009fcd0 l     F .text	000002a0              CDispCollTree::AABBTree_Ray(Ray_t const&, Vector const&, CBaseTrace*, bool)
002c884c l     O .bss	0000000c              CDispCollTree::AABBTree_Ray(Ray_t const&, Vector const&, CBaseTrace*, bool)::tm_fmt
0009f5c0 l     F .text	00000280              CDispCollTree::AABBTree_Ray(Ray_t const&, Vector const&, RayDispOutput_t&)
002c8840 l     O .bss	0000000c              CDispCollTree::AABBTree_Ray(Ray_t const&, Vector const&, RayDispOutput_t&)::tm_fmt
000a2790 l     F .text	000007a3              CDispCollTree::AABBTree_SweepAABB(Ray_t const&, Vector const&, CBaseTrace*)
002c8870 l     O .bss	0000000c              CDispCollTree::AABBTree_SweepAABB(Ray_t const&, Vector const&, CBaseTrace*)::tm_fmt
0009f150 l     F .text	00000464              CDispCollTree::AABBTree_TreeTrisRayBarycentricTest(Ray_t const&, Vector const&, int, RayDispOutput_t&, CDispCollTri**)
0009f8e0 l     F .text	000003e3              CDispCollTree::AABBTree_TreeTrisRayTest(Ray_t const&, Vector const&, int, CBaseTrace*, bool, CDispCollTri**)
000a1cc0 l     F .text	0000020d              CDispCollTree::AddPlane(Vector const&)
002304a0 l     O .rodata	00000048              CDispCollTree::AxisPlanesXYZ(Ray_t const&, CDispCollTri*, CDispCollHelper*)::g_ImpactNormalVecs
000a24d0 l     F .text	000002bf              CDispCollTree::Cache()
000a2270 l     F .text	00000257              CDispCollTree::Cache_Create(CDispCollTri*, int)
000a2130 l     F .text	00000135              CDispCollTree::Cache_EdgeCrossAxisX(Vector const&, Vector const&, Vector const&, CDispCollTri*, unsigned short&)
000a2000 l     F .text	0000012d              CDispCollTree::Cache_EdgeCrossAxisY(Vector const&, Vector const&, Vector const&, CDispCollTri*, unsigned short&)
000a1ed0 l     F .text	0000012d              CDispCollTree::Cache_EdgeCrossAxisZ(Vector const&, Vector const&, Vector const&, CDispCollTri*, unsigned short&)
002c8834 l     O .bss	0000000c              CDispCollTree::Cache()::tm_fmt
000a1260 l     F .text	00000228              CDispCollTree::~CDispCollTree()
000a1260 l     F .text	00000228              CDispCollTree::~CDispCollTree()
000a14e0 l     F .text	000001f9              CDispCollTree::CDispCollTree()
000a14e0 l     F .text	000001f9              CDispCollTree::CDispCollTree()
000a1cb0 l     F .text	00000009              CDispCollTree::Create(CCoreDispInfo*)
000a0bf0 l     F .text	00000098              CDispCollTree::GetVirtualMeshList(virtualmeshlist_t*)
000a0b10 l     F .text	000000d4              CDispCollTree::PointInBounds(Vector const&, Vector const&, Vector const&, bool)
000a0a30 l     F .text	000000dd              CDispCollTree::ResolveRayPlaneIntersect(float, float, Vector const&, float, CDispCollHelper*)
000a0dc0 l     F .text	00000499              CDispCollTree::SweepAABBTriIntersect(Ray_t const&, Vector const&, int, CDispCollTri*, CBaseTrace*)
0009eb10 l     F .text	000001aa              CDispCollTri::CalcPlane(CDispVector<Vector>&)
0009eab0 l     F .text	00000027              CDispCollTri::CDispCollTri()
0009eab0 l     F .text	00000027              CDispCollTri::CDispCollTri()
0009ecc0 l     F .text	000001cd              CDispCollTri::FindMinMax(CDispVector<Vector>&)
0009eae0 l     F .text	00000027              CDispCollTri::Init()
000a4be0 l     F .text	0000003b              CDispEdgeIterator::CDispEdgeIterator(CDispUtilsHelper*, int)
000a4be0 l     F .text	0000003b              CDispEdgeIterator::CDispEdgeIterator(CDispUtilsHelper*, int)
000a4c20 l     F .text	00000069              CDispEdgeIterator::Next()
000f8590 l     F .text	00000005              CDispInfo::AddDynamicLights(dlight_t*, unsigned int)
000f9580 l     F .text	00000109              CDispInfo::AddShadowDecal(unsigned short)
000f5780 l     F .text	00000005              CDispInfo::AddSingleDynamicAlphaLight(dlight_t&)
000f5770 l     F .text	00000005              CDispInfo::AddSingleDynamicLightBumped(dlight_t&)
000f5760 l     F .text	00000005              CDispInfo::AddSingleDynamicLight(dlight_t&)
000f91b0 l     F .text	000000f1              CDispInfo::AllocateDispDecalFragment(unsigned short, int)
000f9480 l     F .text	000000f1              CDispInfo::AllocateShadowDecalFragment(unsigned short, int)
000fc1e0 l     F .text	000000ae              CDispInfo::~CDispInfo()
000fc1e0 l     F .text	000000ae              CDispInfo::~CDispInfo()
000fc290 l     F .text	0000001f              CDispInfo::~CDispInfo()
000fabe0 l     F .text	00000240              CDispInfo::CDispInfo()
000fabe0 l     F .text	00000240              CDispInfo::CDispInfo()
000f8f40 l     F .text	0000004c              CDispInfo::ClearAllDecalFragments()
000f90d0 l     F .text	00000049              CDispInfo::ClearAllShadowDecalFragments()
000f8e90 l     F .text	000000a8              CDispInfo::ClearDecalFragments(unsigned short)
000f5210 l     F .text	00000081              CDispInfo::ClearLOD()
000f9020 l     F .text	000000ab              CDispInfo::ClearShadowDecalFragments(unsigned short)
000f8580 l     F .text	00000007              CDispInfo::ComputeDynamicLightMask(dlight_t*)
000f6050 l     F .text	00000005              CDispInfo::ComputeLightmapAndTextureCoordinate(RayDispOutput_t const&, Vector2D*, Vector2D*)
000f87f0 l     F .text	00000089              CDispInfo::ComputeShadowFragments(unsigned short, int&, int&)
000fae30 l     F .text	0000018f              CDispInfo::CopyCoreDispData(model_t*, MaterialSystem_SortInfo_t const*, CCoreDispInfo const*, bool)
000fae20 l     F .text	00000005              CDispInfo::CopyCoreDispVertData(CCoreDispInfo const*, float)
000fd2d0 l     F .text	0000007f              CDispInfo::CopyMapDispData(ddispinfo_t const*)
000f3ab0 l     F .text	00000061              CDispInfo::CullDecals(int, CDispDecal**, int, CDispDecal**, int&)
000f87a0 l     F .text	00000041              CDispInfo::GenerateDecalFragments(CVertIndex const&, int, unsigned short, CDispDecalBase*)
000f85a0 l     F .text	000001f4              CDispInfo::GenerateDecalFragments_R(CVertIndex const&, int, unsigned short, CDispDecalBase*, int)
000f8510 l     F .text	00000032              CDispInfo::GetBoundingBox(Vector&, Vector&)
000f6280 l     F .text	00000015              CDispInfo::GetCornerNeighbors(int)
000f62b0 l     F .text	00000029              CDispInfo::GetDispUtilsByIndex(int)
000f6250 l     F .text	00000015              CDispInfo::GetEdgeNeighbor(int)
000f5f20 l     F .text	00000130              CDispInfo::GetFlatVert(int)
000f81e0 l     F .text	00000317              CDispInfo::GetIntersectingSurfaces(GetIntersectingSurfaces_Struct*)
000f8570 l     F .text	0000000e              CDispInfo::GetParent()
000f6230 l     F .text	0000000e              CDispInfo::GetPowerInfo() const
000f8880 l     F .text	0000001b              CDispInfo::GetTag()
000f5040 l     F .text	000001c4              CDispInfo::InitializeActiveVerts()
000f92b0 l     F .text	000001cb              CDispInfo::NotifyAddDecal(decal_t*, float)
000f8f90 l     F .text	00000089              CDispInfo::NotifyRemoveDecal(unsigned short)
000fafc0 l     F .text	0000001e              CDispInfo::NumLightMaps()
000f9120 l     F .text	00000086              CDispInfo::RemoveShadowDecal(unsigned short)
000f5300 l     F .text	0000000a              CDispInfo::Render(CGroupMesh*, bool)
000f8500 l     F .text	00000005              CDispInfo::RenderWireframeInLightmapPage(int)
000f8550 l     F .text	00000011              CDispInfo::SetParent(msurface2_t*)
000f88a0 l     F .text	00000018              CDispInfo::SetTag()
000f5e50 l     F .text	000000c3              CDispInfo::SetupDecalNodeIntersect(CVertIndex const&, int, CDispDecalBase*, ShadowInfo_t const*)
003157a0 l     O .bss	00001214              CDispInfo::SetupDecalNodeIntersect(CVertIndex const&, int, CDispDecalBase*, ShadowInfo_t const*)::cache
000f5790 l     F .text	000006c0              CDispInfo::SetupDecalNodeIntersect_R(CVertIndex const&, int, CDispDecalBase*, ShadowInfo_t const*, int, CDecalNodeSetupCache*)
000f4960 l     F .text	000006d9              CDispInfo::SpecifyBuildableDynamicMesh()
000f3b20 l     F .text	00000759              CDispInfo::SpecifyDynamicMesh()
000f4280 l     F .text	000006d9              CDispInfo::SpecifyWalkableDynamicMesh()
000f62e0 l     F .text	00000626              CDispInfo::TesselateDisplacement()
000f3660 l     F .text	00000440              CDispInfo::TestAddDecalTri(int, unsigned short, CDispDecal*)
000f3aa0 l     F .text	00000005              CDispInfo::TestAddDecalTri(int, unsigned short, CDispShadowDecal*)
000f6060 l     F .text	000001b2              CDispInfo::TestRay(Ray_t const&, float, float, float&, Vector2D*, Vector2D*)
000f35b0 l     F .text	000000b0              CDispInfo::UpdateBoundingBox()
000e9eb0 l     F .text	00000202              CDispLeafBuilder::BuildLeafListForDisplacement(int)
000a4a80 l     F .text	00000028              CDispSubEdgeIterator::CDispSubEdgeIterator()
000a4a80 l     F .text	00000028              CDispSubEdgeIterator::CDispSubEdgeIterator()
000a4bc0 l     F .text	00000020              CDispSubEdgeIterator::IsLastVert() const
000a4b80 l     F .text	00000037              CDispSubEdgeIterator::Next()
000a4ab0 l     F .text	000000c7              CDispSubEdgeIterator::Start(CDispUtilsHelper*, int, int, bool)
000a4db0 l     F .text	00000024              CDispUtilsHelper::GetCornerPointIndex(int) const
000a4e10 l     F .text	000000a3              CDispUtilsHelper::GetEdgeMidPoint(int) const
000a4d70 l     F .text	00000015              CDispUtilsHelper::GetPower() const
000a4d90 l     F .text	00000015              CDispUtilsHelper::GetSideLength() const
000a4de0 l     F .text	00000030              CDispUtilsHelper::VertIndexToInt(CVertIndex const&) const
001e4e30 l     F .text	00000012              CDllDemandLoader::~CDllDemandLoader()
001e4e30 l     F .text	00000012              CDllDemandLoader::~CDllDemandLoader()
001e4e50 l     F .text	00000025              CDllDemandLoader::~CDllDemandLoader()
001e4d90 l     F .text	0000001f              CDllDemandLoader::CDllDemandLoader(char const*)
001e4d90 l     F .text	0000001f              CDllDemandLoader::CDllDemandLoader(char const*)
001e4db0 l     F .text	00000050              CDllDemandLoader::GetFactory()
001e4e00 l     F .text	00000026              CDllDemandLoader::Unload()
000ff360 l     F .text	00000010              CDownloadListGenerator::~CDownloadListGenerator()
000ff360 l     F .text	00000010              CDownloadListGenerator::~CDownloadListGenerator()
000fe6b0 l     F .text	00000051              CDownloadListGenerator::CDownloadListGenerator()
000fe6b0 l     F .text	00000051              CDownloadListGenerator::CDownloadListGenerator()
000fe890 l     F .text	000001a5              CDownloadListGenerator::ForceModelBounds(char const*, Vector const&, Vector const&)
000ff180 l     F .text	000001dd              CDownloadListGenerator::ForceSimpleMaterial(char const*)
000fe840 l     F .text	00000044              CDownloadListGenerator::OnLevelLoadEnd()
000fe710 l     F .text	00000125              CDownloadListGenerator::OnLevelLoadStart(char const*)
000fee60 l     F .text	000000ee              CDownloadListGenerator::OnModelPrecached(char const*)
000fed90 l     F .text	00000022              CDownloadListGenerator::OnResourcePrecached(char const*)
000fed30 l     F .text	0000005d              CDownloadListGenerator::OnResourcePrecached(char const*) [clone .part.6]
000fea40 l     F .text	000002e9              CDownloadListGenerator::OnResourcePrecachedFullPath(char*, char const*)
000fedc0 l     F .text	00000094              CDownloadListGenerator::OnSoundPrecached(char const*)
000fef50 l     F .text	0000022d              CDownloadListGenerator::SetStringTable(INetworkStringTable*)
00171d10 l     F .text	00000169              CEdgeList::AddEdge(Vector**, int)
00171bd0 l     F .text	00000132              CEdgeList::AddSurface(cplane_t const&)
00170530 l     F .text	0000009d              CEdgeList::AdvanceActiveEdgeList(float)
0016fef0 l     F .text	000001f1              CEdgeList::CEdgeList()
0016fef0 l     F .text	000001f1              CEdgeList::CEdgeList()
00170800 l     F .text	00000019              CEdgeList::CheckConsistency()
001700f0 l     F .text	00000039              CEdgeList::CleanupCurrentSurfaceList()
001701b0 l     F .text	00000032              CEdgeList::ClearCurrentSurfaceList()
00170ed0 l     F .text	00000215              CEdgeList::CullSmallOccluders()
0016fe80 l     F .text	0000006a              CEdgeList::EdgeLess::Less(unsigned short const&, unsigned short const&, void*)
001702c0 l     F .text	00000111              CEdgeList::IntroduceNewActiveEdges(float)
001701f0 l     F .text	000000c2              CEdgeList::IntroduceSingleActiveEdge(CEdgeList::Edge_t const*, float)
001703e0 l     F .text	00000145              CEdgeList::LocateEdgeCrossingDiscontinuity(float, float, int&, CEdgeList::Edge_t**)
00170820 l     F .text	00000005              CEdgeList::QueueVisualization(unsigned char*)
00171270 l     F .text	00000459              CEdgeList::ReduceActiveEdgeList(CWingedEdgeList&, float, float)
00171900 l     F .text	000002c8              CEdgeList::ReduceActiveList(CWingedEdgeList&)
00170130 l     F .text	00000031              CEdgeList::RemoveAll()
001705d0 l     F .text	0000015b              CEdgeList::ReorderActiveEdgeList(int, CEdgeList::Edge_t**)
00170170 l     F .text	00000038              CEdgeList::ResetActiveEdgeList()
00170730 l     F .text	000000c3              CEdgeList::SpewActiveEdgeList(float, bool)
00323d40 l     O .bss	00000004              CEdgeList::s_pSortSurfaces
0016f3b0 l     F .text	00000038              CEdgeList::SurfCompare(void const*, void const*)
00170830 l     F .text	00000005              CEdgeList::Visualize(unsigned char*)
0020d7c0 l     F .text	00000018              CeilPow2(int)
000acb20 l     F .text	0000000e              CEmphasisSample::SetSelected(bool)
001e1bc0 l     F .text	00000019              CEmptyConVar::~CEmptyConVar()
001e1bc0 l     F .text	00000019              CEmptyConVar::~CEmptyConVar()
001e1be0 l     F .text	0000002c              CEmptyConVar::~CEmptyConVar()
001e1b90 l     F .text	0000000a              CEmptyConVar::GetName() const
001e1bb0 l     F .text	00000007              CEmptyConVar::IsFlagSet(int) const
001e1b30 l     F .text	00000005              CEmptyConVar::SetValue(char const*)
001e1b50 l     F .text	00000005              CEmptyConVar::SetValue(float)
001e1b70 l     F .text	00000005              CEmptyConVar::SetValue(int)
0011a910 l     F .text	000000d0              CEngineBSPTree::EnumerateLeavesAlongRay(Ray_t const&, ISpatialLeafEnumerator*, int)
0011a8d0 l     F .text	00000035              CEngineBSPTree::EnumerateLeavesAtPoint(Vector const&, ISpatialLeafEnumerator*, int)
0011a7f0 l     F .text	000000d1              CEngineBSPTree::EnumerateLeavesInBox(Vector const&, Vector const&, ISpatialLeafEnumerator*, int)
0011af10 l     F .text	00000066              CEngineBSPTree::EnumerateLeavesInSphere(Vector const&, float, ISpatialLeafEnumerator*, int)
0011a320 l     F .text	0000000d              CEngineBSPTree::LeafCount() const
001c6dc0 l     F .text	0000000e              CEngine::~CEngine()
001c6dc0 l     F .text	0000000e              CEngine::~CEngine()
001c6ec0 l     F .text	00000012              CEngine::~CEngine()
001c6fb0 l     F .text	00000045              CEngine::CEngine()
001c6fb0 l     F .text	00000045              CEngine::CEngine()
001c7000 l     F .text	0000011b              CEngine::FilterTime(float)
001c7120 l     F .text	000009a7              CEngine::Frame()
002543b4 l     O .rodata	00000006              CEngine::Frame()::__FUNCTION__
00375100 l     O .bss	00000004              CEngine::Frame()::pSyncReportConVar
00375088 l     O .bss	00000008              CEngine::Frame()::s_lastFrequencyTimestamp
00375078 l     O .bss	0000000c              CEngine::Frame()::tm_fmt
00375104 l     O .bss	0000000c              CEngine::Frame()::tm_fmt
00375110 l     O .bss	0000000c              CEngine::Frame()::tm_fmt
0037511c l     O .bss	0000000c              CEngine::Frame()::tm_fmt
001c6e10 l     F .text	0000001c              CEngine::GetCurTime()
001c6df0 l     F .text	0000001c              CEngine::GetFrameTime()
001c6e40 l     F .text	0000000b              CEngine::GetQuitting()
001c6dd0 l     F .text	0000000b              CEngine::GetState()
001c6ee0 l     F .text	00000067              CEngine::Load(bool, char const*)
00111f10 l     F .text	00000096              CEngineRecipientFilter::AddAllPlayers()
00111e60 l     F .text	000000b0              CEngineRecipientFilter::AddPlayersFromBitMask(CBitVec<255>&)
00111e10 l     F .text	00000047              CEngineRecipientFilter::AddPlayersFromFilter(IRecipientFilter const*)
00111db0 l     F .text	0000005c              CEngineRecipientFilter::AddRecipient(int)
00111fb0 l     F .text	00000066              CEngineRecipientFilter::AddRecipientsByPAS(Vector const&)
00112020 l     F .text	00000066              CEngineRecipientFilter::AddRecipientsByPVS(Vector const&)
001120b0 l     F .text	00000045              CEngineRecipientFilter::~CEngineRecipientFilter()
001120b0 l     F .text	00000045              CEngineRecipientFilter::~CEngineRecipientFilter()
00112100 l     F .text	0000004c              CEngineRecipientFilter::~CEngineRecipientFilter()
00111c50 l     F .text	00000039              CEngineRecipientFilter::CEngineRecipientFilter()
00111c50 l     F .text	00000039              CEngineRecipientFilter::CEngineRecipientFilter()
00111be0 l     F .text	0000000b              CEngineRecipientFilter::GetRecipientCount() const
00111bf0 l     F .text	00000055              CEngineRecipientFilter::GetRecipientIndex(int) const
00111d50 l     F .text	00000055              CEngineRecipientFilter::IncludesPlayer(int)
001120a0 l     F .text	0000000c              CEngineRecipientFilter::IsInitMessage() const
00112090 l     F .text	0000000c              CEngineRecipientFilter::IsReliable() const
00111cc0 l     F .text	0000000c              CEngineRecipientFilter::MakeInitMessage()
00111cb0 l     F .text	0000000c              CEngineRecipientFilter::MakeReliable()
00111cd0 l     F .text	00000072              CEngineRecipientFilter::RemoveRecipient(int)
00111c90 l     F .text	00000017              CEngineRecipientFilter::Reset()
00116c50 l     F .text	0000000f              CEngineReplay::Cbuf_AddText(char const*)
00116c40 l     F .text	00000009              CEngineReplay::Cbuf_Execute()
00116880 l     F .text	0000000e              CEngineReplay::~CEngineReplay()
00116880 l     F .text	0000000e              CEngineReplay::~CEngineReplay()
00116890 l     F .text	00000012              CEngineReplay::~CEngineReplay()
00116be0 l     F .text	00000015              CEngineReplay::CopyFile(char const*, char const*)
00116730 l     F .text	0000000a              CEngineReplay::GetGameDir()
001167e0 l     F .text	00000016              CEngineReplay::GetGameServer()
00116750 l     F .text	0000000a              CEngineReplay::GetHostTickCount()
00116740 l     F .text	0000000b              CEngineReplay::GetHostTime()
00116c00 l     F .text	00000009              CEngineReplay::GetModDir()
00116860 l     F .text	0000000f              CEngineReplay::GetReplayDemoHeader()
001167a0 l     F .text	0000001c              CEngineReplay::GetReplayServer()
001167c0 l     F .text	0000001c              CEngineReplay::GetReplayServerAsIServer()
00116800 l     F .text	00000046              CEngineReplay::GetSessionRecordBuffer(unsigned char**, int*)
00116c20 l     F .text	0000001a              CEngineReplay::Host_Disconnect(bool)
00116c10 l     F .text	00000009              CEngineReplay::HostState_Shutdown()
00116850 l     F .text	0000000c              CEngineReplay::IsDedicated()
00116c60 l     F .text	00000009              CEngineReplay::IsSupportedModAndPlatform()
00116bb0 l     F .text	00000023              CEngineReplay::LZSS_Compress(char*, unsigned int*, char const*, unsigned int)
00116b80 l     F .text	00000023              CEngineReplay::LZSS_Decompress(char*, unsigned int*, char const*, unsigned int)
00116b50 l     F .text	0000002b              CEngineReplay::MD5_HashBuffer(unsigned char*, unsigned char const*, int, unsigned int*)
001168f0 l     F .text	00000082              CEngineReplay::NET_GetHostnameAsIP(char const*, char*, int)
001169c0 l     F .text	00000186              CEngineReplay::ReadDemoHeader(char const*, demoheader_t&)
00116980 l     F .text	00000010              CEngineReplay::RecalculateTags()
00116990 l     F .text	0000002b              CEngineReplay::ResetReplayRecordBuffer()
00116780 l     F .text	0000001d              CEngineReplay::TicksToTime(int)
00116760 l     F .text	0000001e              CEngineReplay::TimeToTicks(float)
001c6de0 l     F .text	0000000e              CEngine::SetNextState(IEngine::EngineState_t)
001c6e30 l     F .text	0000000e              CEngine::SetQuitting(int)
001b1fd0 l     F .text	0000000e              CEngineSingleUserFilter::~CEngineSingleUserFilter()
001b1fd0 l     F .text	0000000e              CEngineSingleUserFilter::~CEngineSingleUserFilter()
001b20b0 l     F .text	00000012              CEngineSingleUserFilter::~CEngineSingleUserFilter()
001b1f90 l     F .text	0000000a              CEngineSingleUserFilter::GetRecipientCount() const
001b1fa0 l     F .text	0000000b              CEngineSingleUserFilter::GetRecipientIndex(int) const
001b1fb0 l     F .text	00000007              CEngineSingleUserFilter::IsBroadcastMessage() const
001b1fc0 l     F .text	00000007              CEngineSingleUserFilter::IsInitMessage() const
001b1f80 l     F .text	0000000c              CEngineSingleUserFilter::IsReliable() const
00112160 l     F .text	0000000e              CEngineSoundServer::~CEngineSoundServer()
00112160 l     F .text	0000000e              CEngineSoundServer::~CEngineSoundServer()
00112190 l     F .text	00000012              CEngineSoundServer::~CEngineSoundServer()
00112690 l     F .text	0000000e              CEngineSoundServer::CEngineSoundServer()
00112690 l     F .text	0000000e              CEngineSoundServer::CEngineSoundServer()
00112180 l     F .text	00000005              CEngineSoundServer::EmitAmbientSound(char const*, float, int, int, float)
00112c50 l     F .text	000000b1              CEngineSoundServer::EmitSentenceByIndex(IRecipientFilter&, int, int, int, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
001126a0 l     F .text	0000012c              CEngineSoundServer::EmitSoundInternal(IRecipientFilter&, int, int, char const*, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
001123e0 l     F .text	000002a0              CEngineSoundServer::EmitSound(IRecipientFilter&, int, int, char const*, float, float, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
003176c4 l     O .bss	0000000c              CEngineSoundServer::EmitSound(IRecipientFilter&, int, int, char const*, float, float, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)::tm_fmt
001127d0 l     F .text	00000471              CEngineSoundServer::EmitSound(IRecipientFilter&, int, int, char const*, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)
003176d0 l     O .bss	0000000c              CEngineSoundServer::EmitSound(IRecipientFilter&, int, int, char const*, float, soundlevel_t, int, int, int, Vector const*, Vector const*, CUtlVector<Vector, CUtlMemory<Vector, int> >*, bool, float, int)::tm_fmt
001130b0 l     F .text	00000010              CEngineSoundServer::GetActiveSounds(CUtlVector<SndInfo_t, CUtlMemory<SndInfo_t, int> >&)
001121b0 l     F .text	00000015              CEngineSoundServer::GetDistGainFromSoundLevel(soundlevel_t, float)
001130f0 l     F .text	00000016              CEngineSoundServer::GetGuidForLastSoundEmitted()
001121d0 l     F .text	0000000f              CEngineSoundServer::GetSoundDuration(char const*)
001122b0 l     F .text	00000078              CEngineSoundServer::IsSoundPrecached(char const*)
001130d0 l     F .text	00000016              CEngineSoundServer::IsSoundStillPlaying(int)
00113080 l     F .text	00000005              CEngineSoundServer::NotifyBeginMoviePlayback()
00113090 l     F .text	00000005              CEngineSoundServer::NotifyEndMoviePlayback()
00113110 l     F .text	00000022              CEngineSoundServer::PrecacheSentenceGroup(char const*)
001121e0 l     F .text	000000c9              CEngineSoundServer::PrecacheSound(char const*, bool, bool)
00112330 l     F .text	000000ae              CEngineSoundServer::PrefetchSound(char const*)
00112ec0 l     F .text	000000e8              CEngineSoundServer::SetPlayerDSP(IRecipientFilter&, int, bool)
00112fb0 l     F .text	000000c9              CEngineSoundServer::SetRoomType(IRecipientFilter&, int)
001130a0 l     F .text	00000010              CEngineSoundServer::SetVolumeByGuid(int, float)
00112170 l     F .text	00000005              CEngineSoundServer::StopAllSounds(bool)
001130c0 l     F .text	00000010              CEngineSoundServer::StopSoundByGuid(int)
00112d20 l     F .text	000000fe              CEngineSoundServer::StopSound(int, int, char const*)
00113320 l     F .text	00000010              CEngineStats::BeginFrame()
001132d0 l     F .text	00000022              CEngineStats::BeginRun()
001132c0 l     F .text	00000010              CEngineStats::CEngineStats()
001132c0 l     F .text	00000010              CEngineStats::CEngineStats()
00113330 l     F .text	00000063              CEngineStats::ComputeFrameTimeStats()
001133a0 l     F .text	00000005              CEngineStats::EndFrame()
00113300 l     F .text	0000001c              CEngineStats::EndRun()
00113410 l     F .text	0000001d              CEngineStats::GetRunTime()
001133b0 l     F .text	00000005              CEngineStats::NextFrame()
001133c0 l     F .text	00000030              CEngineStats::PauseStats(bool)
001133f0 l     F .text	0000000f              CEngineStats::TimedStatInFrame(EngineTimedStatId_t) const
00113400 l     F .text	0000000f              CEngineStats::TotalTimedStat(EngineTimedStatId_t) const
00114950 l     F .text	000004e7              CEngineTrace::ClipRayToBBox(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
001148d0 l     F .text	00000071              CEngineTrace::ClipRayToBSP(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
00114ee0 l     F .text	0000037f              CEngineTrace::ClipRayToCollideable(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
001144c0 l     F .text	00000017              CEngineTrace::ClipRayToCustom(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
001134c0 l     F .text	00000056              CEngineTrace::ClipRayToEntity(Ray_t const&, unsigned int, IHandleEntity*, CGameTrace*)
001144e0 l     F .text	0000023f              CEngineTrace::ClipRayToHitboxes(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
00114e40 l     F .text	0000009a              CEngineTrace::ClipRayToOBB(Ray_t const&, unsigned int, ICollideable*, CGameTrace*)
00114720 l     F .text	000001a8              CEngineTrace::ClipRayToVPhysics(Ray_t const&, unsigned int, ICollideable*, studiohdr_t*, CGameTrace*)
00115260 l     F .text	000001fb              CEngineTrace::ClipTraceToTrace(CGameTrace&, CGameTrace*)
00113780 l     F .text	00000067              CEngineTrace::EnumerateEntities(Ray_t const&, bool, IEntityEnumerator*)
00113710 l     F .text	0000006d              CEngineTrace::EnumerateEntities(Vector const&, Vector const&, IEntityEnumerator*)
00115d60 l     F .text	000003b9              CEngineTrace::GetBrushesInAABB(Vector const&, Vector const&, CUtlVector<int, CUtlMemory<int, int> >*, int)
00116120 l     F .text	0000015e              CEngineTrace::GetBrushInfo(int, CUtlVector<Vector4D, CUtlMemory<Vector4D, int> >*, int*)
001138e0 l     F .text	0000043b              CEngineTrace::GetCollidableFromDisplacementsInAABB(Vector const&, Vector const&)
001138a0 l     F .text	0000000f              CEngineTrace::GetLeafContainingPoint(Vector const&)
00114320 l     F .text	00000196              CEngineTrace::GetPointContents_Collideable(ICollideable*, Vector const&)
00113fc0 l     F .text	0000035e              CEngineTrace::GetPointContents(Vector const&, IHandleEntity**)
00317784 l     O .bss	0000000c              CEngineTrace::GetPointContents(Vector const&, IHandleEntity**)::tm_fmt
00113490 l     F .text	00000028              CEngineTrace::GetStatByIndex(int, bool)
001138b0 l     F .text	00000024              CEngineTrace::PointOutsideWorld(Vector const&)
00113dc0 l     F .text	00000037              CEngineTraceServer::GetCollideable(IHandleEntity*)
00113520 l     F .text	0000002c              CEngineTraceServer::GetWorldCollideable()
00113d20 l     F .text	00000096              CEngineTraceServer::HandleEntityToCollideable(IHandleEntity*, ICollideable**, char const**)
00113e00 l     F .text	0000009d              CEngineTraceServer::SetTraceEntity(ICollideable*, CGameTrace*)
00113470 l     F .text	0000000a              CEngineTraceServer::SpatialPartitionMask() const
00113480 l     F .text	0000000a              CEngineTraceServer::SpatialPartitionTriggerMask() const
001137f0 l     F .text	000000a2              CEngineTrace::SetupLeafAndEntityListBox(Vector const&, Vector const&, CTraceListData&)
00113ea0 l     F .text	00000113              CEngineTrace::SetupLeafAndEntityListRay(Ray_t const&, CTraceListData&)
00113550 l     F .text	000001be              CEngineTrace::SweepCollideable(ICollideable*, Vector const&, Vector const&, QAngle const&, unsigned int, ITraceFilter*, CGameTrace*)
001159e0 l     F .text	00000368              CEngineTrace::TraceRayAgainstLeafAndEntityList(Ray_t const&, CTraceListData&, unsigned int, ITraceFilter*, CGameTrace*)
00115460 l     F .text	00000577              CEngineTrace::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*)
003177a8 l     O .bss	00000004              CEngineTrace::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*)::_counter
0023ca28 l     O .rodata	00000009              CEngineTrace::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*)::__FUNCTION__
00317790 l     O .bss	0000000c              CEngineTrace::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*)::tm_fmt
0018a270 l     F .text	0000001b              CEngineUniformRandomStream::RandomFloatExp(float, float, float)
0018a290 l     F .text	00000015              CEngineUniformRandomStream::RandomFloat(float, float)
0018a250 l     F .text	00000015              CEngineUniformRandomStream::RandomInt(int, int)
0018a240 l     F .text	00000005              CEngineUniformRandomStream::SetSeed(int)
001c6f50 l     F .text	00000023              CEngine::Unload()
0011ec00 l     F .text	0000000e              CEntityInfo::~CEntityInfo()
0011ec00 l     F .text	0000000e              CEntityInfo::~CEntityInfo()
0011ec40 l     F .text	00000012              CEntityInfo::~CEntityInfo()
00116310 l     F .text	00000040              CEntityListAlongRay::EnumElement(IHandleEntity*)
0011ec10 l     F .text	0000000e              CEntityReadInfo::~CEntityReadInfo()
0011ec10 l     F .text	0000000e              CEntityReadInfo::~CEntityReadInfo()
0011ec20 l     F .text	00000012              CEntityReadInfo::~CEntityReadInfo()
001a3320 l     F .text	0000000e              CEntityWriteInfo::~CEntityWriteInfo()
001a3320 l     F .text	0000000e              CEntityWriteInfo::~CEntityWriteInfo()
001a33c0 l     F .text	00000012              CEntityWriteInfo::~CEntityWriteInfo()
001162d0 l     F .text	00000040              CEnumerationFilter::EnumElement(IHandleEntity*)
001c6130 l     F .text	00000497              CErrorText<95000>::BuildComment(char const*, bool)
001c5e10 l     F .text	0000031d              CErrorText<95000>::BuildCommentExtended()
001c5a80 l     F .text	00000005              CErrorText<95000>::~CErrorText()
001c5a80 l     F .text	00000005              CErrorText<95000>::~CErrorText()
001c5dc0 l     F .text	0000004b              CErrorText<95000>::CommentPrintf(char const*, ...)
000d3140 l     F .text	00000018              CEventInfo_LessFunc(CEventInfo* const&, CEventInfo* const&)
000e3210 l     F .text	00000017              CFastPointLeafNum::CFastPointLeafNum()
000e3210 l     F .text	00000017              CFastPointLeafNum::CFastPointLeafNum()
000e3230 l     F .text	0000008f              CFastPointLeafNum::GetLeaf(Vector const&)
00116ee0 l     F .text	0000000e              CFileTransferMgr::~CFileTransferMgr()
00116ee0 l     F .text	0000000e              CFileTransferMgr::~CFileTransferMgr()
00116ef0 l     F .text	00000012              CFileTransferMgr::~CFileTransferMgr()
00116f10 l     F .text	0000000e              CFileTransferMgr::CFileTransferMgr()
00116f10 l     F .text	0000000e              CFileTransferMgr::CFileTransferMgr()
00116f50 l     F .text	00000007              CFileTransferMgr::FirstIncoming() const
00116f80 l     F .text	00000005              CFileTransferMgr::GetIncomingUserData(int, void const*&, int&)
00116f30 l     F .text	00000005              CFileTransferMgr::HandleClientDisconnect(INetChannel*)
00116f40 l     F .text	00000005              CFileTransferMgr::HandleReceivedData(INetChannel*, void const*, int)
00116f70 l     F .text	00000007              CFileTransferMgr::InvalidIncoming() const
00116f60 l     F .text	00000007              CFileTransferMgr::NextIncoming(int) const
00116f20 l     F .text	00000007              CFileTransferMgr::StartSending(INetChannel*, void const*, int, char const*, int, int)
001c5d20 l     F .text	0000009d              CFmtStrN<128, false>::CFmtStrN(char const*, ...)
001c5d20 l     F .text	0000009d              CFmtStrN<128, false>::CFmtStrN(char const*, ...)
00374f70 l     O .bss	00000004              CFmtStrN<128, false>::CFmtStrN(char const*, ...)::scAsserted
0016d410 l     F .text	0000000c              CFmtStrN<128, false>::InitQuietTruncation()
0016d860 l     F .text	000000a0              CFmtStrN<128, false>::sprintf(char const*, ...)
00323a90 l     O .bss	00000004              CFmtStrN<128, false>::sprintf(char const*, ...)::scAsserted
000f3460 l     F .text	0000009d              CFmtStrN<256, false>::CFmtStrN(char const*, ...)
000f3460 l     F .text	0000009d              CFmtStrN<256, false>::CFmtStrN(char const*, ...)
00315710 l     O .bss	00000004              CFmtStrN<256, false>::CFmtStrN(char const*, ...)::scAsserted
000f3450 l     F .text	0000000c              CFmtStrN<256, false>::InitQuietTruncation()
001a6180 l     F .text	0000000d              CFrameSnapshot::AddReference()
001a63d0 l     F .text	000000ee              CFrameSnapshot::~CFrameSnapshot()
001a63d0 l     F .text	000000ee              CFrameSnapshot::~CFrameSnapshot()
001a6320 l     F .text	000000a2              CFrameSnapshot::CFrameSnapshot()
001a6320 l     F .text	000000a2              CFrameSnapshot::CFrameSnapshot()
001a5ea0 l     F .text	0000000c              CFrameSnapshotManager::AddEntityReference(int)
001a6650 l     F .text	00000134              CFrameSnapshotManager::AddExplicitDelete(int)
001a64c0 l     F .text	0000008e              CFrameSnapshotManager::~CFrameSnapshotManager()
001a64c0 l     F .text	0000008e              CFrameSnapshotManager::~CFrameSnapshotManager()
001a6550 l     F .text	0000001f              CFrameSnapshotManager::~CFrameSnapshotManager()
001a61b0 l     F .text	0000016a              CFrameSnapshotManager::CFrameSnapshotManager()
001a61b0 l     F .text	0000016a              CFrameSnapshotManager::CFrameSnapshotManager()
001a6790 l     F .text	000000f3              CFrameSnapshotManager::CreateEmptySnapshot(int, int)
001a6010 l     F .text	0000013b              CFrameSnapshotManager::CreatePackedEntity(CFrameSnapshot*, int)
001a6570 l     F .text	0000009b              CFrameSnapshotManager::DeleteFrameSnapshot(CFrameSnapshot*)
001a6b70 l     F .text	00000125              CFrameSnapshotManager::GetCachedUncompressedEntity(PackedEntity*)
001a6000 l     F .text	0000000d              CFrameSnapshotManager::GetMutex()
001a6150 l     F .text	00000024              CFrameSnapshotManager::GetPackedEntity(CFrameSnapshot*, int)
001a5fc0 l     F .text	00000033              CFrameSnapshotManager::GetPreviouslySentPacket(int, int)
001a5c70 l     F .text	00000075              CFrameSnapshotManager::LevelChanged()
001a5cf0 l     F .text	00000032              CFrameSnapshotManager::NextSnapshot(CFrameSnapshot const*)
001a5d30 l     F .text	00000164              CFrameSnapshotManager::RemoveEntityReference(int)
001a5eb0 l     F .text	0000007d              CFrameSnapshotManager::ShouldForceRepack(CFrameSnapshot*, int, int)
001a6890 l     F .text	000002d5              CFrameSnapshotManager::TakeTickSnapshot(int)
001a5f30 l     F .text	00000087              CFrameSnapshotManager::UsePreviouslySentPacket(CFrameSnapshot*, int, int)
001a6190 l     F .text	0000001b              CFrameSnapshot::NextSnapshot() const
001a6610 l     F .text	00000032              CFrameSnapshot::ReleaseReference()
003277c0 l     O .bss	00000030              CFrameSnapshot::s_Allocator
00127810 l     F .text	000002d2              CFrameTimer::ComputeFrameVariability()
00127630 l     F .text	000001e0              CFrameTimer::MarkFrame()
00319940 l     O .bss	00000004              CFrameTimer::MarkFrame()::last_host_tickcount
00127600 l     F .text	00000023              CFrameTimer::ResetDeltas()
000a9d80 l     F .text	0000003c              CFSLoadModuleInfo::CFSLoadModuleInfo()
000a9d80 l     F .text	0000003c              CFSLoadModuleInfo::CFSLoadModuleInfo()
000a9dc0 l     F .text	00000019              CFSMountContentInfo::CFSMountContentInfo()
000a9dc0 l     F .text	00000019              CFSMountContentInfo::CFSMountContentInfo()
000a9d30 l     F .text	00000021              CFSSearchPathsInit::CFSSearchPathsInit()
000a9d30 l     F .text	00000021              CFSSearchPathsInit::CFSSearchPathsInit()
000a9d60 l     F .text	0000001e              CFSSteamSetupInfo::CFSSteamSetupInfo()
000a9d60 l     F .text	0000001e              CFSSteamSetupInfo::CFSSteamSetupInfo()
001b2020 l     F .text	00000015              CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
001b2020 l     F .text	00000015              CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
001b2090 l     F .text	00000019              CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
001b2060 l     F .text	0000001d              CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
0013c660 l     F .text	0000000e              CFunctor::~CFunctor()
0013c660 l     F .text	0000000e              CFunctor::~CFunctor()
0013c800 l     F .text	00000012              CFunctor::~CFunctor()
001c7b50 l     F .text	0000000e              CGame::~CGame()
001c7b50 l     F .text	0000000e              CGame::~CGame()
001c7c50 l     F .text	00000012              CGame::~CGame()
001c7c80 l     F .text	00000012              CGame::CGame()
001c7c80 l     F .text	00000012              CGame::CGame()
00254474 l     O .rodata	00000009              CGame::CLASSNAME
0019c4c0 l     F .text	00000151              CGameClient::ActivatePlayer()
0019e9c0 l     F .text	0000008a              CGameClient::~CGameClient()
0019e9c0 l     F .text	0000008a              CGameClient::~CGameClient()
0019ea80 l     F .text	0000001f              CGameClient::~CGameClient()
0019eaa0 l     F .text	0000026a              CGameClient::CGameClient(int, CBaseServer*)
0019eaa0 l     F .text	0000026a              CGameClient::CGameClient(int, CBaseServer*)
0019dc10 l     F .text	000000aa              CGameClient::CheckConnect()
0019e600 l     F .text	000001a4              CGameClient::Clear()
0019c990 l     F .text	00000210              CGameClient::Connect(char const*, int, INetChannel*, bool, int)
0019c230 l     F .text	0000005f              CGameClient::ConnectionClosing(char const*)
0019ccc0 l     F .text	00000087              CGameClient::ConnectionCrashed(char const*)
0019c630 l     F .text	00000179              CGameClient::Disconnect(char const*, ...)
0019d420 l     F .text	000000d2              CGameClient::DownloadCustomizations()
0019e4a0 l     F .text	0000004a              CGameClient::ExecuteStringCommand(char const*)
0019e2b0 l     F .text	000001da              CGameClient::ExecuteStringCommand(char const*) [clone .part.30]
0019c2e0 l     F .text	0000002c              CGameClient::FileDenied(char const*, unsigned int)
0019cd60 l     F .text	0000005a              CGameClient::FileReceived(char const*, unsigned int)
0019ce50 l     F .text	00000084              CGameClient::FileRequested(char const*, unsigned int)
0019c2a0 l     F .text	0000002c              CGameClient::FileSent(char const*, unsigned int)
0019d950 l     F .text	000001e0              CGameClient::FillSoundsMessage(SVC_Sounds&)
0019c180 l     F .text	00000094              CGameClient::GetDeltaFrame(int)
0019e5e0 l     F .text	0000000d              CGameClient::GetPrevPackInfo()
0019e4f0 l     F .text	000000e9              CGameClient::GetSendFrame()
0019cc90 l     F .text	0000001e              CGameClient::IgnoreTempEntity(CEventInfo*)
0019e7c0 l     F .text	000001c4              CGameClient::Inactivate()
0019e240 l     F .text	00000069              CGameClient::IsEngineClientCommand(CCommand const&) const
0019d2a0 l     F .text	0000009e              CGameClient::IsHearingClient(int) const
0019c0e0 l     F .text	0000003a              CGameClient::IsProximityHearingClient(int) const
0019c170 l     F .text	0000000f              CGameClient::PacketEnd()
0019c130 l     F .text	00000023              CGameClient::PacketStart(int, int)
0019d510 l     F .text	00000098              CGameClient::ProcessClientInfo(CLC_ClientInfo*)
0019c070 l     F .text	00000031              CGameClient::ProcessCmdKeyValues(CLC_CmdKeyValues*)
0019d0d0 l     F .text	00000028              CGameClient::ProcessFileCRCCheck(CLC_FileCRCCheck*)
0019cee0 l     F .text	000001de              CGameClient::ProcessFileCRCCheck(CLC_FileCRCCheck*) [clone .part.15]
0019c0c0 l     F .text	0000000a              CGameClient::ProcessFileMD5Check(CLC_FileMD5Check*)
0019d150 l     F .text	00000134              CGameClient::ProcessMove(CLC_Move*)
0019cc30 l     F .text	0000005d              CGameClient::ProcessRespondCvarValue(CLC_RespondCvarValue*)
0019d110 l     F .text	0000002a              CGameClient::ProcessSaveReplay(CLC_SaveReplay*)
0019cbb0 l     F .text	0000006b              CGameClient::ProcessVoiceData(CLC_VoiceData*)
0019c7c0 l     F .text	00000027              CGameClient::Reconnect()
0019cdd0 l     F .text	00000061              CGameClient::SendNetMsg(INetMessage&, bool)
0019ed10 l     F .text	000001ba              CGameClient::SendSignonData()
0019df30 l     F .text	0000030c              CGameClient::SendSnapshot(CClientFrame*)
0019eed0 l     F .text	00000249              CGameClient::SendSound(SoundInfo_t&, bool)
0019d3e0 l     F .text	0000003c              CGameClient::SetRate(int, bool)
0019dcc0 l     F .text	00000141              CGameClient::SetSignonState(int, int)
0019c8f0 l     F .text	00000084              CGameClient::SetUpdateRate(int, bool)
0019d5b0 l     F .text	00000272              CGameClient::SetupPackInfo(CFrameSnapshot*)
0019d830 l     F .text	0000011c              CGameClient::SetupPrevPackInfo()
0019c310 l     F .text	000000e8              CGameClient::ShouldSendMessages()
0019c400 l     F .text	000000ba              CGameClient::SpawnPlayer()
0019c7f0 l     F .text	00000089              CGameClient::UpdateAcknowledgedFramecount(int)
0019c880 l     F .text	00000056              CGameClient::UpdateUserSettings()
0019db30 l     F .text	000000da              CGameClient::WriteGameSounds(bf_write&)
0019de10 l     F .text	0000011f              CGameClient::WriteViewAngleUpdate()
001c7b00 l     F .text	0000000a              CGame::CreateGameWindow()
001c7b10 l     F .text	00000005              CGame::DestroyGameWindow()
001c7c20 l     F .text	00000005              CGame::DispatchAllStoredGameMessages()
00117000 l     F .text	00000035              CGameEvent::~CGameEvent()
00117000 l     F .text	00000035              CGameEvent::~CGameEvent()
00117040 l     F .text	0000001f              CGameEvent::~CGameEvent()
00117190 l     F .text	00000064              CGameEvent::CGameEvent(CGameEventDescriptor*)
00117190 l     F .text	00000064              CGameEvent::CGameEvent(CGameEventDescriptor*)
001170e0 l     F .text	0000002a              CGameEvent::GetBool(char const*, bool)
00117170 l     F .text	00000012              CGameEvent::GetFloat(char const*, float)
001170c0 l     F .text	00000012              CGameEvent::GetInt(char const*, int)
00116fe0 l     F .text	00000012              CGameEvent::GetName() const
00117060 l     F .text	00000012              CGameEvent::GetString(char const*, char const*)
00117110 l     F .text	00000012              CGameEvent::IsEmpty(char const*)
00116fa0 l     F .text	0000000f              CGameEvent::IsLocal() const
00116fb0 l     F .text	0000000f              CGameEvent::IsReliable() const
00119430 l     F .text	00000060              CGameEventManager::AddListenerAll(void*, int)
00119490 l     F .text	0000007f              CGameEventManager::AddListener(IGameEventListener2*, char const*, bool)
00119300 l     F .text	00000127              CGameEventManager::AddListener(void*, CGameEventDescriptor*, int)
00119180 l     F .text	0000015e              CGameEventManager::~CGameEventManager()
00119180 l     F .text	0000015e              CGameEventManager::~CGameEventManager()
001192e0 l     F .text	0000001f              CGameEventManager::~CGameEventManager()
00119050 l     F .text	0000012e              CGameEventManager::CGameEventManager()
00119050 l     F .text	0000012e              CGameEventManager::CGameEventManager()
00117f00 l     F .text	0000014d              CGameEventManager::ConPrintEvent(IGameEvent*)
001176b0 l     F .text	00000042              CGameEventManager::CreateEvent(CGameEventDescriptor*)
00118910 l     F .text	000000a5              CGameEventManager::CreateEvent(char const*, bool)
00117200 l     F .text	00000095              CGameEventManager::DuplicateEvent(IGameEvent*)
00117af0 l     F .text	0000003c              CGameEventManager::FindEventListener(void*)
00118cf0 l     F .text	000000a3              CGameEventManager::FindListener(IGameEventListener2*, char const*)
001187f0 l     F .text	0000002a              CGameEventManager::FireEventClientSide(IGameEvent*)
00118820 l     F .text	0000002a              CGameEventManager::FireEvent(IGameEvent*, bool)
00118050 l     F .text	0000079b              CGameEventManager::FireEventIntern(IGameEvent*, bool, bool)
0023d69c l     O .rodata	00000010              CGameEventManager::FireEventIntern(IGameEvent*, bool, bool)::__FUNCTION__
003179fc l     O .bss	0000000c              CGameEventManager::FireEventIntern(IGameEvent*, bool, bool)::tm_fmt
00317a08 l     O .bss	0000000c              CGameEventManager::FireEventIntern(IGameEvent*, bool, bool)::tm_fmt
00317a68 l     O .bss	0000000c              CGameEventManager::FireEventIntern(IGameEvent*, bool, bool)::tm_fmt
00317a74 l     O .bss	0000000c              CGameEventManager::FireEventIntern(IGameEvent*, bool, bool)::tm_fmt
00116fc0 l     F .text	0000001a              CGameEventManager::FreeEvent(IGameEvent*)
001188a0 l     F .text	00000064              CGameEventManager::GetEventDescriptor(char const*)
00117bb0 l     F .text	0000003f              CGameEventManager::GetEventDescriptor(IGameEvent*)
00118850 l     F .text	00000047              CGameEventManager::GetEventDescriptor(int)
001172e0 l     F .text	00000021              CGameEventManager::HasClientListenersChanged(bool)
001172a0 l     F .text	0000002d              CGameEventManager::Init()
00119750 l     F .text	00000156              CGameEventManager::LoadEventsFromFile(char const*)
00119e70 l     F .text	0000003d              CGameEventManagerOld::AddListener(IGameEventListener*, bool)
00119df0 l     F .text	0000007f              CGameEventManagerOld::AddListener(IGameEventListener*, char const*, bool)
0011a050 l     F .text	0000000e              CGameEventManagerOld::~CGameEventManagerOld()
0011a050 l     F .text	0000000e              CGameEventManagerOld::~CGameEventManagerOld()
0011a060 l     F .text	00000012              CGameEventManagerOld::~CGameEventManagerOld()
00119fa0 l     F .text	0000002a              CGameEventManagerOld::FireEventClientOnly(KeyValues*)
00119eb0 l     F .text	000000bf              CGameEventManagerOld::FireEventIntern(KeyValues*, bool, bool)
00119fd0 l     F .text	0000002a              CGameEventManagerOld::FireEvent(KeyValues*)
00119f70 l     F .text	0000002a              CGameEventManagerOld::FireEventServerOnly(KeyValues*)
00119da0 l     F .text	0000002c              CGameEventManagerOld::GetEvent(char const*)
0011a010 l     F .text	00000013              CGameEventManagerOld::LoadEventsFromFile(char const*)
00119dd0 l     F .text	00000011              CGameEventManagerOld::RemoveListener(IGameEventListener*)
0011a030 l     F .text	00000013              CGameEventManagerOld::Reset()
00119d80 l     F .text	00000016              CGameEventManagerOld::SerializeKeyValues(KeyValues*, bf_write*, CGameEvent*)
00119d60 l     F .text	00000016              CGameEventManagerOld::UnserializeKeyValue(bf_read*)
001189c0 l     F .text	00000325              CGameEventManager::ParseEventList(SVC_GameEventList*)
00119510 l     F .text	0000023f              CGameEventManager::RegisterEvent(KeyValues*)
00117b30 l     F .text	0000007a              CGameEventManager::ReloadEventDefinitions()
00118e70 l     F .text	000000a6              CGameEventManager::RemoveListener(IGameEventListener2*)
00118da0 l     F .text	000000c6              CGameEventManager::RemoveListenerOld(void*)
00118f20 l     F .text	0000012c              CGameEventManager::Reset()
00117bf0 l     F .text	00000305              CGameEventManager::SerializeEvent(IGameEvent*, bf_write*)
001172d0 l     F .text	0000000e              CGameEventManager::Shutdown()
00117700 l     F .text	000003e1              CGameEventManager::UnserializeEvent(bf_read*)
00117310 l     F .text	00000255              CGameEventManager::WriteEventList(SVC_GameEventList*)
00117570 l     F .text	0000013e              CGameEventManager::WriteListenEventList(CLC_ListenEvents*)
001170a0 l     F .text	00000019              CGameEvent::SetBool(char const*, bool)
00117150 l     F .text	00000012              CGameEvent::SetFloat(char const*, float)
00117080 l     F .text	00000012              CGameEvent::SetInt(char const*, int)
00117130 l     F .text	00000012              CGameEvent::SetString(char const*, char const*)
001c7c30 l     F .text	00000020              CGame::GetDesktopInfo(int&, int&, int&)
001c7b90 l     F .text	00000007              CGame::GetMainDeviceWindow()
001c7b80 l     F .text	00000007              CGame::GetMainWindow()
001c7ba0 l     F .text	00000007              CGame::GetMainWindowAddress()
001c7bd0 l     F .text	0000003b              CGame::GetWindowRect(int*, int*, int*, int*)
001c7b60 l     F .text	0000000a              CGame::Init(void*)
001c7b20 l     F .text	0000000a              CGame::InputAttachToGameWindow()
001c7b30 l     F .text	00000005              CGame::InputDetachFromGameWindow()
001c7c10 l     F .text	0000000c              CGame::IsActiveApp()
001c7cc0 l     F .text	00000005              CGame::PlayStartupVideos()
001b3380 l     F .text	00000116              CGameServer::AssignClassIds()
001ae640 l     F .text	00000110              CGameServer::BroadcastSound(SoundInfo_t&, IRecipientFilter&)
001b0cc0 l     F .text	000000bb              CGameServer::~CGameServer()
001b0cc0 l     F .text	000000bb              CGameServer::~CGameServer()
001b0d80 l     F .text	0000001f              CGameServer::~CGameServer()
001b0da0 l     F .text	00000246              CGameServer::CGameServer()
001b0da0 l     F .text	00000246              CGameServer::CGameServer()
001b18f0 l     F .text	000001c1              CGameServer::Clear()
001b06e0 l     F .text	00000097              CGameServer::CopyPureServerWhitelistToStringTable()
001aed10 l     F .text	00000060              CGameServer::CopyTempEntities(CFrameSnapshot*)
001b0780 l     F .text	0000053f              CGameServer::CreateEngineStringTables()
001ad630 l     F .text	00000049              CGameServer::CreateNewClient(int)
001b7c50 l     F .text	00000214              CGameServer::DumpPrecacheStats(INetworkStringTable*)
001ad870 l     F .text	0000012f              CGameServer::FinishCertificateCheck(netadr_s&, int, char const*, int)
001aed00 l     F .text	00000005              CGameServer::FinishRestore()
001b7ae0 l     F .text	0000000e              CGameServer::GetDecalPrecacheTable() const
001b7a40 l     F .text	00000058              CGameServer::GetGeneric(int)
001b7910 l     F .text	0000000e              CGameServer::GetGenericPrecacheTable() const
001b75a0 l     F .text	000000c8              CGameServer::GetModel(int)
001b7360 l     F .text	0000000e              CGameServer::GetModelPrecacheTable() const
001ae770 l     F .text	0000000e              CGameServer::GetPureServerWhitelist() const
001b7870 l     F .text	00000054              CGameServer::GetSound(int)
001b76b0 l     F .text	0000000e              CGameServer::GetSoundPrecacheTable() const
001ad740 l     F .text	0000003d              CGameServer::Init(bool)
001addc0 l     F .text	0000005e              CGameServer::InitMaxClients()
001ae780 l     F .text	0000000f              CGameServer::IsHibernating() const
001ae750 l     F .text	00000013              CGameServer::IsInPureServerMode() const
001ad7f0 l     F .text	0000002b              CGameServer::IsPausable() const
001b7c10 l     F .text	0000003f              CGameServer::LookupDecalIndex(char const*)
001b7aa0 l     F .text	00000033              CGameServer::LookupGenericIndex(char const*)
001b7670 l     F .text	0000003f              CGameServer::LookupModelIndex(char const*)
001b78d0 l     F .text	00000033              CGameServer::LookupSoundIndex(char const*)
001b7af0 l     F .text	000000ef              CGameServer::PrecacheDecal(char const*, int)
001b7920 l     F .text	000000ef              CGameServer::PrecacheGeneric(char const*, int)
001b7370 l     F .text	000001ea              CGameServer::PrecacheModel(char const*, int, model_t*)
001b76c0 l     F .text	0000017f              CGameServer::PrecacheSound(char const*, int)
001af730 l     F .text	000001a6              CGameServer::ReloadWhitelist(char const*)
001acfd0 l     F .text	0000009c              CGameServer::RemoveClientFromGame(CBaseClient*)
001b0ff0 l     F .text	00000496              CGameServer::SendClientMessages(bool)
00357268 l     O .bss	0000000c              CGameServer::SendClientMessages(bool)::tm_fmt
001ae790 l     F .text	000003fa              CGameServer::SetHibernating(bool)
00357128 l     O .bss	00000008              CGameServer::SetHibernating(bool)::s_flPlatFloatTimeBeginUptime
001ad350 l     F .text	00000087              CGameServer::SetMaxClients(int)
001adb00 l     F .text	00000056              CGameServer::SetQueryPortFromSteamServer()
001ad680 l     F .text	000000b3              CGameServer::Shutdown()
001af8e0 l     F .text	000009c0              CGameServer::SpawnServer(char const*, char const*, char const*)
001aeb90 l     F .text	00000164              CGameServer::UpdateHibernationState()
001ad3e0 l     F .text	00000169              CGameServer::UpdateMasterServerPlayers()
001c7ca0 l     F .text	0000000e              CGame::SetActiveApp(bool)
001c7b40 l     F .text	00000005              CGame::SetGameWindow(void*)
001c7bc0 l     F .text	00000005              CGame::SetWindowSize(int, int)
001c7bb0 l     F .text	00000005              CGame::SetWindowXY(int, int)
001c7b70 l     F .text	0000000a              CGame::Shutdown()
0011a0d0 l     F .text	0000001f              CGameTrace::GetEdict() const
0011a0a0 l     F .text	00000022              CGameTrace::SetEdict(edict_t*)
0031b760 l     O .bss	00000024              changelevel
0031b7a0 l     O .bss	00000024              changelevel2
001de0b0 l     F .text	000000b8              CharacterSetBuild(characterset_t*, char const*)
001e4160 l     F .text	00000022              char const* GetTypedKeyValuesString<char>(KeyValues*, char const*)
00000000       F *UND*	00000000              CVProfile::OutputReport(int, char const*, int)
000dba70 l     F .text	00000106              CheckCheatCodes()
00126d20 l     F .text	00000005              CheckForFlushMemory(char const*, char const*)
0009ea90 l     F .text	00000005              CheckHeap()
000dd510 l     F .text	0000000a              CheckOtherInstancesRunning()
00147350 l     F .text	000000c1              CheckSmallVolumeDifferences(mnode_t*, Vector const&)
001285a0 l     F .text	00000060              CheckSpecialCheatVars()
00319d30 l     O .bss	00000004              CheckSpecialCheatVars()::mat_picmip
001284c0 l     F .text	000000d7              CheckVarRange_Generic(ConVar*, int, int)
0013bb50 l     F .text	00000024              CheckVarRange_r_lod()
0013bab0 l     F .text	00000024              CheckVarRange_r_rootlod()
0011b480 l     F .text	00000020              CHLTVClient::~CHLTVClient()
0011b480 l     F .text	00000020              CHLTVClient::~CHLTVClient()
0011b4c0 l     F .text	0000001f              CHLTVClient::~CHLTVClient()
0011c2c0 l     F .text	00000118              CHLTVClient::CHLTVClient(int, CBaseServer*)
0011c2c0 l     F .text	00000118              CHLTVClient::CHLTVClient(int, CBaseServer*)
0011b150 l     F .text	00000020              CHLTVClient::ConnectionClosing(char const*)
0011b180 l     F .text	00000020              CHLTVClient::ConnectionCrashed(char const*)
0011ba90 l     F .text	00000058              CHLTVClient::ExecuteStringCommand(char const*)
0011b5a0 l     F .text	000004db              CHLTVClient::ExecuteStringCommand(char const*) [clone .part.11]
0011b3b0 l     F .text	00000010              CHLTVClient::FileDenied(char const*, unsigned int)
0011b390 l     F .text	00000010              CHLTVClient::FileReceived(char const*, unsigned int)
0011b3d0 l     F .text	0000004d              CHLTVClient::FileRequested(char const*, unsigned int)
0011b1f0 l     F .text	00000005              CHLTVClient::FileSent(char const*, unsigned int)
0011b420 l     F .text	00000015              CHLTVClient::GetDeltaFrame(int)
0011b1d0 l     F .text	00000005              CHLTVClient::PacketEnd()
0011b1b0 l     F .text	0000000f              CHLTVClient::PacketStart(int, int)
0011b450 l     F .text	00000009              CHLTVClient::ProcessClientInfo(CLC_ClientInfo*)
0011b0f0 l     F .text	0000000a              CHLTVClient::ProcessFileCRCCheck(CLC_FileCRCCheck*)
0011c510 l     F .text	0000000a              CHLTVClient::ProcessFileMD5Check(CLC_FileMD5Check*)
0011b0b0 l     F .text	0000000a              CHLTVClient::ProcessListenEvents(CLC_ListenEvents*)
0011b090 l     F .text	0000000a              CHLTVClient::ProcessMove(CLC_Move*)
0011b0d0 l     F .text	0000000a              CHLTVClient::ProcessRespondCvarValue(CLC_RespondCvarValue*)
0011b110 l     F .text	0000000a              CHLTVClient::ProcessSaveReplay(CLC_SaveReplay*)
0011bb00 l     F .text	000001a7              CHLTVClient::ProcessSetConVar(NET_SetConVar*)
0011b130 l     F .text	0000000a              CHLTVClient::ProcessVoiceData(CLC_VoiceData*)
0011c3e0 l     F .text	0000011a              CHLTVClient::SendSignonData()
0011bcb0 l     F .text	00000606              CHLTVClient::SendSnapshot(CClientFrame*)
00318208 l     O .bss	0000000c              CHLTVClient::SendSnapshot(CClientFrame*)::tm_fmt
0011b280 l     F .text	0000007f              CHLTVClient::SetRate(int, bool)
0011b210 l     F .text	00000012              CHLTVClient::SetUpdateRate(int, bool)
0011b4e0 l     F .text	000000b8              CHLTVClient::ShouldSendMessages()
0011b300 l     F .text	00000072              CHLTVClient::SpawnPlayer()
0011d480 l     F .text	00000020              CHLTVClientState::~CHLTVClientState()
0011d480 l     F .text	00000020              CHLTVClientState::~CHLTVClientState()
0011d4c0 l     F .text	0000001f              CHLTVClientState::~CHLTVClientState()
0011dd60 l     F .text	00000047              CHLTVClientState::CHLTVClientState()
0011dd60 l     F .text	00000047              CHLTVClientState::CHLTVClientState()
0011d430 l     F .text	0000002c              CHLTVClientState::Clear()
0011d680 l     F .text	00000056              CHLTVClientState::ConnectionClosing(char const*)
0011d6e0 l     F .text	00000056              CHLTVClientState::ConnectionCrashed(char const*)
0011ddb0 l     F .text	000003e0              CHLTVClientState::CopyNewEntity(CEntityReadInfo&, int, int)
0011ebf0 l     F .text	0000000a              CHLTVClientState::GetCDKeyHash()
0011ec60 l     F .text	00000025              CHLTVClientState::GetClientName()
0011c520 l     F .text	00000016              CHLTVClientState::GetConnectionRetryNumber() const
0011d170 l     F .text	00000081              CHLTVClientState::HookClientStringTable(char const*)
0011d0f0 l     F .text	00000077              CHLTVClientState::InstallStringTableCallback(char const*)
0011d210 l     F .text	0000004e              CHLTVClientState::PacketEnd()
0011c870 l     F .text	00000028              CHLTVClientState::ProcessBSPDecal(SVC_BSPDecal*)
0011d550 l     F .text	000000c1              CHLTVClientState::ProcessClassInfo(SVC_ClassInfo*)
0011c8b0 l     F .text	00000028              CHLTVClientState::ProcessCrosshairAngle(SVC_CrosshairAngle*)
0011c710 l     F .text	00000098              CHLTVClientState::ProcessEntityMessage(SVC_EntityMessage*)
0011c8f0 l     F .text	00000028              CHLTVClientState::ProcessFixAngle(SVC_FixAngle*)
0011cdb0 l     F .text	00000113              CHLTVClientState::ProcessGameEventList(SVC_GameEventList*)
0011cee0 l     F .text	00000208              CHLTVClientState::ProcessGameEvent(SVC_GameEvent*)
0011c6d0 l     F .text	00000028              CHLTVClientState::ProcessMenu(SVC_Menu*)
0011cb20 l     F .text	0000027b              CHLTVClientState::ProcessPacketEntities(SVC_PacketEntities*)
0011c930 l     F .text	00000028              CHLTVClientState::ProcessPrefetch(SVC_Prefetch*)
0011d270 l     F .text	000001b8              CHLTVClientState::ProcessServerInfo(SVC_ServerInfo*)
0011d630 l     F .text	0000004c              CHLTVClientState::ProcessSetConVar(NET_SetConVar*)
0011d4f0 l     F .text	0000004c              CHLTVClientState::ProcessSetView(SVC_SetView*)
0011c970 l     F .text	00000098              CHLTVClientState::ProcessSounds(SVC_Sounds*)
0011cae0 l     F .text	00000028              CHLTVClientState::ProcessStringCmd(NET_StringCmd*)
0011c620 l     F .text	00000098              CHLTVClientState::ProcessTempEntities(SVC_TempEntities*)
0011c7c0 l     F .text	00000098              CHLTVClientState::ProcessUserMessage(SVC_UserMessage*)
0011ca20 l     F .text	0000006c              CHLTVClientState::ProcessVoiceData(SVC_VoiceData*)
0011caa0 l     F .text	00000028              CHLTVClientState::ProcessVoiceInit(SVC_VoiceInit*)
0011c540 l     F .text	000000c7              CHLTVClientState::ReadDeletions(CEntityReadInfo&)
0011d9e0 l     F .text	0000037f              CHLTVClientState::ReadDeltaEnt(CEntityReadInfo&)
0011e190 l     F .text	000001d0              CHLTVClientState::ReadEnterPVS(CEntityReadInfo&)
0011d740 l     F .text	000000f5              CHLTVClientState::ReadLeavePVS(CEntityReadInfo&)
0011d840 l     F .text	0000019b              CHLTVClientState::ReadPreserveEnt(CEntityReadInfo&)
0011e860 l     F .text	0000006d              CHLTVClientState::RunFrame()
0011e360 l     F .text	00000087              CHLTVClientState::SendClientInfo()
0011e3f0 l     F .text	0000015c              CHLTVClientState::SendPacket()
0011e8d0 l     F .text	00000319              CHLTVClientState::SetSignonState(int, int)
0011e550 l     F .text	00000305              CHLTVClientState::UpdateStats()
0011b230 l     F .text	0000003e              CHLTVClient::UpdateUserSettings()
0011ef80 l     F .text	00000050              CHLTVDemoRecorder::~CHLTVDemoRecorder()
0011ef80 l     F .text	00000050              CHLTVDemoRecorder::~CHLTVDemoRecorder()
0011efd0 l     F .text	0000001f              CHLTVDemoRecorder::~CHLTVDemoRecorder()
0011f0d0 l     F .text	0000005d              CHLTVDemoRecorder::CHLTVDemoRecorder()
0011f0d0 l     F .text	0000005d              CHLTVDemoRecorder::CHLTVDemoRecorder()
0011eca0 l     F .text	0000000b              CHLTVDemoRecorder::GetDemoFile()
0011ecb0 l     F .text	0000001c              CHLTVDemoRecorder::GetRecordingTick()
0011ec90 l     F .text	0000000f              CHLTVDemoRecorder::IsRecording()
0011fde0 l     F .text	00000005              CHLTVDemoRecorder::PauseRecording()
0011ed80 l     F .text	0000005d              CHLTVDemoRecorder::RecordCommand(char const*)
0011ede0 l     F .text	00000098              CHLTVDemoRecorder::RecordMessages(bf_read&, int)
0011f380 l     F .text	00000046              CHLTVDemoRecorder::RecordPacket()
0011eff0 l     F .text	000000d9              CHLTVDemoRecorder::RecordServerClasses(ServerClass*)
0011ecd0 l     F .text	000000a8              CHLTVDemoRecorder::RecordStringTables()
0011fe00 l     F .text	00000005              CHLTVDemoRecorder::RecordUserInput(int)
0011fe10 l     F .text	00000005              CHLTVDemoRecorder::ResetDemoInterpolation()
0011fdf0 l     F .text	00000005              CHLTVDemoRecorder::ResumeRecording()
0011fdd0 l     F .text	00000005              CHLTVDemoRecorder::SetSignonState(int)
0011f130 l     F .text	00000098              CHLTVDemoRecorder::StartAutoRecording()
0011fd50 l     F .text	00000078              CHLTVDemoRecorder::StartRecording(char const*, bool)
0011fb60 l     F .text	000001f0              CHLTVDemoRecorder::StartRecording(char const*, bool) [clone .part.46]
0011ee80 l     F .text	000000fe              CHLTVDemoRecorder::StopRecording()
0011f3d0 l     F .text	0000020b              CHLTVDemoRecorder::WriteFrame(CHLTVFrame*)
0011f1d0 l     F .text	000001a5              CHLTVDemoRecorder::WriteMessages(unsigned char, bf_write&)
0011f5e0 l     F .text	0000028b              CHLTVDemoRecorder::WriteServerInfo()
0011f870 l     F .text	000002ee              CHLTVDemoRecorder::WriteSignonData()
001219b0 l     F .text	00000059              CHLTVFrame::AllocBuffers()
00121a80 l     F .text	0000003b              CHLTVFrame::~CHLTVFrame()
00121a80 l     F .text	0000003b              CHLTVFrame::~CHLTVFrame()
00121ac0 l     F .text	0000001f              CHLTVFrame::~CHLTVFrame()
00121760 l     F .text	0000005e              CHLTVFrame::CHLTVFrame()
00121760 l     F .text	0000005e              CHLTVFrame::CHLTVFrame()
00121830 l     F .text	00000174              CHLTVFrame::CopyHLTVData(CHLTVFrame&)
00121a10 l     F .text	00000064              CHLTVFrame::FreeBuffers()
00121800 l     F .text	0000002f              CHLTVFrame::HasData()
00125ed0 l     F .text	00000007              CHLTVFrame::IsMemPoolAllocated()
001217c0 l     F .text	00000031              CHLTVFrame::Reset()
00123300 l     F .text	0000043e              CHLTVServer::AddNewFrame(CClientFrame*)
00318728 l     O .bss	0000000c              CHLTVServer::AddNewFrame(CClientFrame*)::tm_fmt
00121170 l     F .text	00000107              CHLTVServer::BroadcastEvent(IGameEvent*)
00122580 l     F .text	00000183              CHLTVServer::BroadcastEventLocal(IGameEvent*, bool)
001223c0 l     F .text	000001b9              CHLTVServer::BroadcastLocalChat(char const*, char const*)
001221c0 l     F .text	000001b5              CHLTVServer::BroadcastLocalTitle(CHLTVClient*)
00125f70 l     F .text	0000000a              CHLTVServer::CanSkipBackwards()
00124210 l     F .text	00000049              CHLTVServer::Changelevel()
00125b10 l     F .text	000001f5              CHLTVServer::~CHLTVServer()
00125b10 l     F .text	000001f5              CHLTVServer::~CHLTVServer()
00125d50 l     F .text	0000001f              CHLTVServer::~CHLTVServer()
00125570 l     F .text	00000422              CHLTVServer::CHLTVServer()
00125570 l     F .text	00000422              CHLTVServer::CHLTVServer()
00121af0 l     F .text	000000e8              CHLTVServer::Clear()
001207b0 l     F .text	00000085              CHLTVServer::ConnectClient(netadr_s&, int, int, int, int, char const*, char const*, char const*, int)
00124260 l     F .text	00000066              CHLTVServer::ConnectRelay(char const*)
001209c0 l     F .text	0000004c              CHLTVServer::CreateNewClient(int)
00121bf0 l     F .text	0000031b              CHLTVServer::DispatchToRelay(CHLTVClient*)
00123030 l     F .text	00000283              CHLTVServer::EntityPVSCheck(CClientFrame*)
00120970 l     F .text	0000003d              CHLTVServer::FillServerInfo(SVC_ServerInfo&)
00123a40 l     F .text	000000f5              CHLTVServer::FireGameEvent(IGameEvent*)
00121570 l     F .text	000000c1              CHLTVServer::FreeClientRecvTables()
00120090 l     F .text	0000000b              CHLTVServer::GetBaseServer()
00123b40 l     F .text	0000001c              CHLTVServer::GetBuffer(int)
001201f0 l     F .text	0000000a              CHLTVServer::GetChallengeType(netadr_s&)
00125d70 l     F .text	00000138              CHLTVServer::GetDeltaFrame(int)
001200d0 l     F .text	0000000d              CHLTVServer::GetDemoFile()
001200b0 l     F .text	0000000e              CHLTVServer::GetDirector()
001220f0 l     F .text	000000a3              CHLTVServer::GetGlobalStats(int&, int&, int&)
0011fe70 l     F .text	0000000e              CHLTVServer::GetHLTVSlot()
0011fee0 l     F .text	00000046              CHLTVServer::GetLocalStats(int&, int&, int&)
00121130 l     F .text	00000025              CHLTVServer::GetName() const
00120fe0 l     F .text	000000b5              CHLTVServer::GetNetStats(float&, float&)
0011fe90 l     F .text	0000003a              CHLTVServer::GetOnlineTime()
001210b0 l     F .text	00000062              CHLTVServer::GetPassword() const
00120180 l     F .text	0000000e              CHLTVServer::GetPlaybackStartTick()
001201a0 l     F .text	00000013              CHLTVServer::GetPlaybackTick()
00120130 l     F .text	0000000e              CHLTVServer::GetPlaybackTimeScale()
00120df0 l     F .text	0000003b              CHLTVServer::GetProtocolVersion()
00120c40 l     F .text	0000004c              CHLTVServer::GetRelayAddress()
00121fe0 l     F .text	000000f8              CHLTVServer::GetRelayStats(int&, int&, int&)
001201d0 l     F .text	0000000e              CHLTVServer::GetTotalTicks()
00120910 l     F .text	0000004a              CHLTVServer::Init(bool)
00121640 l     F .text	0000011f              CHLTVServer::InitClientRecvTables()
001227e0 l     F .text	0000016e              CHLTVServer::InstallStringTables()
00126030 l     F .text	00000005              CHLTVServer::InterpolateViewpoint()
0011ff70 l     F .text	00000007              CHLTVServer::IsDemoPlayback()
00125ef0 l     F .text	0000000a              CHLTVServer::IsHLTV() const
001260d0 l     F .text	00000007              CHLTVServer::IsLoading()
0011ff40 l     F .text	00000013              CHLTVServer::IsMasterProxy()
00125f10 l     F .text	0000000a              CHLTVServer::IsMultiplayer() const
00120110 l     F .text	0000000f              CHLTVServer::IsPlaybackPaused()
001200f0 l     F .text	0000000f              CHLTVServer::IsPlayingBack()
00125f30 l     F .text	00000007              CHLTVServer::IsPlayingTimeDemo()
00125f50 l     F .text	00000007              CHLTVServer::IsSkipping()
001221a0 l     F .text	00000016              CHLTVServer::IsTVRelay()
00122e20 l     F .text	0000013b              CHLTVServer::LinkInstanceBaselines()
001260b0 l     F .text	00000005              CHLTVServer::OnLastDemoInLoopPlayed()
00125f90 l     F .text	00000005              CHLTVServer::PausePlayback(float)
00125450 l     F .text	00000115              CHLTVServer::ProcessConnectionlessPacket(netpacket_s*)
001242f0 l     F .text	000003cf              CHLTVServer::ReadCompeleteDemoFile()
00126050 l     F .text	00000007              CHLTVServer::ReadPacket()
00124860 l     F .text	00000bdf              CHLTVServer::ReplyInfo(netadr_s const&)
00318800 l     O .bss	00000104              CHLTVServer::ReplyInfo(netadr_s const&)::gamedir
00126070 l     F .text	00000005              CHLTVServer::ResetDemoInterpolation()
00122db0 l     F .text	0000006e              CHLTVServer::RestoreTick(int)
00125ff0 l     F .text	00000005              CHLTVServer::ResumePlayback()
001242d0 l     F .text	00000014              CHLTVServer::ResyncDemoClock()
00123ef0 l     F .text	0000031b              CHLTVServer::RunFrame()
00318788 l     O .bss	0000000c              CHLTVServer::RunFrame()::tm_fmt
0011ffd0 l     F .text	000000b0              CHLTVServer::SendClientMessages(bool)
001239a0 l     F .text	0000009a              CHLTVServer::SendNetMsg(INetMessage&, bool)
00125fd0 l     F .text	00000005              CHLTVServer::SetEndTick(int)
0011fe30 l     F .text	00000026              CHLTVServer::SetMaxClients(int)
00120150 l     F .text	00000011              CHLTVServer::SetPlaybackTimeScale(float)
00126090 l     F .text	0000000a              CHLTVServer::ShouldLoopDemos()
0011ff90 l     F .text	0000000f              CHLTVServer::ShouldUpdateMasterServer()
00120850 l     F .text	000000a7              CHLTVServer::Shutdown()
001232c0 l     F .text	0000003d              CHLTVServer::SignonComplete()
00125fb0 l     F .text	00000005              CHLTVServer::SkipToTick(int, bool, bool)
00121be0 l     F .text	00000005              CHLTVServer::StartDemo(char const*)
00122950 l     F .text	0000045c              CHLTVServer::StartMaster(CGameClient*)
001246d0 l     F .text	00000189              CHLTVServer::StartPlayback(char const*, bool)
00121f10 l     F .text	000000cb              CHLTVServer::StartRelay()
00126010 l     F .text	00000005              CHLTVServer::StopPlayback()
00123740 l     F .text	00000260              CHLTVServer::UpdateStats()
00123b60 l     F .text	0000038b              CHLTVServer::UpdateTick()
00318794 l     O .bss	0000000c              CHLTVServer::UpdateTick()::tm_fmt
0011ffb0 l     F .text	00000005              CHLTVServer::UserInfoChanged(int)
00126350 l     F .text	0000005d              CHLTVTestSystem::~CHLTVTestSystem()
00126350 l     F .text	0000005d              CHLTVTestSystem::~CHLTVTestSystem()
00126210 l     F .text	0000002a              CHLTVTestSystem::CHLTVTestSystem()
00126210 l     F .text	0000002a              CHLTVTestSystem::CHLTVTestSystem()
00126280 l     F .text	00000046              CHLTVTestSystem::RetryTest(int)
00126240 l     F .text	00000034              CHLTVTestSystem::RunFrame()
001263b0 l     F .text	000000c2              CHLTVTestSystem::StartTest(int, char const*)
001262d0 l     F .text	00000076              CHLTVTestSystem::StopsTest()
00136400 l     F .text	00000005              CHostState::CHostState()
00136400 l     F .text	00000005              CHostState::CHostState()
00136a20 l     F .text	00000183              CHostState::FrameUpdate(float)
00136510 l     F .text	0000002d              CHostState::GameShutdown()
00136410 l     F .text	00000074              CHostState::Init()
00136bd0 l     F .text	00000019              CHostState::IsGameShuttingDown()
00136c00 l     F .text	000000b8              CHostState::OnClientConnected()
00136ce0 l     F .text	00000005              CHostState::OnClientDisconnected()
00136bf0 l     F .text	00000005              CHostState::RememberLocation()
001364e0 l     F .text	00000023              CHostState::RunGameInit()
001364d0 l     F .text	0000000e              CHostState::SetNextState(HOSTSTATES)
001364b0 l     F .text	00000016              CHostState::SetState(HOSTSTATES, bool)
00136610 l     F .text	000000da              CHostState::State_ChangeLevelMP()
001366f0 l     F .text	00000091              CHostState::State_ChangeLevelSP()
00136950 l     F .text	00000068              CHostState::State_GameShutdown()
001365e0 l     F .text	0000002a              CHostState::State_LoadGame()
00136540 l     F .text	0000009d              CHostState::State_NewGame()
001369f0 l     F .text	00000028              CHostState::State_Restart()
00136790 l     F .text	000001ba              CHostState::State_Run(float)
002c7260 l     O .data	00000001              CHostState::State_Run(float)::s_bFirstRunFrame
001369c0 l     F .text	00000022              CHostState::State_Shutdown()
00138770 l     F .text	0000002b              CIndexBuilder::~CIndexBuilder() [clone .isra.16]
000f3580 l     F .text	0000002b              CIndexBuilder::~CIndexBuilder() [clone .isra.19]
00214160 l     F .text	0000002b              CIndexBuilder::~CIndexBuilder() [clone .isra.19]
001cb600 l     F .text	00000127              CInitTracker::~CInitTracker()
001cb600 l     F .text	00000127              CInitTracker::~CInitTracker()
001cb470 l     F .text	0000003f              CInitTracker::CInitTracker()
001cb470 l     F .text	0000003f              CInitTracker::CInitTracker()
001cb730 l     F .text	0000006d              CInitTracker::Init(char const*, char const*, int)
001cb4b0 l     F .text	00000111              CInitTracker::Shutdown(char const*, int)
001f2360 l     F .text	00000012              cIntToHexDigit(int)
001a7330 l     F .text	00000601              CIPRateLimit::CheckIPInternal(netadr_s)
001a7940 l     F .text	0000006c              CIPRateLimit::CheckIP(netadr_s)
001a7300 l     F .text	00000022              CIPRateLimit::~CIPRateLimit()
001a7300 l     F .text	00000022              CIPRateLimit::~CIPRateLimit()
001a7280 l     F .text	0000007b              CIPRateLimit::CIPRateLimit(ConVar*, ConVar*, ConVar*)
001a7280 l     F .text	0000007b              CIPRateLimit::CIPRateLimit(ConVar*, ConVar*, ConVar*)
001a7260 l     F .text	00000012              CIPRateLimit::LessIP(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&)
00250400 l     O .rodata	00000006              CJob::Abort(bool)::__FUNCTION__
002509dd l     O .rodata	00000006              CJob::Abort(bool)::__FUNCTION__
0035769c l     O .bss	0000000c              CJob::Abort(bool)::tm_fmt
003576a8 l     O .bss	0000000c              CJob::Abort(bool)::tm_fmt
001e50a0 l     F .text	000000b8              CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)
0037d630 l     O .bss	00000008              CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)::r_developer
001e4fb0 l     F .text	00000047              CKeyValuesDumpContextAsDevMsg::KvWriteText(char const*)
002dbb00 l     O .bss	0002ece0              cl
0019d340 l     F .text	00000087              ClampClientRate(int)
00191610 l     F .text	00000039              ClampVector(Vector&, Vector const&, Vector const&)
0022c4d1 l     F .text	0000011e              classify_object_over_fdes
0008bee0 l     F .text	0000000e              CLC_BaselineAck::~CLC_BaselineAck()
0008bee0 l     F .text	0000000e              CLC_BaselineAck::~CLC_BaselineAck()
0008bf80 l     F .text	00000012              CLC_BaselineAck::~CLC_BaselineAck()
0008b280 l     F .text	0000000a              CLC_BaselineAck::GetGroup() const
0008b250 l     F .text	0000000a              CLC_BaselineAck::GetName() const
0008b240 l     F .text	0000000a              CLC_BaselineAck::GetType() const
0008b260 l     F .text	0000001a              CLC_BaselineAck::Process()
00083730 l     F .text	000002c8              CLC_BaselineAck::ReadFromBuffer(bf_read&)
002c84c4 l     O .bss	0000000c              CLC_BaselineAck::ReadFromBuffer(bf_read&)::tm_fmt
0007d670 l     F .text	00000044              CLC_BaselineAck::ToString() const
0007e8e0 l     F .text	00000116              CLC_BaselineAck::WriteToBuffer(bf_write&)
0008bef0 l     F .text	0000000e              CLC_ClientInfo::~CLC_ClientInfo()
0008bef0 l     F .text	0000000e              CLC_ClientInfo::~CLC_ClientInfo()
0008bf60 l     F .text	00000012              CLC_ClientInfo::~CLC_ClientInfo()
0008b170 l     F .text	0000000a              CLC_ClientInfo::GetName() const
0008b160 l     F .text	0000000a              CLC_ClientInfo::GetType() const
0008b180 l     F .text	0000001a              CLC_ClientInfo::Process()
000832a0 l     F .text	0000048a              CLC_ClientInfo::ReadFromBuffer(bf_read&)
002c84b8 l     O .bss	0000000c              CLC_ClientInfo::ReadFromBuffer(bf_read&)::tm_fmt
0007d6c0 l     F .text	00000044              CLC_ClientInfo::ToString() const
00080db0 l     F .text	000002ea              CLC_ClientInfo::WriteToBuffer(bf_write&)
0008c420 l     F .text	00000012              CLC_CmdKeyValues::~CLC_CmdKeyValues()
0008c420 l     F .text	00000012              CLC_CmdKeyValues::~CLC_CmdKeyValues()
0008c440 l     F .text	00000025              CLC_CmdKeyValues::~CLC_CmdKeyValues()
000898d0 l     F .text	0000001f              CLC_CmdKeyValues::CLC_CmdKeyValues(KeyValues*)
000898d0 l     F .text	0000001f              CLC_CmdKeyValues::CLC_CmdKeyValues(KeyValues*)
0008b3f0 l     F .text	0000000a              CLC_CmdKeyValues::GetName() const
0008b3e0 l     F .text	0000000a              CLC_CmdKeyValues::GetType() const
0008b400 l     F .text	0000001a              CLC_CmdKeyValues::Process()
00089750 l     F .text	00000009              CLC_CmdKeyValues::ReadFromBuffer(bf_read&)
0007f090 l     F .text	00000009              CLC_CmdKeyValues::ToString() const
000898c0 l     F .text	00000009              CLC_CmdKeyValues::WriteToBuffer(bf_write&)
0008beb0 l     F .text	0000000e              CLC_FileCRCCheck::~CLC_FileCRCCheck()
0008beb0 l     F .text	0000000e              CLC_FileCRCCheck::~CLC_FileCRCCheck()
0008bfe0 l     F .text	00000012              CLC_FileCRCCheck::~CLC_FileCRCCheck()
0008b370 l     F .text	0000000a              CLC_FileCRCCheck::GetName() const
0008b360 l     F .text	0000000a              CLC_FileCRCCheck::GetType() const
0008b380 l     F .text	0000001a              CLC_FileCRCCheck::Process()
000899b0 l     F .text	000008ee              CLC_FileCRCCheck::ReadFromBuffer(bf_read&)
002c84e8 l     O .bss	0000000c              CLC_FileCRCCheck::ReadFromBuffer(bf_read&)::tm_fmt
0007d5b0 l     F .text	0000004e              CLC_FileCRCCheck::ToString() const
00081440 l     F .text	0000070c              CLC_FileCRCCheck::WriteToBuffer(bf_write&)
0008bea0 l     F .text	0000000e              CLC_FileMD5Check::~CLC_FileMD5Check()
0008bea0 l     F .text	0000000e              CLC_FileMD5Check::~CLC_FileMD5Check()
0008c000 l     F .text	00000012              CLC_FileMD5Check::~CLC_FileMD5Check()
0008b3b0 l     F .text	0000000a              CLC_FileMD5Check::GetName() const
0008b3a0 l     F .text	0000000a              CLC_FileMD5Check::GetType() const
0008b3c0 l     F .text	0000001a              CLC_FileMD5Check::Process()
00083c90 l     F .text	00000449              CLC_FileMD5Check::ReadFromBuffer(bf_read&)
002c84f4 l     O .bss	0000000c              CLC_FileMD5Check::ReadFromBuffer(bf_read&)::tm_fmt
0007d560 l     F .text	0000004e              CLC_FileMD5Check::ToString() const
000810a0 l     F .text	0000039c              CLC_FileMD5Check::WriteToBuffer(bf_write&)
002d5780 l     O .bss	00000048              cl_clanid
000cc740 l     F .text	00000005              CL_ClanIdChanged(IConVar*, char const*, float)
0008bed0 l     F .text	0000000e              CLC_ListenEvents::~CLC_ListenEvents()
0008bed0 l     F .text	0000000e              CLC_ListenEvents::~CLC_ListenEvents()
0008bfa0 l     F .text	00000012              CLC_ListenEvents::~CLC_ListenEvents()
0008b2d0 l     F .text	0000000a              CLC_ListenEvents::GetGroup() const
0008b2a0 l     F .text	0000000a              CLC_ListenEvents::GetName() const
0008b290 l     F .text	0000000a              CLC_ListenEvents::GetType() const
0008b2b0 l     F .text	0000001a              CLC_ListenEvents::Process()
000829b0 l     F .text	00000281              CLC_ListenEvents::ReadFromBuffer(bf_read&)
002c84d0 l     O .bss	0000000c              CLC_ListenEvents::ReadFromBuffer(bf_read&)::tm_fmt
0007d8f0 l     F .text	0000006a              CLC_ListenEvents::ToString() const
0007c4c0 l     F .text	0000015c              CLC_ListenEvents::WriteToBuffer(bf_write&)
002daa60 l     O .bss	00000048              cl_clock_correction
002da880 l     O .bss	00000048              cl_clock_correction_adjustment_max_amount
002da7c0 l     O .bss	00000048              cl_clock_correction_adjustment_max_offset
002da820 l     O .bss	00000048              cl_clock_correction_adjustment_min_offset
002da8e0 l     O .bss	00000048              cl_clock_correction_force_server_tick
002daa00 l     O .bss	00000048              cl_clockdrift_max_ms
002da9a0 l     O .bss	00000048              cl_clockdrift_max_ms_threadmode
002da940 l     O .bss	00000048              cl_clock_showdebuginfo
0008bf00 l     F .text	0000000e              CLC_Move::~CLC_Move()
0008bf00 l     F .text	0000000e              CLC_Move::~CLC_Move()
0008bf40 l     F .text	00000012              CLC_Move::~CLC_Move()
0008b1e0 l     F .text	0000000a              CLC_Move::GetGroup() const
0008b1b0 l     F .text	0000000a              CLC_Move::GetName() const
0008b1a0 l     F .text	0000000a              CLC_Move::GetType() const
0008b1c0 l     F .text	0000001a              CLC_Move::Process()
00082f00 l     F .text	00000392              CLC_Move::ReadFromBuffer(bf_read&)
002c84ac l     O .bss	0000000c              CLC_Move::ReadFromBuffer(bf_read&)::tm_fmt
0007d710 l     F .text	00000067              CLC_Move::ToString() const
0007f250 l     F .text	000001d6              CLC_Move::WriteToBuffer(bf_write&)
002d5960 l     O .bss	00000048              cl_connectmethod
0008bec0 l     F .text	0000000e              CLC_RespondCvarValue::~CLC_RespondCvarValue()
0008bec0 l     F .text	0000000e              CLC_RespondCvarValue::~CLC_RespondCvarValue()
0008bfc0 l     F .text	00000012              CLC_RespondCvarValue::~CLC_RespondCvarValue()
0008b330 l     F .text	0000000a              CLC_RespondCvarValue::GetName() const
0008b320 l     F .text	0000000a              CLC_RespondCvarValue::GetType() const
0008b340 l     F .text	0000001a              CLC_RespondCvarValue::Process()
00083a00 l     F .text	0000028d              CLC_RespondCvarValue::ReadFromBuffer(bf_read&)
002c84dc l     O .bss	0000000c              CLC_RespondCvarValue::ReadFromBuffer(bf_read&)::tm_fmt
0007d600 l     F .text	00000061              CLC_RespondCvarValue::ToString() const
0007dc40 l     F .text	000000f9              CLC_RespondCvarValue::WriteToBuffer(bf_write&)
0008be90 l     F .text	0000000e              CLC_SaveReplay::~CLC_SaveReplay()
0008be90 l     F .text	0000000e              CLC_SaveReplay::~CLC_SaveReplay()
0008c020 l     F .text	00000012              CLC_SaveReplay::~CLC_SaveReplay()
0008b2f0 l     F .text	0000000a              CLC_SaveReplay::GetName() const
0008b2e0 l     F .text	0000000a              CLC_SaveReplay::GetType() const
0008b300 l     F .text	0000001a              CLC_SaveReplay::Process()
0007f750 l     F .text	000000b7              CLC_SaveReplay::ReadFromBuffer(bf_read&)
0007d4f0 l     F .text	0000006f              CLC_SaveReplay::ToString() const
0007f810 l     F .text	0000016c              CLC_SaveReplay::WriteToBuffer(bf_write&)
0008bf10 l     F .text	0000000e              CLC_VoiceData::~CLC_VoiceData()
0008bf10 l     F .text	0000000e              CLC_VoiceData::~CLC_VoiceData()
0008bf20 l     F .text	00000012              CLC_VoiceData::~CLC_VoiceData()
0008b230 l     F .text	0000000a              CLC_VoiceData::GetGroup() const
0008b200 l     F .text	0000000a              CLC_VoiceData::GetName() const
0008b1f0 l     F .text	0000000a              CLC_VoiceData::GetType() const
0008b210 l     F .text	0000001a              CLC_VoiceData::Process()
00082c40 l     F .text	000002bd              CLC_VoiceData::ReadFromBuffer(bf_read&)
002c84a0 l     O .bss	0000000c              CLC_VoiceData::ReadFromBuffer(bf_read&)::tm_fmt
0007d780 l     F .text	0000004a              CLC_VoiceData::ToString() const
0007f430 l     F .text	000000c9              CLC_VoiceData::WriteToBuffer(bf_write&)
000f3430 l     F .text	00000014              CL_DevShots_NextMap()
001286e0 l     F .text	000000aa              CL_DiscardOldAddAngleEntries(float)
00207760 l     F .text	00000025              ClearBounds(Vector&, Vector&)
000db9f0 l     F .text	0000000f              ClearCheatCommands()
001c4ed0 l     F .text	00000005              ClearIOStates()
00144660 l     F .text	0000000c              ClearMaterialConfigLightingChanged()
000a4f20 l     F .text	00000043              ClearNeighborData(CCoreDispInfo*)
001398b0 l     F .text	00000055              ClearSaveModelDebugOverlays()
00128610 l     F .text	000000d0              CL_FindInterpolatedAddAngle(float, float&, AddAngle**, AddAngle**)
0012f490 l     F .text	000000e6              CL_HL2Demo_MapCheck(char const*)
000dd9a0 l     F .text	00000005              ClientDLL_FrameStageNotify(ClientFrameStage_t)
000dd9b0 l     F .text	0000000a              ClientDLL_GetAllClasses()
003237c0 l     O .bss	00000048              clientport
002d57e0 l     O .bss	00000048              cl_interpolate
0020d4b0 l     F .text	00000302              ClipPolyToPlane_Precise(double*, int, double*, double const*, double, double)
0020d0c0 l     F .text	000003e9              ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
000dd8b0 l     F .text	00000007              CL_IsHL2Demo()
000dd8c0 l     F .text	00000007              CL_IsPortalDemo()
002d58a0 l     O .bss	00000048              cl_name
000cd390 l     F .text	000000e2              CL_NameCvarChanged(IConVar*, char const*, float)
002d5948 l     O .bss	00000001              CL_NameCvarChanged(IConVar*, char const*, float)::bPreventRent
00137e10 l     F .text	0000004e              CLocalNetworkBackdoor::AddToPendingDormantEntityList(unsigned short)
00137c00 l     F .text	000000a9              CLocalNetworkBackdoor::ClearState()
00137630 l     F .text	0000023a              CLocalNetworkBackdoor::EndEntityStateUpdate()
00137870 l     F .text	000000a6              CLocalNetworkBackdoor::EntityDormant(int, int)
00137920 l     F .text	000002d8              CLocalNetworkBackdoor::EntState(int, int, int, SendTable const*, void const*, bool, bool)
00137d70 l     F .text	00000095              CLocalNetworkBackdoor::ProcessDormantEntities()
00137cb0 l     F .text	000000a6              CLocalNetworkBackdoor::StartBackdoorMode()
00137580 l     F .text	000000af              CLocalNetworkBackdoor::StartEntityStateUpdate()
00137d60 l     F .text	00000009              CLocalNetworkBackdoor::StopBackdoorMode()
001acba0 l     F .text	0000008b              CLog::AddLogAddress(netadr_s)
001acaf0 l     F .text	00000084              CLog::~CLog()
001acaf0 l     F .text	00000084              CLog::~CLog()
001acb80 l     F .text	0000001f              CLog::~CLog()
001aca60 l     F .text	00000090              CLog::CLog()
001aca60 l     F .text	00000090              CLog::CLog()
001abf60 l     F .text	000000c5              CLog::Close()
001abc50 l     F .text	00000041              CLog::DelAllLogAddress()
001ab920 l     F .text	00000099              CLog::DelLogAddress(netadr_s)
001ac070 l     F .text	00000433              CLog::FireGameEvent(IGameEvent*)
001abcc0 l     F .text	00000028              CLog::Flush()
001ab7f0 l     F .text	000000c8              CLog::Init()
001abcb0 l     F .text	0000000c              CLog::IsActive()
001abb90 l     F .text	00000099              CLog::ListLogAddress()
001ac590 l     F .text	0000027e              CLog::Open()
001abcf0 l     F .text	00000219              CLog::Print(char const*)
0032bde0 l     O .bss	0000044c              CLog::Print(char const*)::string
001abf10 l     F .text	00000048              CLog::Printf(char const*, ...)
0032b9e0 l     O .bss	00000400              CLog::Printf(char const*, ...)::string
001ac4b0 l     F .text	000000d8              CLog::PrintServerVars()
001ab780 l     F .text	0000006b              CLog::Reset()
001ab8d0 l     F .text	0000004d              CLog::RunFrame()
001ab8c0 l     F .text	0000000e              CLog::SetLoggingState(bool)
001ac030 l     F .text	00000031              CLog::Shutdown()
001abc40 l     F .text	00000010              CLog::UsingLogAddress()
00319740 l     O .bss	00000048              closecaption
000bb370 l     F .text	0000007f              CloseZipU(HZIP__*)
000c0440 l     F .text	000000ab              CloseZipZ(HZIP__*)
0012f580 l     F .text	000000e6              CL_PortalDemo_MapCheck(char const*)
0015d920 l     F .text	00000019              CL_PrintStringTables()
002d5900 l     O .bss	00000048              cl_resend
002d5720 l     O .bss	00000048              cl_show_connectionless_packet_warnings
001eb5f0 l     F .text	00000025              CLZMA::GetActualSize(unsigned char*)
001eb5d0 l     F .text	00000017              CLZMA::IsCompressed(unsigned char*)
001eb780 l     F .text	00000009              CLZMAStream::~CLZMAStream()
001eb780 l     F .text	00000009              CLZMAStream::~CLZMAStream()
001eb730 l     F .text	0000001b              CLZMAStream::CLZMAStream()
001eb730 l     F .text	0000001b              CLZMAStream::CLZMAStream()
001eb790 l     F .text	00000096              CLZMAStream::CreateDecoderState(unsigned char const*)
001eb750 l     F .text	0000002c              CLZMAStream::FreeDecoderState()
001eb830 l     F .text	00000028              CLZMAStream::GetExpectedBytesRemaining(unsigned int&)
001eb860 l     F .text	00000028              CLZMAStream::InitZIPHeader(unsigned int, unsigned int)
001eb9d0 l     F .text	0000014c              CLZMAStream::Read(unsigned char*, unsigned int, unsigned char*, unsigned int, unsigned int&, unsigned int&)
001eb890 l     F .text	00000132              CLZMAStream::TryParseHeader(unsigned char*, unsigned int, unsigned int&)
001eb620 l     F .text	0000010b              CLZMA::Uncompress(unsigned char*, unsigned char*)
001ebb70 l     F .text	0000007f              CLZSS::BuildHash(unsigned char const*)
001ebbf0 l     F .text	0000046e              CLZSS::CompressNoAlloc(unsigned char const*, int, unsigned char*, unsigned int*)
0037d660 l     O .bss	0000000c              CLZSS::CompressNoAlloc(unsigned char const*, int, unsigned char*, unsigned int*)::tm_fmt
001ec060 l     F .text	00000056              CLZSS::Compress(unsigned char const*, int, unsigned int*)
001ebb40 l     F .text	00000025              CLZSS::GetActualSize(unsigned char const*)
001ebb20 l     F .text	00000017              CLZSS::IsCompressed(unsigned char const*)
001ec0c0 l     F .text	0000017b              CLZSS::SafeUncompress(unsigned char const*, unsigned char*, unsigned int)
001ec240 l     F .text	0000014b              CLZSS::Uncompress(unsigned char const*, unsigned char*)
0013c6c0 l     F .text	00000014              CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::CacheUnlock(memhandle_t__*)
0013c8d0 l     F .text	000001ef              CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::HandleCacheNotification(DataCacheNotification_t const&)
001387a0 l     F .text	00000055              CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::Shutdown() [clone .isra.52]
00132560 l     F .text	000000a4              CMapListItem::CheckFSHeaderVersion(char const*)
001324b0 l     F .text	00000015              CMapListItem::CMapListItem()
001324b0 l     F .text	00000015              CMapListItem::CMapListItem()
00132500 l     F .text	0000000b              CMapListItem::GetFileTimestamp() const
00132530 l     F .text	00000028              CMapListItem::GetFSTimeStamp(char const*)
001324e0 l     F .text	0000000a              CMapListItem::GetValid() const
00132510 l     F .text	00000011              CMapListItem::IsSameTime(long) const
001324f0 l     F .text	0000000e              CMapListItem::SetFileTimestamp(long)
001324d0 l     F .text	0000000d              CMapListItem::SetValid(int)
00132860 l     F .text	000001b8              CMapListManager::BuildList()
00132800 l     F .text	0000001c              CMapListManager::ClearList()
00132820 l     F .text	0000003a              CMapListManager::~CMapListManager()
00132820 l     F .text	0000003a              CMapListManager::~CMapListManager()
00132620 l     F .text	00000051              CMapListManager::CMapListManager()
00132620 l     F .text	00000051              CMapListManager::CMapListManager()
00132690 l     F .text	0000000b              CMapListManager::GetMapCount() const
00132750 l     F .text	000000a6              CMapListManager::GetMapName(int) const
001326a0 l     F .text	000000a3              CMapListManager::IsMapValid(int) const
00132c50 l     F .text	00000046              CMapListManager::RefreshList()
00132a20 l     F .text	00000226              CMapListManager::RefreshList() [clone .part.19]
00132680 l     F .text	00000005              CMapListManager::Think()
001490f0 l     F .text	0000003b              CMapLoadHelper::~CMapLoadHelper()
001490f0 l     F .text	0000003b              CMapLoadHelper::~CMapLoadHelper()
00148e30 l     F .text	000002b8              CMapLoadHelper::CMapLoadHelper(int)
00148e30 l     F .text	000002b8              CMapLoadHelper::CMapLoadHelper(int)
00148cf0 l     F .text	00000005              CMapLoadHelper::FreeLightingLump()
00149150 l     F .text	0000001f              CMapLoadHelper::GetLoadName()
00149130 l     F .text	0000000a              CMapLoadHelper::GetMap()
00149140 l     F .text	0000000a              CMapLoadHelper::GetMapName()
001487b0 l     F .text	0000000a              CMapLoadHelper::GetRefCount()
00148a00 l     F .text	00000165              CMapLoadHelper::InitFromMemory(model_t*, void const*, int)
001487c0 l     F .text	00000233              CMapLoadHelper::Init(model_t*, char const*)
00148dd0 l     F .text	0000005a              CMapLoadHelper::LoadLumpData(int, int, void*)
00148d70 l     F .text	0000005d              CMapLoadHelper::LoadLumpElement(int, int, void*)
00149170 l     F .text	0000000b              CMapLoadHelper::LumpBase()
00149190 l     F .text	0000000b              CMapLoadHelper::LumpOffset()
00148d40 l     F .text	0000002b              CMapLoadHelper::LumpOffset(int)
00149180 l     F .text	0000000a              CMapLoadHelper::LumpSize()
00148d00 l     F .text	00000035              CMapLoadHelper::LumpSize(int)
001491a0 l     F .text	0000000b              CMapLoadHelper::LumpVersion() const
00148b70 l     F .text	000000e8              CMapLoadHelper::Shutdown()
0013fa00 l     F .text	000001ee              CMapReslistGenerator::BuildEngineLogFromReslist()
0013f0a0 l     F .text	000000be              CMapReslistGenerator::BuildMapList()
00141280 l     F .text	00000182              CMapReslistGenerator::~CMapReslistGenerator()
00141280 l     F .text	00000182              CMapReslistGenerator::~CMapReslistGenerator()
0013e850 l     F .text	000002aa              CMapReslistGenerator::CMapReslistGenerator()
0013e850 l     F .text	000002aa              CMapReslistGenerator::CMapReslistGenerator()
0013e130 l     F .text	00000033              CMapReslistGenerator::DoQuit()
00140010 l     F .text	000003ab              CMapReslistGenerator::EnableDeletionsTracking()
0013fbf0 l     F .text	000001d3              CMapReslistGenerator::EnableReslistGeneration(bool)
0013f630 l     F .text	00000016              CMapReslistGenerator::FileSystemLoggingFunc(char const*, char const*)
0013e120 l     F .text	00000010              CMapReslistGenerator::GetResListDirectory() const
0013e060 l     F .text	00000017              CMapReslistGenerator::LogPrefix()
0013f180 l     F .text	000001be              CMapReslistGenerator::LogToEngineReslist(char const*)
0013e080 l     F .text	00000005              CMapReslistGenerator::OnLevelLoadEnd()
0013f870 l     F .text	00000187              CMapReslistGenerator::OnLevelLoadStart(char const*)
0013f780 l     F .text	000000ee              CMapReslistGenerator::OnModelPrecached(char const*)
0013e090 l     F .text	0000003f              CMapReslistGenerator::OnPlayerSpawn()
0013f6b0 l     F .text	00000022              CMapReslistGenerator::OnResourcePrecached(char const*)
0013f650 l     F .text	00000051              CMapReslistGenerator::OnResourcePrecached(char const*) [clone .part.47]
0013f340 l     F .text	000002e5              CMapReslistGenerator::OnResourcePrecachedFullPath(char const*)
0013f6e0 l     F .text	00000094              CMapReslistGenerator::OnSoundPrecached(char const*)
0013e3e0 l     F .text	0000017d              CMapReslistGenerator::RunFrame()
0013dfe0 l     F .text	0000000e              CMapReslistGenerator::SetAutoQuit(bool)
0013e030 l     F .text	0000002d              CMapReslistGenerator::SetPrefix(char const*)
0013e0d0 l     F .text	0000004c              CMapReslistGenerator::ShouldRebuildCaches()
0013e7c0 l     F .text	00000062              CMapReslistGenerator::Shutdown()
0013e560 l     F .text	0000025c              CMapReslistGenerator::SpewTrackedDeletionsLog()
0013dff0 l     F .text	00000040              CMapReslistGenerator::StartReslistGeneration()
0013fdd0 l     F .text	00000217              CMapReslistGenerator::TrackDeletions(char const*)
0013fff0 l     F .text	00000016              CMapReslistGenerator::TrackDeletionsLoggingFunc(char const*, char const*)
0013e170 l     F .text	00000264              CMapReslistGenerator::WriteMapLog()
000e29b0 l     F .text	00000069              CM_AreasConnected(int, int)
00144410 l     F .text	00000007              CMaterialProxyFactory::CreateProxy(char const*)
00144420 l     F .text	0000001a              CMaterialProxyFactory::DeleteProxy(IMaterialProxy*)
00144440 l     F .text	00000081              CMaterialProxyFactory::LookupProxy(char const*, void* (*)(char const*, int*))
00213700 l     F .text	0000002e              CMaterialReference::~CMaterialReference()
00213700 l     F .text	0000002e              CMaterialReference::~CMaterialReference()
00213880 l     F .text	0000002b              CMaterialReference::CMaterialReference(char const*, char const*, bool)
00213880 l     F .text	0000002b              CMaterialReference::CMaterialReference(char const*, char const*, bool)
00213820 l     F .text	0000005b              CMaterialReference::Init(char const*, char const*, bool)
002137e0 l     F .text	0000003f              CMaterialReference::Init(char const*, char const*, KeyValues*)
00213730 l     F .text	00000050              CMaterialReference::Init(char const*, KeyValues*)
002138b0 l     F .text	00000062              CMaterialReference::Init(CMaterialReference&)
00213780 l     F .text	0000005a              CMaterialReference::Init(IMaterial*)
00213920 l     F .text	0000002e              CMaterialReference::Shutdown()
000f6910 l     F .text	00000062              CMatRenderContextPtr::~CMatRenderContextPtr()
000f6910 l     F .text	00000062              CMatRenderContextPtr::~CMatRenderContextPtr()
000e0db0 l     F .text	000001b1              CM_BoxLeafnums(leafnums_t&, Vector const&, Vector const&, int)
000e1080 l     F .text	000000c4              CM_BoxLeafnums(Vector const&, Vector const&, int*, int, int*)
000e4750 l     F .text	00000534              CM_BoxTraceAgainstLeafList(Ray_t const&, int*, int, int, bool, CGameTrace&)
000e3df0 l     F .text	000005bd              CM_BoxTrace(Ray_t const&, int, int, bool, CGameTrace&)
0030d610 l     O .bss	0000000c              CM_BoxTrace(Ray_t const&, int, int, bool, CGameTrace&)::tm_fmt
000e2d00 l     F .text	000000fd              CM_BoxVisible(Vector const&, Vector const&, unsigned char const*, int)
000e07b0 l     F .text	0000008c              CM_BrushContents_r(CCollisionBSPData*, int)
000e2150 l     F .text	0000007d              CM_ClearTrace(CGameTrace*)
000e2670 l     F .text	0000002b              CM_ClusterPVS(int)
000e2660 l     F .text	0000000a              CM_ClusterPVSSize()
000e9960 l     F .text	0000014f              CM_CreateDispPhysCollide(dphysdisp_t*, int)
000e0160 l     F .text	0000004c              Cmd_AddClientCmdCanExecuteVar(char const*)
0030cf80 l     O .bss	00000004              cmd_alias
000de2f0 l     F .text	00000005              cmd(CCommand const&)
002c6cac l     O .data	00000004              cmd_clientslot
0030d120 l     O .bss	00000024              cmd_command
000defe0 l     F .text	0000000e              Cmd_Dispatch(ConCommandBase const*, CCommand const&)
000e2280 l     F .text	00000323              CM_DecompressVis(CCollisionBSPData*, int, int, unsigned char*)
000e9550 l     F .text	000000a4              CM_DestroyDispPhysCollide()
000dfa40 l     F .text	00000376              Cmd_Exec_f(CCommand const&)
000df000 l     F .text	000004fa              Cmd_ExecuteCommand(CCommand const&, cmd_source_t, int)
0031aae0 l     O .bss	00000024              cmd_exit
000deff0 l     F .text	00000005              Cmd_ForwardToServer(CCommand const&, bool)
000def70 l     F .text	0000001c              Cmd_Init()
000e0910 l     F .text	0000001d              CM_DiscardEntityString()
000e9600 l     F .text	0000035c              CM_DispTreeLeafnum(CCollisionBSPData*)
000de6e0 l     F .text	0000000c              Cmd_IsRptActive()
0014d610 l     F .text	00000199              CMDLCacheNotify::ComputeModelFlags(model_t*, unsigned short)
0014d7b0 l     F .text	00000120              CMDLCacheNotify::OnDataLoaded(MDLCacheDataType_t, unsigned short)
00147420 l     F .text	00000005              CMDLCacheNotify::OnDataUnloaded(MDLCacheDataType_t, unsigned short)
0014ced0 l     F .text	000000be              CMDLCacheNotify::SetBoundsFromStudioHdr(model_t*, unsigned short)
00198570 l     F .text	000000fe              Cmd_PropCrosshair_f()
000de6d0 l     F .text	0000000d              Cmd_SetRptActive(bool)
000def90 l     F .text	00000044              Cmd_Shutdown()
0030a8c0 l     O .bss	00000004              cmd_source
0030d1c0 l     O .bss	00000200              Cmd_TranslateFileAssociation(char const*)::sz
001b1ff0 l     F .text	00000015              CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b1ff0 l     F .text	00000015              CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b20e0 l     F .text	00000019              CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b2040 l     F .text	00000020              CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
001b4db0 l     F .text	00000015              CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b4db0 l     F .text	00000015              CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b4e00 l     F .text	00000019              CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b4dd0 l     F .text	00000020              CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
0013c720 l     F .text	00000015              CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
0013c720 l     F .text	00000015              CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
0013c830 l     F .text	00000019              CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
0013c740 l     F .text	0000003f              CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
001ec860 l     F .text	0000001a              CMemoryStack::Access(void**, unsigned int*)
001ec7e0 l     F .text	0000001a              CMemoryStack::~CMemoryStack()
001ec7e0 l     F .text	0000001a              CMemoryStack::~CMemoryStack()
001ec730 l     F .text	0000001e              CMemoryStack::CMemoryStack()
001ec730 l     F .text	0000001e              CMemoryStack::CMemoryStack()
001ec810 l     F .text	00000007              CMemoryStack::CommitTo(unsigned char*)
001ec840 l     F .text	0000001a              CMemoryStack::FreeAll(bool)
001ec820 l     F .text	00000016              CMemoryStack::FreeToAllocPoint(unsigned int, bool)
001ec800 l     F .text	0000000b              CMemoryStack::GetSize()
001ec750 l     F .text	0000004d              CMemoryStack::Init(unsigned int, unsigned int, unsigned int, unsigned int)
001ec880 l     F .text	00000038              CMemoryStack::PrintContents()
001ec7a0 l     F .text	00000031              CMemoryStack::Term()
000e0890 l     F .text	00000077              CM_EntityString()
000f6980 l     F .text	0000008d              CMeshBuilder::~CMeshBuilder()
000f6980 l     F .text	0000008d              CMeshBuilder::~CMeshBuilder()
000e09b0 l     F .text	00000014              CM_FreeMap()
000e2b80 l     F .text	000000e5              CM_GetAreaPortalPlane(Vector const&, int, VPlane*)
001d9530 l     F .text	000000e3              CM_GetCollideableTriggerTestBox(ICollideable*, Vector*, Vector*, bool) [clone .constprop.32]
000e0690 l     F .text	00000024              CM_GetVCollide(int)
000e2c70 l     F .text	00000087              CM_HeadnodeVisible(int, unsigned char const*, int)
000e09d0 l     F .text	0000002f              CM_InitPortalOpenState(CCollisionBSPData*)
000e06c0 l     F .text	000000cc              CM_InlineModel(char const*)
000e0840 l     F .text	00000037              CM_InlineModelContents(int)
000e0790 l     F .text	0000001f              CM_InlineModelNumber(int)
000e0990 l     F .text	0000001d              CM_LeafArea(int)
000e0950 l     F .text	00000015              CM_LeafCluster(int)
000e0930 l     F .text	00000013              CM_LeafContents(int)
000e0970 l     F .text	0000001a              CM_LeafFlags(int)
000e27e0 l     F .text	000000f3              CM_LoadMap(char const*, bool, unsigned int*)
000e21d0 l     F .text	000000a2              CM_NullVis(CCollisionBSPData*, unsigned char*)
000e0880 l     F .text	0000000a              CM_NumClusters()
001c4f30 l     F .text	0000003d              CModAppSystemGroup::AddLegacySystems()
001c5720 l     F .text	00000232              CModAppSystemGroup::Create()
001c4830 l     F .text	00000009              CModAppSystemGroup::Destroy()
001c48e0 l     F .text	000000a9              CModAppSystemGroup::Main()
001c4f70 l     F .text	000000b6              CModAppSystemGroup::ModuleAlreadyInList(CUtlVector<AppSystemInfo_t, CUtlMemory<AppSystemInfo_t, int> >&, char const*, char const*)
001c4550 l     F .text	00000005              CModAppSystemGroup::PostShutdown()
001c4540 l     F .text	0000000a              CModAppSystemGroup::PreInit()
00146920 l     F .text	0000004a              CModelInfo::AddRefDynamicModel(int)
00146cd0 l     F .text	000000a2              CModelInfo::~CModelInfo()
00146cd0 l     F .text	000000a2              CModelInfo::~CModelInfo()
00146d80 l     F .text	000000a9              CModelInfo::~CModelInfo()
00146ae0 l     F .text	00000007              CModelInfo::ComputeLevelScreenFade(Vector const&, float, float) const
00146af0 l     F .text	00000007              CModelInfo::ComputeViewScreenFade(Vector const&, float, float) const
00145770 l     F .text	0000004d              CModelInfo::FindModel(studiohdr_t const*, void**, char const*) const
001457c0 l     F .text	0000001a              CModelInfo::FindModel(void*) const
00145810 l     F .text	00000020              CModelInfo::GetAnimBlock(studiohdr_t const*, int) const
00145830 l     F .text	00000020              CModelInfo::GetAutoplayList(studiohdr_t const*, unsigned short**) const
00145960 l     F .text	00000021              CModelInfo::GetBrushModelPlaneCount(model_t const*) const
00145f10 l     F .text	00000068              CModelInfo::GetBrushModelPlane(model_t const*, int, cplane_t&, Vector*) const
00146b00 l     F .text	0000001e              CModelInfo::GetCacheHandle(model_t const*) const
00145990 l     F .text	0000000f              CModelInfo::GetCollideForVirtualTerrain(int)
00145c40 l     F .text	0000008d              CModelInfo::GetIlluminationPoint(model_t const*, IClientRenderable*, Vector const&, QAngle const&, Vector*)
00146ab0 l     F .text	00000011              CModelInfo::GetLevelScreenFadeRange(float*, float*) const
00145640 l     F .text	00000032              CModelInfo::GetModelBounds(model_t const*, Vector&, Vector&) const
001463d0 l     F .text	000000b3              CModelInfo::GetModelClientSideIndex(char const*) const
00145be0 l     F .text	00000058              CModelInfo::GetModelContents(int)
00145750 l     F .text	00000013              CModelInfo::GetModelExtraData(model_t const*)
001456c0 l     F .text	0000008a              CModelInfo::GetModelFrameCount(model_t const*) const
00145e70 l     F .text	00000097              CModelInfo::GetModelIndex(char const*) const
00145f80 l     F .text	00000115              CModelInfo::GetModelKeyValue(model_t const*, CUtlBuffer&)
00145e20 l     F .text	0000004a              CModelInfo::GetModelKeyValueText(model_t const*)
00145a80 l     F .text	0000001c              CModelInfo::GetModelMaterialCount(model_t const*) const
00145a50 l     F .text	00000022              CModelInfo::GetModelMaterials(model_t const*, int, IMaterial**)
00145610 l     F .text	00000027              CModelInfo::GetModelName(model_t const*) const
001458d0 l     F .text	00000013              CModelInfo::GetModelRadius(model_t const*)
00145cd0 l     F .text	00000149              CModelInfo::GetModelRenderBounds(model_t const*, Vector&, Vector&) const
001456a0 l     F .text	00000015              CModelInfo::GetModelSpriteHeight(model_t const*) const
00145680 l     F .text	00000015              CModelInfo::GetModelSpriteWidth(model_t const*) const
00146490 l     F .text	000000f2              CModelInfo::GetModelType(model_t const*) const
00145af0 l     F .text	0000002c              CModelInfo::GetStudiomodel(model_t const*)
00146b70 l     F .text	0000000f              CModelInfo::GetSurfacepropsForVirtualTerrain(int)
001459a0 l     F .text	000000a8              CModelInfo::GetVCollide(int)
00145b20 l     F .text	000000b4              CModelInfo::GetVCollide(model_t const*)
001457e0 l     F .text	0000002c              CModelInfo::GetVirtualModel(studiohdr_t const*) const
00146970 l     F .text	0000005a              CModelInfo::IsDynamicModelLoading(int)
00145890 l     F .text	00000015              CModelInfo::IsModelVertexLit(model_t const*) const
00145870 l     F .text	00000015              CModelInfo::IsTranslucent(model_t const*) const
001458b0 l     F .text	00000015              CModelInfo::IsTranslucentTwoPass(model_t const*) const
001460a0 l     F .text	000001ef              CModelInfo::IsUsingFBTexture(model_t const*, int, int, void*) const
00146750 l     F .text	00000145              CModelInfo::LookupDynamicModel(int)
00145850 l     F .text	00000015              CModelInfo::ModelHasMaterialProxy(model_t const*) const
00146390 l     F .text	00000036              CModelInfo::OnLevelChange()
00145aa0 l     F .text	0000004a              CModelInfo::RecomputeTranslucency(model_t const*, int, int, void*, float)
00145560 l     F .text	000000af              CModelInfo::RegisterModelLoadCallback(int, IModelLoadCallback*, bool)
001468d0 l     F .text	0000004d              CModelInfo::ReleaseDynamicModel(int)
00146e30 l     F .text	000000a9              CModelInfoServer::~CModelInfoServer()
00146ee0 l     F .text	000000a2              CModelInfoServer::~CModelInfoServer()
00146ee0 l     F .text	000000a2              CModelInfoServer::~CModelInfoServer()
00145910 l     F .text	00000007              CModelInfoServer::FindOrLoadModel(char const*)
001458f0 l     F .text	0000000a              CModelInfoServer::GetDynamicModelStringTable() const
001468a0 l     F .text	00000026              CModelInfoServer::GetModel(int)
00145940 l     F .text	00000010              CModelInfoServer::GetModelMaterialColorAndLighting(model_t const*, Vector const&, QAngle const&, CGameTrace*, Vector&, Vector&)
00145950 l     F .text	00000010              CModelInfoServer::LookupPrecachedModelIndex(char const*) const
00145900 l     F .text	00000005              CModelInfoServer::OnDynamicModelsStringTableChange(int, char const*, void const*)
00146590 l     F .text	000001bd              CModelInfoServer::RegisterDynamicModel(char const*, bool)
00146aa0 l     F .text	00000005              CModelInfo::SetLevelScreenFadeRange(float, float)
00146ad0 l     F .text	00000005              CModelInfo::SetViewScreenFadeRange(float, float)
001469d0 l     F .text	000000b5              CModelInfo::UnregisterModelLoadCallback(int, IModelLoadCallback*)
00151410 l     F .text	0000012e              CModelLoader::AddRefDynamicModel(model_t*, bool)
0014ecd0 l     F .text	0000008c              CModelLoader::CancelDynamicModelLoad(CModelLoader::CDynamicModelInfo*, model_t*)
0014ede0 l     F .text	00000095              CModelLoader::ClearWorldModel()
001474e0 l     F .text	00000005              CModelLoader::Client_OnServerModelStateChanged(model_t*, bool)
00152650 l     F .text	000001c9              CModelLoader::~CModelLoader()
00152650 l     F .text	000001c9              CModelLoader::~CModelLoader()
0014ea30 l     F .text	0000027f              CModelLoader::DebugPrintDynamicModels()
0014f520 l     F .text	0000033f              CModelLoader::DumpVCollideStats()
00151540 l     F .text	0000031d              CModelLoader::FindModel(char const*)
0014e340 l     F .text	00000154              CModelLoader::FindModelNoCreate(char const*)
0014f020 l     F .text	000001f9              CModelLoader::FindNext(int, model_t**)
0014e570 l     F .text	000001b2              CModelLoader::FinishDynamicModelLoadIfReady(CModelLoader::CDynamicModelInfo*, model_t*)
00154030 l     F .text	0000001b              CModelLoader::FlushDynamicModels()
00151330 l     F .text	000000dc              CModelLoader::ForceUnloadNonClientDynamicModels()
001474d0 l     F .text	0000000d              CModelLoader::GetActiveMapName()
00147430 l     F .text	0000000c              CModelLoader::GetCount()
00151860 l     F .text	000000fa              CModelLoader::GetDynamicModel(char const*, bool)
001477b0 l     F .text	0000004d              CModelLoader::GetExtraData(model_t*)
00151960 l     F .text	000000ce              CModelLoader::GetModelFileSize(char const*)
00147440 l     F .text	0000002f              CModelLoader::GetModelForIndex(int)
00151a50 l     F .text	00000032              CModelLoader::GetModelForName(char const*, IModelLoader::REFERENCETYPE)
001474f0 l     F .text	00000024              CModelLoader::GetName(model_t const*)
0014e310 l     F .text	00000014              CModelLoader::GetNumWorldSubmodels()
0014e4a0 l     F .text	000000c5              CModelLoader::GetTypeFromName(char const*)
0014ed60 l     F .text	0000007b              CModelLoader::Init()
00150f50 l     F .text	000003db              CModelLoader::InternalUpdateDynamicModels(bool)
00147d30 l     F .text	000000ce              CModelLoader::IsDynamicModelLoading(model_t*, bool)
00147480 l     F .text	0000000e              CModelLoader::IsLoaded(model_t const*)
0014e300 l     F .text	00000010              CModelLoader::IsWorldModelSet()
00147490 l     F .text	0000000f              CModelLoader::LastLoadedMapHasHDRLighting()
00150840 l     F .text	000003e3              CModelLoader::LoadModel(model_t*, IModelLoader::REFERENCETYPE*)
001474a0 l     F .text	0000000f              CModelLoader::Map_GetRenderInfoAllocated()
001479c0 l     F .text	00000048              CModelLoader::Map_IsValid(char const*, bool)
00147800 l     F .text	000001ba              CModelLoader::Map_IsValid(char const*, bool) [clone .part.3]
003200a0 l     O .bss	00000104              CModelLoader::Map_IsValid(char const*, bool)::s_szLastMapFile
00148c60 l     F .text	00000085              CModelLoader::Map_LoadDisplacements(model_t*, bool)
00150290 l     F .text	000005a5              CModelLoader::Map_LoadModel(model_t*)
001474b0 l     F .text	00000011              CModelLoader::Map_SetRenderInfoAllocated(bool)
0014dda0 l     F .text	0000004b              CModelLoader::Map_UnloadCubemapSamples(model_t*)
0014ee80 l     F .text	000000cd              CModelLoader::Map_UnloadModel(model_t*)
00148320 l     F .text	00000168              CModelLoader::Print()
0014d110 l     F .text	00000112              CModelLoader::PurgeUnusedModels()
0014fa50 l     F .text	0000007a              CModelLoader::QueueDynamicModelLoad(CModelLoader::CDynamicModelInfo*, model_t*)
00147520 l     F .text	00000285              CModelLoader::RecomputeSurfaceFlags(model_t*)
00151a30 l     F .text	00000020              CModelLoader::ReferenceModel(char const*, IModelLoader::REFERENCETYPE)
0014fbe0 l     F .text	00000224              CModelLoader::RegisterModelLoadCallback(model_t*, bool, IModelLoadCallback*, bool)
00147e00 l     F .text	00000133              CModelLoader::ReleaseDynamicModel(model_t*, bool)
001480b0 l     F .text	0000026e              CModelLoader::ReloadFilesInList(IFileList*)
00148490 l     F .text	000000b2              CModelLoader::ResetModelServerCounts()
00150050 l     F .text	00000238              CModelLoader::SetupSubModels(model_t*, CUtlVector<mmodel_t, CUtlMemory<mmodel_t, int> >&)
0014e2f0 l     F .text	0000000e              CModelLoader::SetWorldModel(model_t*)
0014d250 l     F .text	00000039              CModelLoader::Shutdown()
0014ddf0 l     F .text	00000192              CModelLoader::Sprite_LoadModel(model_t*)
0014df90 l     F .text	000000a2              CModelLoader::Sprite_UnloadModel(model_t*)
0014e040 l     F .text	00000281              CModelLoader::Studio_LoadModel(model_t*, bool)
00147f40 l     F .text	00000169              CModelLoader::Studio_ReloadModels(IModelLoader::ReloadType_t)
0014e2d0 l     F .text	0000001a              CModelLoader::Studio_UnloadModel(model_t*)
0014d9c0 l     F .text	000000c3              CModelLoader::Studio_UnloadModel(model_t*) [clone .part.33]
0014cfd0 l     F .text	00000135              CModelLoader::UnloadAllModels(bool)
0014ef50 l     F .text	000000c7              CModelLoader::UnloadModel(model_t*)
0014d230 l     F .text	0000001b              CModelLoader::UnloadUnreferencedModels()
00148550 l     F .text	000000bb              CModelLoader::UnreferenceAllModels(IModelLoader::REFERENCETYPE)
00147470 l     F .text	00000010              CModelLoader::UnreferenceModel(model_t*, IModelLoader::REFERENCETYPE)
0014f220 l     F .text	000002f3              CModelLoader::UnregisterModelLoadCallback(model_t*, bool, IModelLoadCallback*)
00150c30 l     F .text	0000031f              CModelLoader::UpdateDynamicModelLoadQueue()
003202c8 l     O .bss	00000008              CModelLoader::UpdateDynamicModelLoadQueue()::s_LastDynamicLoadTime
00154050 l     F .text	0000001b              CModelLoader::UpdateDynamicModels()
0014e330 l     F .text	00000007              CModelLoader::UpdateOrCreate(char const*, char*, int, bool)
0013b9c0 l     F .text	00000055              CModelRender::AddColoredDecal(unsigned short, Ray_t const&, Vector const&, int, int, Color, bool, int)
0013b740 l     F .text	00000280              CModelRender::AddDecalInternal(unsigned short, Ray_t const&, Vector const&, int, int, bool, Color, bool, int)
0013ba20 l     F .text	00000056              CModelRender::AddDecal(unsigned short, Ray_t const&, Vector const&, int, int, bool, int)
00138800 l     F .text	0000008c              CModelRender::ChangeInstance(unsigned short, IClientRenderable*)
0013de30 l     F .text	000000bc              CModelRender::~CModelRender()
0013de30 l     F .text	000000bc              CModelRender::~CModelRender()
00139a00 l     F .text	000001c2              CModelRender::ComputeLOD(ModelRenderInfo_t const&, studiohwdata_t*)
0013a5c0 l     F .text	00000005              CModelRender::ComputeModelVertexLighting(IHandleEntity*, mstudiomodel_t*, OptimizedModel::ModelLODHeader_t*, matrix3x4_t&, Vector4D*, color24*)
00139fa0 l     F .text	00000620              CModelRender::ComputeModelVertexLightingOld(mstudiomodel_t*, matrix3x4_t&, LightingState_t const&, color24*, bool, float)
0013c510 l     F .text	00000129              CModelRender::CreateInstance(IClientRenderable*, LightCacheHandle_t__**)
001399f0 l     F .text	00000005              CModelRender::DebugDrawLightingOrigin(DrawModelState_t const&, ModelRenderInfo_t const&)
0013c190 l     F .text	0000007c              CModelRender::DestroyInstance(unsigned short)
0013b620 l     F .text	00000005              CModelRender::DestroyStaticPropColorData(unsigned short)
00138390 l     F .text	00000005              CModelRender::DrawModelExecute(DrawModelState_t const&, ModelRenderInfo_t const&, matrix3x4_t*)
00138460 l     F .text	00000007              CModelRender::DrawModelEx(ModelRenderInfo_t&)
00138470 l     F .text	00000007              CModelRender::DrawModelExStaticProp(ModelRenderInfo_t&)
001383a0 l     F .text	000000ae              CModelRender::DrawModel(int, IClientRenderable*, unsigned short, int, model_t const*, Vector const&, QAngle const&, int, int, int, matrix3x4_t const*, matrix3x4_t const*)
00138450 l     F .text	00000010              CModelRender::DrawModelSetup(ModelRenderInfo_t&, DrawModelState_t*, matrix3x4_t*, matrix3x4_t**)
001384a0 l     F .text	00000005              CModelRender::DrawModelShadow(IClientRenderable*, DrawModelInfo_t const&, matrix3x4_t*)
00138490 l     F .text	00000007              CModelRender::DrawModelShadowSetup(IClientRenderable*, int, int, DrawModelInfo_t*, matrix3x4_t*)
00138480 l     F .text	00000007              CModelRender::DrawStaticPropArrayFast(StaticPropRenderInfo_t*, int, bool)
00139e30 l     F .text	00000164              CModelRender::FindOrCreateStaticPropColorData(unsigned short)
00138270 l     F .text	0000011a              CModelRender::ForcedMaterialOverride(IMaterial*, OverrideType_t)
002436b0 l     O .rodata	00000017              CModelRender::ForcedMaterialOverride(IMaterial*, OverrideType_t)::__FUNCTION__
0031ce40 l     O .bss	0000000c              CModelRender::ForcedMaterialOverride(IMaterial*, OverrideType_t)::tm_fmt
0013b660 l     F .text	00000007              CModelRender::GetCachedStaticPropColorData(char const*)
00138220 l     F .text	00000035              CModelRender::GetItemName(unsigned int, void const*, char*, unsigned int)
00138580 l     F .text	00000031              CModelRender::GetStaticLighting(unsigned short)
001394c0 l     F .text	00000064              CModelRender::Init()
00139bd0 l     F .text	00000122              CModelRender::InitColormeshParams(CModelRender::ModelInstance_t&, studiohwdata_t*, colormeshparams_t*)
0013b670 l     F .text	00000041              CModelRender::IsModelInstanceValid(unsigned short)
0013b650 l     F .text	00000007              CModelRender::IsStaticPropColorDataCached(char const*)
0013b320 l     F .text	000002c9              CModelRender::LoadStaticPropColorData(IHandleEntity*, memhandle_t__*, studiohwdata_t*)
00139d00 l     F .text	00000122              CModelRender::ProtectColorDataIfQueued(memhandle_t__*)
0013b640 l     F .text	00000005              CModelRender::PurgeCachedStaticPropColorData()
001385c0 l     F .text	0000000a              CModelRender::RecomputeStaticLighting(unsigned short)
001384d0 l     F .text	00000034              CModelRender::ReleaseAllStaticPropColorData()
001385e0 l     F .text	00000046              CModelRender::RemoveAllDecalsFromAllModels()
0013b6c0 l     F .text	00000072              CModelRender::RemoveAllDecals(unsigned short)
00138510 l     F .text	00000005              CModelRender::RestoreAllStaticPropColorData()
00138520 l     F .text	00000054              CModelRender::SetStaticLighting(unsigned short, LightCacheHandle_t__**)
001385d0 l     F .text	00000005              CModelRender::SetupColorMeshes(int)
00138260 l     F .text	00000005              CModelRender::SetupLighting(Vector const&)
00139870 l     F .text	0000002b              CModelRender::SetupModelState(IClientRenderable*)
001384b0 l     F .text	0000001b              CModelRender::SetViewTarget(CStudioHdr const*, int, Vector const&)
00139550 l     F .text	00000058              CModelRender::Shutdown()
001395b0 l     F .text	0000013b              CModelRender::SnapCurrentLightingState(CModelRender::ModelInstance_t&, LightingState_t*)
0013a810 l     F .text	00000934              CModelRender::StaticPropColorMeshCallback(void*, void const*, int, FSAsyncStatus_t)
0013b190 l     F .text	0000014c              CModelRender::StaticPropColorTexelCallback(void*, void const*, int, FSAsyncStatus_t)
00139850 l     F .text	00000005              CModelRender::StudioSetupLighting(DrawModelState_t const&, Vector const&, LightCacheHandle_t__**, bool, bool, bool&, DrawModelInfo_t&, ModelRenderInfo_t const&, int)
00138200 l     F .text	0000000e              CModelRender::SuppressEngineLighting(bool)
001396f0 l     F .text	00000149              CModelRender::TimeAverageAmbientLight(LightingState_t&, CModelRender::ModelInstance_t&, float, LightingState_t*, Vector const*)
00139840 l     F .text	00000008              CModelRender::TimeAverageLightingState(unsigned short, LightingState_t*, int, Vector const*)
0013b5f0 l     F .text	00000028              CModelRender::UpdateStaticPropColorData(IHandleEntity*, unsigned short)
0013a5d0 l     F .text	00000231              CModelRender::ValidateStaticPropColorData(unsigned short)
000e8f20 l     F .text	0000001e              CM_PhysCollideForDisp(int)
000e1150 l     F .text	0000016c              CM_PointContents(Vector const&, int)
000e0a60 l     F .text	000000ae              CM_PointLeafnumMinDistSqr_r(CCollisionBSPData*, Vector const&, int, float&)
000e0b10 l     F .text	00000085              CM_PointLeafnum_r(CCollisionBSPData*, Vector const&, int)
000e0ba0 l     F .text	00000035              CM_PointLeafnum(Vector const&)
000e9490 l     F .text	0000006d              CM_PostStab(TraceInfo_t*)
000e9500 l     F .text	0000004f              CM_PostTraceToDispTree(TraceInfo_t*)
000e8f60 l     F .text	00000108              CM_PreStab(TraceInfo_t*, cleaf_t*, Vector&, int, int&)
000e20c0 l     F .text	0000008e              CM_RayLeafnums(Ray_t const&, int*, int, int&)
000e1b90 l     F .text	0000052e              CM_RayLeafnums_r(Ray_t const&, CCollisionBSPData*, int, float, float, Vector const&, Vector const&, int*, int, int&)
000e3b10 l     F .text	00000036              CM_RecursiveHullCheck(TraceInfo_t*, int, float, float)
000e28e0 l     F .text	00000046              CM_SetAreaPortalState(int, int)
000e2930 l     F .text	00000080              CM_SetAreaPortalStates(int const*, int const*, int)
000e31a0 l     F .text	0000006b              CM_SetupAreaFloodNums(unsigned char*, int*)
000e0be0 l     F .text	00000176              CM_SnapPointToReferenceLeaf_r(CCollisionBSPData*, Vector const&, int, float, Vector*)
000e0d60 l     F .text	00000043              CM_SnapPointToReferenceLeaf(Vector const&, float, Vector*)
000e9070 l     F .text	00000194              CM_Stab(TraceInfo_t*, Vector const&, Vector const&, int)
000e8f40 l     F .text	00000016              CM_SurfacepropsForDisp(int)
000e9210 l     F .text	00000274              CM_TestInDispTree(TraceInfo_t*, cleaf_t*, Vector const&, Vector const&, Vector const&, int, CGameTrace*)
000e0270 l     F .text	000002c6              CM_TestInLeaf(TraceInfo_t*, int)
000e43b0 l     F .text	0000039f              CM_TransformedBoxTrace(Ray_t const&, int, int, Vector const&, QAngle const&, CGameTrace&)
000e12c0 l     F .text	00000135              CM_TransformedPointContents(Vector const&, int, Vector const&, QAngle const&)
000e0f70 l     F .text	0000010f              CM_UnsweptBoxTrace(TraceInfo_t*, Ray_t const&, int, int) [clone .isra.63]
000e0a00 l     F .text	0000005f              CM_VCollideForModel(int, model_t const*)
000e25b0 l     F .text	000000b0              CM_Vis(unsigned char*, int, int, int)
000e2f40 l     F .text	00000132              CM_WorldAlignBounds(ICollideable*, Vector*, Vector*)
000e3080 l     F .text	0000011e              CM_WorldSpaceBounds(ICollideable*, Vector*, Vector*)
000e2e00 l     F .text	00000131              CM_WorldSpaceCenter(ICollideable*, Vector*)
000e2a20 l     F .text	00000160              CM_WriteAreaBits(unsigned char*, int, int)
0015e970 l     F .text	00000077              CNetChan::CanPacket() const
00162f40 l     F .text	0000016f              CNetChan::CheckReceivingList(int)
00160e20 l     F .text	00000094              CNetChan::CheckWaitingList(int)
00160470 l     F .text	00000127              CNetChan::Clear()
00163f90 l     F .text	0000018c              CNetChan::~CNetChan()
00163f90 l     F .text	0000018c              CNetChan::~CNetChan()
00164120 l     F .text	0000001f              CNetChan::~CNetChan()
00164140 l     F .text	000003a6              CNetChan::CNetChan()
00164140 l     F .text	000003a6              CNetChan::CNetChan()
0015f2e0 l     F .text	00000789              CNetChan::CompressFragments()
00322b28 l     O .bss	0000000c              CNetChan::CompressFragments()::tm_fmt
001647f0 l     F .text	00000500              CNetChan::CreateFragmentsFromBuffer(bf_write*, int)
00322c48 l     O .bss	0000000c              CNetChan::CreateFragmentsFromBuffer(bf_write*, int)::tm_fmt
001644f0 l     F .text	00000232              CNetChan::CreateFragmentsFromFile(char const*, int, unsigned int)
00162480 l     F .text	0000001c              CNetChan::DecrementQueuedPackets()
0015efa0 l     F .text	00000187              CNetChan::DenyFile(char const*, unsigned int)
001616a0 l     F .text	0000006a              CNetChan::FindMessage(int)
0015fe80 l     F .text	0000024f              CNetChan::FlowNewPacket(int, int, int, int, int, int)
0015fb10 l     F .text	000000e0              CNetChan::FlowReset()
001600d0 l     F .text	0000021b              CNetChan::FlowUpdate(int, int)
0015e640 l     F .text	00000020              CNetChan::GetAddress() const
0015e3d0 l     F .text	00000015              CNetChan::GetAvgChoke(int) const
0015e240 l     F .text	00000015              CNetChan::GetAvgData(int) const
0015e3f0 l     F .text	00000015              CNetChan::GetAvgLatency(int) const
0015e410 l     F .text	00000015              CNetChan::GetAvgLoss(int) const
0015e260 l     F .text	00000015              CNetChan::GetAvgPackets(int) const
0015e2d0 l     F .text	0000000a              CNetChan::GetBufferSize() const
0015e040 l     F .text	0000000e              CNetChan::GetChallengeNr() const
0015e450 l     F .text	00000020              CNetChan::GetCommandInterpolationAmount(int, int) const
0015e160 l     F .text	0000000e              CNetChan::GetDataRate() const
0015e100 l     F .text	0000000e              CNetChan::GetDropNumber() const
00160de0 l     F .text	0000003c              CNetChan::GetFreeSubChannel()
0015e3b0 l     F .text	00000015              CNetChan::GetLatency(int) const
0015e540 l     F .text	0000000e              CNetChan::GetMaxRoutablePayloadSize()
0015e1c0 l     F .text	0000000e              CNetChan::GetMsgHandler() const
0015e0f0 l     F .text	0000000d              CNetChan::GetName() const
0015e140 l     F .text	00000018              CNetChan::GetNumBitsWritten(bool)
0015e470 l     F .text	00000055              CNetChan::GetPacketBytes(int, int, int) const
0015e320 l     F .text	0000005d              CNetChan::GetPacketResponseLatency(int, int, int*, int*) const
0015e300 l     F .text	00000020              CNetChan::GetPacketTime(int, int) const
0015e550 l     F .text	0000000e              CNetChan::GetProtocolVersion()
0015e1b0 l     F .text	0000000d              CNetChan::GetRemoteAddress() const
0015e380 l     F .text	00000028              CNetChan::GetRemoteFramerate(float*, float*) const
0015e050 l     F .text	00000020              CNetChan::GetSequenceData(int&, int&, int&)
0015e2a0 l     F .text	0000002d              CNetChan::GetSequenceNr(int) const
0015e230 l     F .text	0000000e              CNetChan::GetSocket() const
0015ee00 l     F .text	000000ca              CNetChan::GetStreamProgress(int, int*, int*) const
0015e170 l     F .text	00000033              CNetChan::GetTimeConnected() const
0015e430 l     F .text	0000001c              CNetChan::GetTime() const
0015e1d0 l     F .text	0000000e              CNetChan::GetTimeoutSeconds() const
0015e1e0 l     F .text	0000003a              CNetChan::GetTimeSinceLastReceived() const
0015e280 l     F .text	00000015              CNetChan::GetTotalData(int) const
00162550 l     F .text	00000224              CNetChan::HandleUpload(CNetChan::dataFragments_s*, INetChannelHandler*)
00322ea0 l     O .bss	00000004              CNetChan::HandleUpload(CNetChan::dataFragments_s*, INetChannelHandler*)::s_pAllowUpload
0015e9f0 l     F .text	0000002f              CNetChan::HasPendingReliableData()
001624a0 l     F .text	00000037              CNetChan::HasQueuedPackets() const
00162470 l     F .text	0000000f              CNetChan::IncrementQueuedPackets()
001624e0 l     F .text	00000017              CNetChan::IncrementSplitPacketSequence()
001602f0 l     F .text	00000094              CNetChan::IsFileInWaitingList(char const*)
0015e680 l     F .text	00000010              CNetChan::IsLoopback() const
0015e660 l     F .text	0000001d              CNetChan::IsNull() const
0015e220 l     F .text	0000000c              CNetChan::IsOverflowed() const
0015e110 l     F .text	00000007              CNetChan::IsPlayback() const
0015e730 l     F .text	00000034              CNetChan::IsTimedOut() const
0015e770 l     F .text	0000003c              CNetChan::IsTimingOut() const
00162500 l     F .text	00000044              CNetChan::IsValidFileForTransfer(char const*)
0015ea20 l     F .text	000003de              CNetChan::IsValidFileForTransfer(char const*) [clone .part.45]
0015e2e0 l     F .text	00000020              CNetChan::IsValidPacket(int, int) const
00162780 l     F .text	000001dd              CNetChan::ProcessControlMessage(int, bf_read&)
00162960 l     F .text	000005dd              CNetChan::ProcessMessages(bf_read&)
00322d68 l     O .bss	0000000c              CNetChan::ProcessMessages(bf_read&)::tm_fmt
00160ec0 l     F .text	000007d6              CNetChan::ProcessPacketHeader(netpacket_s*)
001635e0 l     F .text	00000600              CNetChan::ProcessPacket(netpacket_s*, bool)
00322f68 l     O .bss	0000000c              CNetChan::ProcessPacket(netpacket_s*, bool)::tm_fmt
0015e130 l     F .text	00000005              CNetChan::ProcessPlayback()
00163560 l     F .text	00000079              CNetChan::ProcessStream()
001630b0 l     F .text	000004ae              CNetChan::ProcessStream() [clone .part.63]
001605a0 l     F .text	0000070e              CNetChan::ReadSubChannelData(bf_read&, int)
00165720 l     F .text	0000006b              CNetChan::RegisterMessage(INetMessage*)
00160390 l     F .text	000000d2              CNetChan::RemoveHeadInWaitingList(int)
0015f130 l     F .text	000001a4              CNetChan::RequestFile(char const*)
0015e6c0 l     F .text	00000010              CNetChan::RequestFile_OLD(char const*, unsigned int)
0015e5b0 l     F .text	00000043              CNetChan::Reset()
0015e000 l     F .text	0000001b              CNetChan::ResetStreaming()
0015e7b0 l     F .text	000000c4              CNetChan::SendData(bf_write&, bool)
00164cf0 l     F .text	00000a2f              CNetChan::SendDatagram(bf_write*)
00164730 l     F .text	000000c0              CNetChan::SendFile(char const*, unsigned int)
0015e880 l     F .text	000000e9              CNetChan::SendNetMsg(INetMessage&, bool, bool)
001623a0 l     F .text	000000cd              CNetChan::SendReliableAcknowledge(int)
00161710 l     F .text	0000012d              CNetChan::SendReliableViaStream(CNetChan::dataFragments_s*)
00161880 l     F .text	00000b1a              CNetChan::SendSubChannelData(bf_write&)
00322ca8 l     O .bss	0000000c              CNetChan::SendSubChannelData(bf_write&)::tm_fmt
00161840 l     F .text	0000003e              CNetChan::SendTCPData()
0015e020 l     F .text	00000011              CNetChan::SetChallengeNr(unsigned int)
0015e120 l     F .text	00000010              CNetChan::SetChoked()
0015e0d0 l     F .text	00000011              CNetChan::SetCompressionMode(bool)
0015e690 l     F .text	00000027              CNetChan::SetDataRate(float)
0015e090 l     F .text	00000011              CNetChan::SetDemoRecorder(IDemoRecorder*)
0015e0b0 l     F .text	00000011              CNetChan::SetFileTransmissionMode(bool)
0015e500 l     F .text	00000011              CNetChan::SetInterpolationAmount(float)
00163be0 l     F .text	000001bb              CNetChan::SetMaxBufferSize(bool, int, bool)
0015e560 l     F .text	0000004f              CNetChan::SetMaxRoutablePayloadSize(int)
0015e520 l     F .text	0000001a              CNetChan::SetRemoteFramerate(float, float)
0015e070 l     F .text	0000001a              CNetChan::SetSequenceData(int, int, int)
0015e6d0 l     F .text	0000005c              CNetChan::SetTimeout(float)
0015fbf0 l     F .text	00000281              CNetChan::Setup(int, netadr_s*, char const*, INetChannelHandler*, int)
00163da0 l     F .text	000001f0              CNetChan::Shutdown(char const*)
0015eed0 l     F .text	000000cc              CNetChan::StartStreaming(unsigned int)
0015e600 l     F .text	00000039              CNetChan::Transmit(bool)
0015fa70 l     F .text	0000009c              CNetChan::UncompressFragments(CNetChan::dataFragments_s*)
0015e4d0 l     F .text	00000026              CNetChan::UpdateMessageStats(int, int)
00160cb0 l     F .text	00000123              CNetChan::UpdateSubChannels()
0008afc0 l     F .text	0000000e              CNetMessage::~CNetMessage()
0008afc0 l     F .text	0000000e              CNetMessage::~CNetMessage()
0008c3e0 l     F .text	00000012              CNetMessage::~CNetMessage()
0008afd0 l     F .text	00000007              CNetMessage::GetGroup() const
0008afe0 l     F .text	0000000b              CNetMessage::GetNetChannel() const
0008b000 l     F .text	0000000c              CNetMessage::IsReliable() const
0008b020 l     F .text	00000007              CNetMessage::Process()
0008b010 l     F .text	0000000e              CNetMessage::SetNetChannel(INetChannel*)
0008aff0 l     F .text	0000000e              CNetMessage::SetReliable(bool)
0015b8d0 l     F .text	0000007a              CNetworkStringDict::~CNetworkStringDict()
0015b8d0 l     F .text	0000007a              CNetworkStringDict::~CNetworkStringDict()
0015b9b0 l     F .text	00000081              CNetworkStringDict::~CNetworkStringDict()
0015aa70 l     F .text	0000000b              CNetworkStringDict::Count()
0015aae0 l     F .text	00000015              CNetworkStringDict::Element(int)
0015ab00 l     F .text	00000015              CNetworkStringDict::Element(int) const
0015abd0 l     F .text	000000ac              CNetworkStringDict::Find(char const*)
0015d760 l     F .text	000001a8              CNetworkStringDict::Insert(char const*)
0015aaa0 l     F .text	0000003a              CNetworkStringDict::IsValidIndex(int)
0015b950 l     F .text	00000057              CNetworkStringDict::Purge()
0015aa80 l     F .text	0000001e              CNetworkStringDict::String(int)
0015b0e0 l     F .text	000000a9              CNetworkStringFilenameDict::~CNetworkStringFilenameDict()
0015b190 l     F .text	000000a2              CNetworkStringFilenameDict::~CNetworkStringFilenameDict()
0015b190 l     F .text	000000a2              CNetworkStringFilenameDict::~CNetworkStringFilenameDict()
0015aa20 l     F .text	0000000c              CNetworkStringFilenameDict::Count()
0015aa30 l     F .text	00000015              CNetworkStringFilenameDict::Element(int)
0015aa50 l     F .text	00000015              CNetworkStringFilenameDict::Element(int) const
0015ac80 l     F .text	0000018d              CNetworkStringFilenameDict::Find(char const*)
0015d640 l     F .text	00000077              CNetworkStringFilenameDict::Insert(char const*)
0015ae10 l     F .text	000000a9              CNetworkStringFilenameDict::IsValidIndex(int)
0015b0b0 l     F .text	00000025              CNetworkStringFilenameDict::Purge()
0015ab80 l     F .text	00000050              CNetworkStringFilenameDict::String(int)
00157c00 l     F .text	000002c1              CNetworkStringTable::AddString(bool, char const*, int, void const*)
00156cf0 l     F .text	00000011              CNetworkStringTable::ChangedSinceTick(int) const
00156e40 l     F .text	00000057              CNetworkStringTable::~CNetworkStringTable()
00156e40 l     F .text	00000057              CNetworkStringTable::~CNetworkStringTable()
00156ea0 l     F .text	0000001f              CNetworkStringTable::~CNetworkStringTable()
001571b0 l     F .text	00000232              CNetworkStringTable::CNetworkStringTable(int, char const*, int, int, int, bool)
001571b0 l     F .text	00000232              CNetworkStringTable::CNetworkStringTable(int, char const*, int, int, int, bool)
001586a0 l     F .text	0000000e              CNetworkStringTableContainer::AllowCreation(bool)
00158c80 l     F .text	00000081              CNetworkStringTableContainer::~CNetworkStringTableContainer()
00158c80 l     F .text	00000081              CNetworkStringTableContainer::~CNetworkStringTableContainer()
00158d10 l     F .text	0000001f              CNetworkStringTableContainer::~CNetworkStringTableContainer()
00158650 l     F .text	00000044              CNetworkStringTableContainer::CNetworkStringTableContainer()
00158650 l     F .text	00000044              CNetworkStringTableContainer::CNetworkStringTableContainer()
0015a9e0 l     F .text	00000037              CNetworkStringTableContainer::CreateStringTable(char const*, int, int, int)
0015a860 l     F .text	0000014e              CNetworkStringTableContainer::CreateStringTableEx(char const*, int, int, int, bool)
001588b0 l     F .text	0000026a              CNetworkStringTableContainer::DirectUpdate(int)
003228ec l     O .bss	0000000c              CNetworkStringTableContainer::DirectUpdate(int)::tm_fmt
00158c40 l     F .text	00000035              CNetworkStringTableContainer::Dump()
00158b20 l     F .text	0000000e              CNetworkStringTableContainer::EnableRollback(bool)
00156ec0 l     F .text	00000072              CNetworkStringTableContainer::FindTable(char const*) const
00156dd0 l     F .text	0000000b              CNetworkStringTableContainer::GetNumTables() const
00156da0 l     F .text	00000028              CNetworkStringTableContainer::GetTable(int) const
001586b0 l     F .text	0000005c              CNetworkStringTableContainer::Lock(bool)
00158780 l     F .text	0000012b              CNetworkStringTableContainer::ReadStringTables(bf_read&)
00156de0 l     F .text	0000005a              CNetworkStringTableContainer::RemoveAllTables()
00158b30 l     F .text	00000048              CNetworkStringTableContainer::RestoreTick(int)
00157500 l     F .text	00000068              CNetworkStringTableContainer::SetAllowClientSideAddString(INetworkStringTable*, bool)
00158bf0 l     F .text	00000048              CNetworkStringTableContainer::SetTick(int)
00158b80 l     F .text	00000068              CNetworkStringTableContainer::TriggerCallbacks(int)
0015a290 l     F .text	000005ce              CNetworkStringTableContainer::WriteBaselines(bf_write&)
003228d4 l     O .bss	0000000c              CNetworkStringTableContainer::WriteBaselines(bf_write&)::tm_fmt
00158710 l     F .text	00000069              CNetworkStringTableContainer::WriteStringTables(bf_write&)
00159c50 l     F .text	0000037b              CNetworkStringTableContainer::WriteUpdateMessage(CBaseClient*, int, bf_write&)
003228e0 l     O .bss	0000000c              CNetworkStringTableContainer::WriteUpdateMessage(CBaseClient*, int, bf_write&)::tm_fmt
00157980 l     F .text	00000086              CNetworkStringTable::CopyStringTable(CNetworkStringTable*)
00157ae0 l     F .text	00000074              CNetworkStringTable::DataChanged(int, CNetworkStringTableItem*)
001575d0 l     F .text	000001b1              CNetworkStringTable::DeleteAllStrings()
00156f40 l     F .text	000000d7              CNetworkStringTable::Dump()
001577e0 l     F .text	0000000c              CNetworkStringTable::EnableRollback()
00157060 l     F .text	00000051              CNetworkStringTable::FindStringIndex(char const*)
001577d0 l     F .text	0000000b              CNetworkStringTable::GetCallback()
00156c90 l     F .text	0000000b              CNetworkStringTable::GetEntryBits() const
00157790 l     F .text	00000033              CNetworkStringTable::GetItem(int)
00156c70 l     F .text	0000000b              CNetworkStringTable::GetMaxStrings() const
00156d80 l     F .text	00000014              CNetworkStringTable::GetNumStrings() const
00156d10 l     F .text	00000070              CNetworkStringTable::GetString(int)
00157020 l     F .text	0000003f              CNetworkStringTable::GetStringUserData(int, int*)
00156c60 l     F .text	0000000b              CNetworkStringTable::GetTableId() const
00156c80 l     F .text	0000000b              CNetworkStringTable::GetTableName() const
001575c0 l     F .text	0000000b              CNetworkStringTable::GetUserDataSizeBits() const
001575b0 l     F .text	0000000b              CNetworkStringTable::GetUserDataSize() const
00157590 l     F .text	00000012              CNetworkStringTable::HasFileNameStrings() const
00157570 l     F .text	00000012              CNetworkStringTable::IsUserDataFixedSize() const
0015da70 l     F .text	00000098              CNetworkStringTableItem::~CNetworkStringTableItem()
0015da70 l     F .text	00000098              CNetworkStringTableItem::~CNetworkStringTableItem()
0015d940 l     F .text	0000002a              CNetworkStringTableItem::CNetworkStringTableItem()
0015d940 l     F .text	0000002a              CNetworkStringTableItem::CNetworkStringTableItem()
0015d970 l     F .text	00000057              CNetworkStringTableItem::EnableChangeHistory()
0015da50 l     F .text	00000016              CNetworkStringTableItem::GetUserData(int*)
0015d9d0 l     F .text	0000007e              CNetworkStringTableItem::RestoreTick(int)
0015dcd0 l     F .text	000000f5              CNetworkStringTableItem::SetUserData(int, int, void const*)
0015db10 l     F .text	000001b5              CNetworkStringTableItem::UpdateChangeList(int, int, void const*)
00156c40 l     F .text	00000012              CNetworkStringTable_LessFunc(void* const&, void* const&)
00156cb0 l     F .text	0000001e              CNetworkStringTable::Lock(bool)
00158d30 l     F .text	000006db              CNetworkStringTable::ParseUpdate(bf_read&, int)
00158180 l     F .text	000004c9              CNetworkStringTable::ReadStringTable(bf_read&)
00157800 l     F .text	00000065              CNetworkStringTable::RestoreTick(int)
001573f0 l     F .text	00000106              CNetworkStringTable::SetAllowClientSideAddString(bool)
001577f0 l     F .text	0000000e              CNetworkStringTable::SetMirrorTable(INetworkStringTable*)
00156cd0 l     F .text	00000014              CNetworkStringTable::SetStringChangedCallback(void*, void (*)(void*, INetworkStringTable*, int, char const*, void const*))
00157b60 l     F .text	0000009a              CNetworkStringTable::SetStringUserData(int, int, void const*)
00156ca0 l     F .text	0000000e              CNetworkStringTable::SetTick(int)
00157a10 l     F .text	000000cf              CNetworkStringTable::TriggerCallbacks(int)
00157870 l     F .text	0000010f              CNetworkStringTable::UpdateMirrorTable(int)
00159fd0 l     F .text	000002bb              CNetworkStringTable::WriteBaselines(SVC_CreateStringTable&, char*, int)
003228c8 l     O .bss	0000000c              CNetworkStringTable::WriteBaselines(SVC_CreateStringTable&, char*, int)::tm_fmt
00157ed0 l     F .text	000002a6              CNetworkStringTable::WriteStringTable(bf_write&)
00159410 l     F .text	00000834              CNetworkStringTable::WriteUpdate(CBaseClient*, bf_write&, int)
000a7660 l     F .text	0000001b              CNonModifiedPointerProxy::CNonModifiedPointerProxy(void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
000a7660 l     F .text	0000001b              CNonModifiedPointerProxy::CNonModifiedPointerProxy(void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
00197450 l     F .text	0000013d              CObjectPool<CVarBitVec, 2, true>::~CObjectPool()
00197450 l     F .text	0000013d              CObjectPool<CVarBitVec, 2, true>::~CObjectPool()
0016f650 l     F .text	0000003d              COcclusionSystem::ActivateOccluder(int, bool)
00171fc0 l     F .text	000002a7              COcclusionSystem::AddPolygonToEdgeList(CEdgeList&, Vector**, int, int, bool)
00170c00 l     F .text	0000023e              COcclusionSystem::ClipPolygonToAxisAlignedPlane(Vector**, int, COcclusionSystem::AxisAlignedPlane_t const&, Vector**) const
001708f0 l     F .text	000002f1              COcclusionSystem::ClipPolygonToNearPlane(Vector**, int, Vector**, bool*) const
001710f0 l     F .text	00000177              COcclusionSystem::~COcclusionSystem()
001710f0 l     F .text	00000177              COcclusionSystem::~COcclusionSystem()
00170850 l     F .text	00000091              COcclusionSystem::COcclusionSystem()
00170850 l     F .text	00000091              COcclusionSystem::COcclusionSystem()
00170e40 l     F .text	00000079              COcclusionSystem::ComputeScreenSpacePlane(cplane_t const&, cplane_t*)
0016f450 l     F .text	00000005              COcclusionSystem::DrawDebugOverlays()
00172560 l     F .text	00000c27              COcclusionSystem::IsOccluded(Vector const&, Vector const&)
00324ea8 l     O .bss	00000008              COcclusionSystem::IsOccluded(Vector const&, Vector const&)::mutex
00324e88 l     O .bss	0000000c              COcclusionSystem::IsOccluded(Vector const&, Vector const&)::tm_fmt
0016f440 l     F .text	0000000e              COcclusionSystem::MinOccluderArea() const
00172270 l     F .text	000002e8              COcclusionSystem::RecomputeOccluderEdgeList()
00170bf0 l     F .text	0000000f              COcclusionSystem::ResetClipTempVerts()
0016f3f0 l     F .text	0000004a              COcclusionSystem::SetOcclusionParameters(float, float)
0016f460 l     F .text	000001e6              COcclusionSystem::SetView(Vector const&, float, VMatrix const&, VMatrix const&, VPlane const&)
00171e80 l     F .text	00000138              COcclusionSystem::StitchClippedVertices(Vector*, int)
000e64c0 l     F .text	00000264              CollisionBSPData_Destroy(CCollisionBSPData*)
000e6730 l     F .text	00000022              CollisionBSPData_GetCollisionTree(int)
000e6470 l     F .text	00000049              CollisionBSPData_Init(CCollisionBSPData*)
000e6760 l     F .text	00000068              CollisionBSPData_LinkPhysics()
000e7b60 l     F .text	00000138              CollisionBSPData_LoadAreaPortals(CCollisionBSPData*)
000e7a50 l     F .text	00000107              CollisionBSPData_LoadAreas(CCollisionBSPData*)
000e7210 l     F .text	00000116              CollisionBSPData_LoadBrushes(CCollisionBSPData*)
000e7330 l     F .text	00000444              CollisionBSPData_LoadBrushSides(CCollisionBSPData*, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >&)
000e8ba0 l     F .text	000001cf              CollisionBSPData_Load(char const*, CCollisionBSPData*)
000e8050 l     F .text	00000965              CollisionBSPData_LoadDispInfo(CCollisionBSPData*)
000e7d70 l     F .text	0000017c              CollisionBSPData_LoadEntityString(CCollisionBSPData*)
000e6f70 l     F .text	00000116              CollisionBSPData_LoadLeafBrushes(CCollisionBSPData*)
000e6ee0 l     F .text	00000090              CollisionBSPData_LoadLeafs(CCollisionBSPData*)
000e6b30 l     F .text	000001d7              CollisionBSPData_LoadLeafs_Version_0(CCollisionBSPData*, CMapLoadHelper&)
000e6d10 l     F .text	000001c7              CollisionBSPData_LoadLeafs_Version_1(CCollisionBSPData*, CMapLoadHelper&)
000e7900 l     F .text	00000141              CollisionBSPData_LoadNodes(CCollisionBSPData*)
000e7ef0 l     F .text	00000151              CollisionBSPData_LoadPhysics(CCollisionBSPData*)
000e7090 l     F .text	0000017a              CollisionBSPData_LoadPlanes(CCollisionBSPData*)
000e7780 l     F .text	0000017a              CollisionBSPData_LoadSubmodels(CCollisionBSPData*)
000e89c0 l     F .text	000001d8              CollisionBSPData_LoadTexinfo(CCollisionBSPData*, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >&)
000e6820 l     F .text	0000030a              CollisionBSPData_LoadTextures(CCollisionBSPData*)
000e7ca0 l     F .text	000000d0              CollisionBSPData_LoadVisibility(CCollisionBSPData*)
000e67d0 l     F .text	00000044              CollisionBSPData_PreLoad(CCollisionBSPData*)
0038b160 l     O .bss	00000004              colorcorrection
00204950 l     F .text	0000006b              ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
000ea4a0 l     F .text	00000076              COM_AddNoise(unsigned char*, int, int)
0030f920 l     O .bss	00000104              com_basedir
000dbf00 l     F .text	000000c1              COM_BlockSequenceCRCByte(unsigned char*, int, int)
000ebb80 l     F .text	00000052              COM_BufferToBufferCompress_LZSS(void*, unsigned int*, void const*, unsigned int)
000eba40 l     F .text	000000bd              COM_BufferToBufferCompress_Snappy(void*, unsigned int*, void const*, unsigned int)
000ebc60 l     F .text	0000017d              COM_BufferToBufferDecompress(void*, unsigned int*, void const*, unsigned int)
000ea6e0 l     F .text	00000095              COM_CheckGameDirectory(char const*)
000eab80 l     F .text	00000020              COM_CloseFile(void*)
000eb420 l     F .text	000000a7              COM_CompareFileTime(char const*, char const*, int*)
000ebb10 l     F .text	0000006b              COM_CompressBuffer_LZSS(void const*, unsigned int, unsigned int*, unsigned int)
000eb9c0 l     F .text	00000080              COM_CompressBuffer_Snappy(void const*, unsigned int, unsigned int*, unsigned int)
000ea920 l     F .text	00000185              COM_CopyFile(char const*, char const*)
000ead10 l     F .text	000000ff              COM_CopyFileChunk(void*, void*, int)
000ea800 l     F .text	00000040              COM_CreatePath(char const*)
000eb0b0 l     F .text	000001ba              COM_DXLevelToString(int)
000eaab0 l     F .text	00000091              COM_ExpandFilename(char*, int)
000ea210 l     F .text	000000e5              COM_ExplainDisconnection(bool, char const*, ...)
000ea300 l     F .text	00000073              COM_ExtendedExplainDisconnection(bool, char const*, ...)
000eab50 l     F .text	00000028              COM_FileSize(char const*)
000ea780 l     F .text	00000063              COM_FindFile(char const*, void**)
000eb270 l     F .text	000000a8              COM_FormatSeconds(int)
003141c0 l     O .bss	00000040              COM_FormatSeconds(int)::string
0030f800 l     O .bss	00000104              com_gamedir
000eb4d0 l     F .text	00000026              COM_GetGameDir(char*, int)
000ebb00 l     F .text	00000008              COM_GetIdealDestinationCompressionBufferSize_LZSS(unsigned int)
000eb9a0 l     F .text	00000016              COM_GetIdealDestinationCompressionBufferSize_Snappy(unsigned int)
000eaed0 l     F .text	00000159              COM_GetModDirectory()
003140a0 l     O .bss	00000104              COM_GetModDirectory()::modDir
000ebbe0 l     F .text	00000079              COM_GetUncompressedSize(void const*, unsigned int)
0030fe40 l     O .bss	00000001              com_ignorecolons
000eb800 l     F .text	00000030              COM_Init()
000eb6c0 l     F .text	000000f8              COM_InitFilesystem(char const*)
0018eec0 l     F .text	00000025              COM_IOReadBinary::close(int)
0018ed30 l     F .text	000000a6              COM_IOReadBinary::open(char const*)
0018ede0 l     F .text	0000003c              COM_IOReadBinary::read(void*, int, int)
0018ee20 l     F .text	00000039              COM_IOReadBinary::seek(int, int)
0018ee90 l     F .text	00000025              COM_IOReadBinary::size(int)
0018ee60 l     F .text	00000025              COM_IOReadBinary::tell(int)
000eb8d0 l     F .text	000000c5              COM_IsValidLogFilename(char const*)
000eb830 l     F .text	0000009d              COM_IsValidPath(char const*)
000eaba0 l     F .text	00000167              COM_LoadFile(char const*, int, int*)
000eae10 l     F .text	00000026              COM_LoadStackFile(char const*, void*, int, int&)
000eb3d0 l     F .text	00000050              COM_Log(char const*, char const*, ...)
000eb320 l     F .text	000000ad              COM_LogString(char const*, char const*)
00000000 l    d  .comment	00000000              .comment
000ea7f0 l     F .text	00000009              COM_OpenFile(char const*, void**)
000ffb30 l     F .text	00000037              CompareBitArrays(void const*, void const*, int, int)
0010a970 l     F .text	00000068              CompareRecvPropToSendProp(RecvProp const*, SendProp const*)
000ea380 l     F .text	0000011e              COM_Parse(char const*)
000eb7c0 l     F .text	00000036              COM_ParseFile(char const*, char*, int)
000ea520 l     F .text	0000007a              COM_ParseLine(char const*)
002c8080 l     O .bss	00000001              completed.5793
002291a0 l     F .text	000003fb              compress_block
000bc7c0 l     F .text	000001d4              compress_block(TState&, ct_data*, ct_data*)
000975f0 l     F .text	00000095              ComputeBoxOffset(Ray_t const&) [clone .part.5]
00097690 l     F .text	000000c5              ComputeCenterMatrix(Vector const&, QAngle const&, Vector const&, Vector const&, matrix3x4_t&) [clone .constprop.50]
0018e900 l     F .text	0000009f              ComputeDecalLightmapOffset(msurface2_t*)
000fa9e0 l     F .text	00000016              ComputeDisplacementStaticMeshVertexFormat(IMaterial const*, CDispGroup const*, ddispinfo_t const*)
000986d0 l     F .text	0000027f              ComputeIntersectionBarycentricCoordinates(Ray_t const&, Vector const&, Vector const&, Vector const&, float&, float&, float*)
000dd9c0 l     F .text	000000e1              ComputeLightRadius(dworldlight_t*, bool)
0009c810 l     F .text	00000076              ComputePointFromBarycentric(Vector2D const&, Vector2D const&, Vector2D const&, float, float, Vector2D&)
0009c760 l     F .text	000000a3              ComputePointFromBarycentric(Vector const&, Vector const&, Vector const&, float, float, Vector&)
00097760 l     F .text	00000baf              ComputeSeparatingPlane(matrix3x4_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, cplane_t*) [clone .constprop.49]
0009c890 l     F .text	0000018d              ComputeSeparatingPlane(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, cplane_t*)
0020ccf0 l     F .text	0000010f              ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
000eb500 l     F .text	000001b1              COM_SetupLogDir(char const*)
00314080 l     O .bss	00000001              COM_SetupLogDir(char const*)::pathsetup
000eae50 l     F .text	00000005              COM_Shutdown()
000eae40 l     F .text	00000005              COM_ShutdownFileSystem()
000eae60 l     F .text	00000046              COM_StringCopy(char const*)
000eaeb0 l     F .text	00000012              COM_StringFree(char const*)
0030fa40 l     O .bss	00000400              com_token
000ea5a0 l     F .text	0000005c              COM_TokenWaiting(char const*)
000ea840 l     F .text	000000d7              COM_WriteFile(char const*, void*, int)
002060d0 l     F .text	0000018a              ConcatRotations(float const (*) [3], float const (*) [3], float (*) [3])
00206260 l     F .text	000000d1              ConcatTransforms_Aligned(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
00206340 l     F .text	000000d1              ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
000dd900 l     F .text	00000048              Con_ColorPrintf(Color const&, char const*, ...)
001e19f0 l     F .text	000000f1              ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
001dff40 l     F .text	0000000e              ConCommandBase::AddFlags(int)
001dfe50 l     F .text	0000000e              ConCommandBase::~ConCommandBase()
001dfe50 l     F .text	0000000e              ConCommandBase::~ConCommandBase()
001e0120 l     F .text	00000012              ConCommandBase::~ConCommandBase()
001e0830 l     F .text	0000002e              ConCommandBase::ConCommandBase()
001e0830 l     F .text	0000002e              ConCommandBase::ConCommandBase()
001e0860 l     F .text	00000012              ConCommandBase::ConCommandBase(char const*, char const*, int)
001e0860 l     F .text	00000012              ConCommandBase::ConCommandBase(char const*, char const*, int)
001e08c0 l     F .text	00000070              ConCommandBase::CopyString(char const*)
001dfe80 l     F .text	00000064              ConCommandBase::CreateBase(char const*, char const*, int)
001dfe70 l     F .text	0000000a              ConCommandBase::GetDLLIdentifier() const
001dff50 l     F .text	0000000b              ConCommandBase::GetHelpText() const
001dff10 l     F .text	0000000b              ConCommandBase::GetName() const
001e08b0 l     F .text	0000000b              ConCommandBase::GetNext()
001e08a0 l     F .text	0000000b              ConCommandBase::GetNext() const
001dfef0 l     F .text	0000001f              ConCommandBase::Init()
001dfe60 l     F .text	0000000a              ConCommandBase::IsCommand() const
001dff20 l     F .text	00000011              ConCommandBase::IsFlagSet(int) const
001dff60 l     F .text	0000000c              ConCommandBase::IsRegistered() const
000ec670 l     F .text	00000062              ConCommandBaseLessFunc(ConCommandBase const* const&, ConCommandBase const* const&)
001e0880 l     F .text	00000020              ConCommandBase::Shutdown()
0037b320 l     O .bss	00000004              ConCommandBase::s_pAccessor
0037b330 l     O .bss	00000004              ConCommandBase::s_pConCommandBases
001dffa0 l     F .text	0000000f              ConCommand::CanAutoComplete()
001dff80 l     F .text	0000000e              ConCommand::~ConCommand()
001dff80 l     F .text	0000000e              ConCommand::~ConCommand()
001e0100 l     F .text	00000012              ConCommand::~ConCommand()
001e0f00 l     F .text	00000081              ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
001e0f00 l     F .text	00000081              ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
001e0e70 l     F .text	00000089              ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
001e0e70 l     F .text	00000089              ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
001e0de0 l     F .text	00000086              ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
001e0de0 l     F .text	00000086              ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
001e05a0 l     F .text	00000052              ConCommand::Dispatch(CCommand const&)
001dff90 l     F .text	0000000a              ConCommand::IsCommand() const
00314292 l     O .bss	00000001              con_debuglog
000ec0e0 l     F .text	00000231              Con_DebugLog(char const*, ...)
002c6cd0 l     O .data	00000001              Con_DebugLog(char const*, ...)::needTimestamp
00314290 l     O .bss	00000001              con_debuglogmapprefixed
000ec450 l     F .text	00000055              Con_DPrintf(char const*, ...)
00234560 l     O .rodata	00000050              configuration_table
0025cb00 l     O .rodata	00000078              configuration_table
000ec050 l     F .text	00000060              Con_Init()
00314291 l     O .bss	00000001              con_initialized
00314240 l     O .bss	00000048              con_logfile
0014cf90 l     F .text	0000001d              ConnectMDLCacheNotify()
001f2a00 l     F .text	00000091              ConnectTier1Libraries(void* (**)(char const*, int*), int)
0021c520 l     F .text	0000021b              ConnectTier2Libraries(void* (**)(char const*, int*), int)
0021d0d0 l     F .text	00000300              ConnectTier3Libraries(void* (**)(char const*, int*), int)
000dd950 l     F .text	0000002f              Con_NPrintf(int, char const*, ...)
000ec380 l     F .text	00000042              Con_Print(char const*)
000ec3d0 l     F .text	00000078              Con_Printf(char const*, ...)
000ec4b0 l     F .text	00000055              Con_SafePrintf(char const*, ...)
000ec0b0 l     F .text	0000000c              Con_Shutdown()
000ec510 l     F .text	0000014b              ConsoleLogFileCallback(IConVar*, char const*, float)
00377be4 l     O .bss	00000004              ConsoleLogger::m_index
000ebe70 l     F .text	00000032              ConsoleLogManager::CloseFileIfOpen()
000ebde0 l     F .text	00000005              ConsoleLogManager::~ConsoleLogManager()
000ebde0 l     F .text	00000005              ConsoleLogManager::~ConsoleLogManager()
000ebe60 l     F .text	0000000e              ConsoleLogManager::ConsoleLogManager()
000ebe60 l     F .text	0000000e              ConsoleLogManager::ConsoleLogManager()
000ebf10 l     F .text	00000056              ConsoleLogManager::GetConsoleLogFileHandleForAppend()
000ebeb0 l     F .text	0000005a              ConsoleLogManager::GetConsoleLogFilename() const
000ebf70 l     F .text	00000077              ConsoleLogManager::ReadConsoleLogFile(CUtlBuffer&)
000ebff0 l     F .text	0000005c              ConsoleLogManager::RemoveConsoleLogFile()
00000000       F *UND*	00000000              CThreadLocalBase::Get() const
00000000       F *UND*	00000000              CVProfile::GetCounterGroup(int) const
00000000       F *UND*	00000000              CVProfile::GetCounterName(int) const
00000000       F *UND*	00000000              CVProfile::GetCounterValue(int) const
00000000       F *UND*	00000000              CVProfile::GetNumCounters() const
00000000       F *UND*	00000000              ConMsg(char const*, ...)
00000000       F *UND*	00000000              ConWarning(char const*, ...)
00000000       F *UND*	00000000              DevMsg(char const*, ...)
00000000       F *UND*	00000000              DevWarning(char const*, ...)
00000000       F *UND*	00000000              CThread::SetName(char const*)
00000000       F *UND*	00000000              CVProfile::BudgetGroupNameToBudgetGroupID(char const*)
00000000       F *UND*	00000000              CVProfile::FindBudgetGroupName(char const*)
00000000       F *UND*	00000000              ConColorMsg(Color const&, char const*, ...)
00000000       F *UND*	00000000              CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
00000000       F *UND*	00000000              CVProfile::AddBudgetGroupName(char const*, int)
00000000       F *UND*	00000000              CVProfNode::GetSubNode(char const*, int, char const*, int)
003142c0 l     O .bss	00000048              con_timestamp
001dfff0 l     F .text	00000011              ConVar::AddFlags(int)
001e04b0 l     F .text	000000f0              ConVar::ChangeStringValue(char const*, float)
001e0600 l     F .text	00000036              ConVar::ClampValue(float&)
001e0450 l     F .text	00000039              ConVar::~ConVar()
001e0450 l     F .text	00000039              ConVar::~ConVar()
001e0490 l     F .text	0000001f              ConVar::~ConVar()
001e0f90 l     F .text	00000098              ConVar::ConVar(char const*, char const*, int)
001e0f90 l     F .text	00000098              ConVar::ConVar(char const*, char const*, int)
001e1030 l     F .text	00000097              ConVar::ConVar(char const*, char const*, int, char const*)
001e1030 l     F .text	00000097              ConVar::ConVar(char const*, char const*, int, char const*)
001e10d0 l     F .text	00000095              ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
001e10d0 l     F .text	00000095              ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
001e1210 l     F .text	00000094              ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
001e1210 l     F .text	00000094              ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
001e1170 l     F .text	00000096              ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
001e1170 l     F .text	00000096              ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
001e0350 l     F .text	000000fa              ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
001e1350 l     F .text	0000000e              ConVar::GetDefault() const
001dffe0 l     F .text	0000000e              ConVar::GetHelpText() const
001e1330 l     F .text	0000001a              ConVar::GetMax(float&) const
001e1310 l     F .text	0000001a              ConVar::GetMin(float&) const
001e0030 l     F .text	0000000e              ConVar::GetName() const
001e0050 l     F .text	0000001f              ConVar::Init()
001e12b0 l     F .text	00000034              ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float))
001e0140 l     F .text	000000e9              ConVar::InternalSetFloatValue(float)
001e0640 l     F .text	000000e2              ConVar::InternalSetIntValue(int)
001e0230 l     F .text	0000011a              ConVar::InternalSetValue(char const*)
001e0040 l     F .text	00000007              ConVar::IsCommand() const
001dffc0 l     F .text	00000014              ConVar::IsFlagSet(int) const
001e0010 l     F .text	0000000f              ConVar::IsRegistered() const
000ed280 l     F .text	0000022b              ConVarNetworkChangeCallback(IConVar*, char const*, float)
001e16f0 l     F .text	000002f4              ConVar_PrintDescription(ConCommandBase const*)
001e14c0 l     F .text	00000226              ConVar_PrintFlags(ConCommandBase const*)
001e1450 l     F .text	00000022              ConVarRef::ConVarRef(char const*)
001e1450 l     F .text	00000022              ConVarRef::ConVarRef(char const*)
001e1440 l     F .text	00000010              ConVarRef::ConVarRef(char const*, bool)
001e1440 l     F .text	00000010              ConVarRef::ConVarRef(char const*, bool)
001e1480 l     F .text	0000001d              ConVarRef::ConVarRef(IConVar*)
001e1480 l     F .text	0000001d              ConVarRef::ConVarRef(IConVar*)
001e1380 l     F .text	000000b3              ConVarRef::Init(char const*, bool)
002c7a48 l     O .data	00000001              ConVarRef::Init(char const*, bool)::bFirst
001e14a0 l     F .text	00000011              ConVarRef::IsValid() const
001e0730 l     F .text	000000ac              ConVar_Register(int, IConCommandBaseAccessor*)
001e12f0 l     F .text	0000001d              ConVar::Revert()
001e1360 l     F .text	00000018              ConVar::SetDefault(char const*)
001e0080 l     F .text	00000014              ConVar::SetValue(char const*)
001e00b0 l     F .text	00000014              ConVar::SetValue(float)
001e00e0 l     F .text	00000014              ConVar::SetValue(int)
001e07e0 l     F .text	00000045              ConVar_Unregister()
00318c00 l     O .bss	00000048              coop
000bcf10 l     F .text	000001af              copy_block(TState&, char*, unsigned int, int)
0010c910 l     F .text	000001a1              CopySendPropsToRecvProps(CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >&, CUtlVector<SendProp const*, CUtlMemory<SendProp const*, int> > const&, CUtlVector<RecvProp const*, CUtlMemory<RecvProp const*, int> >&) [clone .constprop.107]
00174030 l     F .text	00000182              COverlayMgr::AddFragmentListToRenderList(int, unsigned short, bool)
00175f90 l     F .text	0000006d              COverlayMgr::AddFragmentToFragmentList(int)
00175eb0 l     F .text	0000006a              COverlayMgr::AddFragmentToFragmentList(moverlayfragment_t*)
001769d0 l     F .text	00000298              COverlayMgr::BuildClipPlanes(msurface2_t*, moverlayfragment_t&, Vector const&, CUtlVector<cplane_t, CUtlMemory<cplane_t, int> >&)
00175c30 l     F .text	0000006e              COverlayMgr::CleanupMaterial(unsigned short)
00173ce0 l     F .text	0000006f              COverlayMgr::ClearRenderLists()
00173c30 l     F .text	0000006e              COverlayMgr::ClearRenderLists(int)
00175e40 l     F .text	0000006a              COverlayMgr::CopyTempFragment(moverlayfragment_t*)
00177be0 l     F .text	000000e1              COverlayMgr::~COverlayMgr()
00177be0 l     F .text	000000e1              COverlayMgr::~COverlayMgr()
00173d60 l     F .text	00000114              COverlayMgr::COverlayMgr()
00173d60 l     F .text	00000114              COverlayMgr::COverlayMgr()
001775f0 l     F .text	0000041d              COverlayMgr::CreateFragments()
00175f20 l     F .text	00000066              COverlayMgr::CreateTempFragment(int)
00175ca0 l     F .text	00000052              COverlayMgr::DestroyTempFragment(moverlayfragment_t*)
00176870 l     F .text	00000154              COverlayMgr::Disp_ClipFragment(CDispInfo*, CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >&)
00177240 l     F .text	000000ee              COverlayMgr::Disp_CreateFragments(moverlay_t*, msurface2_t*)
00176600 l     F .text	0000026f              COverlayMgr::Disp_DoClip(CDispInfo*, CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >&, cplane_t&, float, int, int, int, int)
001741d0 l     F .text	00000005              COverlayMgr::Disp_PostClipFragment(CDispInfo*, CMeshReader*, moverlay_t*, CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >&, msurface2_t*)
00176e70 l     F .text	000003c7              COverlayMgr::Disp_PreClipFragment(moverlay_t*, CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >&, msurface2_t*)
001760f0 l     F .text	00000508              COverlayMgr::DoClipFragment(moverlayfragment_t*, cplane_t*, moverlayfragment_t**, moverlayfragment_t**)
00173e80 l     F .text	000000cc              COverlayMgr::FadeOverlayFragmentGlobal(moverlayfragment_t*)
00173f50 l     F .text	000000df              COverlayMgr::FadeOverlayFragment(moverlay_t*, moverlayfragment_t*)
00175d00 l     F .text	0000013b              COverlayMgr::GetMaterialSortID(IMaterial*, int)
001741e0 l     F .text	0000008e              COverlayMgr::InitTexCoords(moverlay_t*, moverlayfragment_t&)
00177cd0 l     F .text	00000b20              COverlayMgr::LoadOverlays()
00173ca0 l     F .text	00000005              COverlayMgr::RenderOverlays(int)
00173cd0 l     F .text	00000005              COverlayMgr::ReSortMaterials()
00173cb0 l     F .text	0000001f              COverlayMgr::SetOverlayBindProxy(int, void*)
00176c70 l     F .text	000001f3              COverlayMgr::Surf_ClipFragment(moverlay_t*, moverlayfragment_t&, msurface2_t*, moverlayfragment_t&)
00177330 l     F .text	000002bb              COverlayMgr::Surf_CreateFragments(moverlay_t*, msurface2_t*)
001741c0 l     F .text	00000005              COverlayMgr::Surf_PostClipFragment(moverlay_t*, moverlayfragment_t&, msurface2_t*)
00176000 l     F .text	000000e4              COverlayMgr::Surf_PreClipFragment(moverlay_t*, moverlayfragment_t&, msurface2_t*, moverlayfragment_t&)
00177a10 l     F .text	000001c1              COverlayMgr::UnloadOverlays()
001b2100 l     F .text	00000160              CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::DoExecute()
00357690 l     O .bss	0000000c              CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::DoExecute()::tm_fmt
001b22a0 l     F .text	00000912              CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::Run(CGameClient**, unsigned int, int, IThreadPool*)
00357684 l     O .bss	0000000c              CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::Run(CGameClient**, unsigned int, int, IThreadPool*)::tm_fmt
001b4e20 l     F .text	00000160              CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::DoExecute()
003577f4 l     O .bss	0000000c              CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::DoExecute()::tm_fmt
001b4ff0 l     F .text	00000912              CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::Run(PackWork_t*, unsigned int, int, IThreadPool*)
003577e8 l     O .bss	0000000c              CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::Run(PackWork_t*, unsigned int, int, IThreadPool*)::tm_fmt
00233c60 l     O .rodata	00000078              cpdext
00233be0 l     O .rodata	00000078              cpdist
00135230 l     F .text	000001cb              CPhoneHome::Init()
00135400 l     F .text	000000a3              CPhoneHome::IsExternalBuild()
00136040 l     F .text	000000d4              CPhoneHome::Message(unsigned char, char const*)
00135a90 l     F .text	000005ae              CPhoneHome::RequestSessionId(unsigned int&)
001354b0 l     F .text	000005da              CPhoneHome::SendSessionMessage(unsigned char, char const*)
00135200 l     F .text	00000026              CPhoneHome::Shutdown()
000acee0 l     F .text	000000a7              CPhonemeTag::ComputeDataCheckSum()
000acd80 l     F .text	00000022              CPhonemeTag::~CPhonemeTag()
000acd80 l     F .text	00000022              CPhonemeTag::~CPhonemeTag()
000acd50 l     F .text	0000002e              CPhonemeTag::CPhonemeTag()
000acd50 l     F .text	0000002e              CPhonemeTag::CPhonemeTag()
000ace20 l     F .text	00000032              CPhonemeTag::CPhonemeTag(char const*)
000ace20 l     F .text	00000032              CPhonemeTag::CPhonemeTag(char const*)
000ace60 l     F .text	00000059              CPhonemeTag::CPhonemeTag(CPhonemeTag const&)
000ace60 l     F .text	00000059              CPhonemeTag::CPhonemeTag(CPhonemeTag const&)
000acb80 l     F .text	0000000b              CPhonemeTag::GetEndByte() const
000acb40 l     F .text	0000000c              CPhonemeTag::GetSelected() const
000acb70 l     F .text	0000000b              CPhonemeTag::GetStartByte() const
000acec0 l     F .text	00000015              CPhonemeTag::GetTag() const
000acb30 l     F .text	0000000e              CPhonemeTag::SetSelected(bool)
000acb50 l     F .text	00000014              CPhonemeTag::SetStartAndEndBytes(unsigned int, unsigned int)
000acdb0 l     F .text	00000063              CPhonemeTag::SetTag(char const*)
00233ae0 l     O .rodata	0000007c              cplens
00233b60 l     O .rodata	0000007c              cplext
001b5c80 l     F .text	00000052              CPlugin::~CPlugin()
001b5c80 l     F .text	00000052              CPlugin::~CPlugin()
001b5bf0 l     F .text	00000026              CPlugin::CPlugin()
001b5bf0 l     F .text	00000026              CPlugin::CPlugin()
001b6800 l     F .text	00000045              CPlugin::Disable(bool)
001b5f40 l     F .text	0000002d              CPlugin::GetCallback()
001b5f30 l     F .text	00000008              CPlugin::GetName()
001b5d10 l     F .text	0000021f              CPlugin::Load(char const*)
001b5ce0 l     F .text	00000022              CPlugin::SetName(char const*)
001b5c20 l     F .text	00000054              CPlugin::Unload()
00116390 l     F .text	00000218              CPointContentsEnum::EnumElement(IHandleEntity*)
00138630 l     F .text	00000086              CPooledVBAllocator_ColorMesh::Allocate(int)
0013bbd0 l     F .text	0000003c              CPooledVBAllocator_ColorMesh::CheckIsClear()
00138890 l     F .text	000000f7              CPooledVBAllocator_ColorMesh::Clear()
0013bc10 l     F .text	0000003a              CPooledVBAllocator_ColorMesh::~CPooledVBAllocator_ColorMesh()
0013bc10 l     F .text	0000003a              CPooledVBAllocator_ColorMesh::~CPooledVBAllocator_ColorMesh()
0013bc50 l     F .text	0000001f              CPooledVBAllocator_ColorMesh::~CPooledVBAllocator_ColorMesh()
0013bb90 l     F .text	00000033              CPooledVBAllocator_ColorMesh::CPooledVBAllocator_ColorMesh()
0013bb90 l     F .text	00000033              CPooledVBAllocator_ColorMesh::CPooledVBAllocator_ColorMesh()
001386c0 l     F .text	000000a1              CPooledVBAllocator_ColorMesh::Deallocate(int, int)
0013c6a0 l     F .text	0000000b              CPooledVBAllocator_ColorMesh::GetNumVertsAllocated()
0013c680 l     F .text	0000000b              CPooledVBAllocator_ColorMesh::GetSharedMesh()
0013c690 l     F .text	0000000b              CPooledVBAllocator_ColorMesh::GetVertexBufferBase()
0013bc70 l     F .text	00000511              CPooledVBAllocator_ColorMesh::Init(unsigned long long, int)
000a69f0 l     F .text	0000002b              CPowerInfo::CPowerInfo(CVertInfo*, CFourVerts*, CFourVerts*, CFourVerts*, CTwoUShorts*, CTriInfo*)
000a69f0 l     F .text	0000002b              CPowerInfo::CPowerInfo(CVertInfo*, CFourVerts*, CFourVerts*, CFourVerts*, CTwoUShorts*, CTriInfo*)
000a6d40 l     F .text	00000015              CPowerInfo::GetCornerPointIndex(int) const
00179f30 l     F .text	00000015              CPrecacheItem::CPrecacheItem()
00179f30 l     F .text	00000015              CPrecacheItem::CPrecacheItem()
0017a070 l     F .text	00000026              CPrecacheItem::GetDecal()
0017a140 l     F .text	00000007              CPrecacheItem::GetFirstReference()
00179fe0 l     F .text	00000026              CPrecacheItem::GetGeneric()
00179fb0 l     F .text	00000026              CPrecacheItem::GetModel()
0017a150 l     F .text	00000007              CPrecacheItem::GetMostRecentReference()
0017a040 l     F .text	00000026              CPrecacheItem::GetName()
0017a160 l     F .text	0000000d              CPrecacheItem::GetReferenceCount()
0017a010 l     F .text	00000026              CPrecacheItem::GetSound()
00179f80 l     F .text	00000027              CPrecacheItem::Init(int, void const*)
00179f60 l     F .text	0000001d              CPrecacheItem::Reference()
00179f50 l     F .text	0000000b              CPrecacheItem::ResetStats()
0017a120 l     F .text	00000020              CPrecacheItem::SetDecal(char const*)
0017a0c0 l     F .text	00000020              CPrecacheItem::SetGeneric(char const*)
0017a0a0 l     F .text	00000020              CPrecacheItem::SetModel(model_t const*)
0017a100 l     F .text	00000020              CPrecacheItem::SetName(char const*)
0017a0e0 l     F .text	00000020              CPrecacheItem::SetSound(CSfxTable const*)
001118b0 l     F .text	00000143              CPropCullStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
00108660 l     F .text	000000de              CPropMapStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
0017ebf0 l     F .text	000005a7              CPureFileTracker::AddUserReportedFileHash(int, FileHash_t*, USERID_s, bool)
001816c0 l     F .text	00000075              CPureFileTracker::~CPureFileTracker()
001816c0 l     F .text	00000075              CPureFileTracker::~CPureFileTracker()
0017cc30 l     F .text	0000000a              CPureFileTracker::DoesFileMatch(char const*, char const*, int, FileHash_t*, USERID_s)
0017cc40 l     F .text	0000019e              CPureFileTracker::ListAllTrackedFiles(bool, char const*, int, int)
0017d0a0 l     F .text	00000a19              CPureFileTracker::ListUserFiles(bool, char const*)
0017f460 l     F .text	0000018d              CPureServerWhitelist::AddFileCommand(char const*, EPureServerFileClass, unsigned short)
0017f5f0 l     F .text	00000070              CPureServerWhitelist::AddHardcodedFileCommands()
0017c710 l     F .text	0000000d              CPureServerWhitelist::AddRef()
0017ca20 l     F .text	00000005              CPureServerWhitelist::CacheFileCRCs()
0017c7d0 l     F .text	00000005              CPureServerWhitelist::CCommand::~CCommand()
0017c7d0 l     F .text	00000005              CPureServerWhitelist::CCommand::~CCommand()
0017c7c0 l     F .text	00000005              CPureServerWhitelist::CCommand::CCommand()
0017c7c0 l     F .text	00000005              CPureServerWhitelist::CCommand::CCommand()
0017ceb0 l     F .text	0000004e              CPureServerWhitelist::CheckEntry(CUtlDict<CPureServerWhitelist::CCommand*, int>&, char const*, CPureServerWhitelist::CCommand*)
0017e540 l     F .text	00000223              CPureServerWhitelist::CommandDictDifferent(CUtlDict<CPureServerWhitelist::CCommand*, int> const&, CUtlDict<CPureServerWhitelist::CCommand*, int> const&)
0017e990 l     F .text	00000064              CPureServerWhitelist::~CPureServerWhitelist()
0017e990 l     F .text	00000064              CPureServerWhitelist::~CPureServerWhitelist()
0017cde0 l     F .text	000000c2              CPureServerWhitelist::CPureServerWhitelist()
0017cde0 l     F .text	000000c2              CPureServerWhitelist::CPureServerWhitelist()
0017e950 l     F .text	00000033              CPureServerWhitelist::Create(IFileSystem*)
0017f1a0 l     F .text	000002b4              CPureServerWhitelist::DecodeCommandList(CUtlDict<CPureServerWhitelist::CCommand*, int>&, CUtlBuffer&, unsigned int)
0017fd60 l     F .text	000003de              CPureServerWhitelist::Decode(CUtlBuffer&)
0017dac0 l     F .text	00000419              CPureServerWhitelist::EncodeCommandList(CUtlDict<CPureServerWhitelist::CCommand*, int>&, CUtlBuffer&)
0017dee0 l     F .text	0000026b              CPureServerWhitelist::Encode(CUtlBuffer&)
0017e150 l     F .text	00000124              CPureServerWhitelist::FindCommandByLoadOrder(CUtlDict<CPureServerWhitelist::CCommand*, int>&, int)
0017cf00 l     F .text	00000168              CPureServerWhitelist::GetBestEntry(char const*)
0017d070 l     F .text	00000024              CPureServerWhitelist::GetFileClass(char const*)
0017c6c0 l     F .text	0000000e              CPureServerWhitelist::GetTrustedKeyCount() const
0017c6d0 l     F .text	00000040              CPureServerWhitelist::GetTrustedKey(int, int*) const
0017e930 l     F .text	0000001e              CPureServerWhitelist::Init(IFileSystem*)
0017ca30 l     F .text	00000005              CPureServerWhitelist::InternalCacheFileCRCs(CUtlDict<CPureServerWhitelist::CCommand*, int>&, ECacheCRCType)
0017f660 l     F .text	00000377              CPureServerWhitelist::LoadCommandsFromKeyValues(KeyValues*)
0017f9e0 l     F .text	00000378              CPureServerWhitelist::Load(int)
0017ea40 l     F .text	000001ad              CPureServerWhitelist::LoadTrustedKeysFromKeyValues(KeyValues*)
0017e770 l     F .text	00000155              CPureServerWhitelist::operator==(CPureServerWhitelist const&) const
0017c830 l     F .text	000001e7              CPureServerWhitelist::PrintCommand(char const*, char const*, int, CPureServerWhitelist::CCommand*)
0017e3c0 l     F .text	0000017f              CPureServerWhitelist::PrintWhitelistContents()
0017ea00 l     F .text	00000039              CPureServerWhitelist::Release()
0017e8d0 l     F .text	0000005c              CPureServerWhitelist::Term()
0017e280 l     F .text	0000013c              CPureServerWhitelist::UpdateCommandStats(CUtlDict<CPureServerWhitelist::CCommand*, int>&, int*, int*)
0016ed10 l     F .text	0000010f              CQueuedPacketSender::ClearQueuedPacketsForChannel(INetChannel*)
0016ef80 l     F .text	00000016              CQueuedPacketSender::CQueuedPacket::LessFunc(CQueuedPacketSender::CQueuedPacket* const&, CQueuedPacketSender::CQueuedPacket* const&)
0016ea30 l     F .text	000000e4              CQueuedPacketSender::~CQueuedPacketSender()
0016ea30 l     F .text	000000e4              CQueuedPacketSender::~CQueuedPacketSender()
0016eb20 l     F .text	0000001f              CQueuedPacketSender::~CQueuedPacketSender()
0016e7f0 l     F .text	00000128              CQueuedPacketSender::CQueuedPacketSender()
0016e7f0 l     F .text	00000128              CQueuedPacketSender::CQueuedPacketSender()
0016e770 l     F .text	00000077              CQueuedPacketSender::HasQueuedPackets(INetChannel const*) const
0016efb0 l     F .text	00000009              CQueuedPacketSender::IsRunning()
0016ee30 l     F .text	00000142              CQueuedPacketSender::QueuePacket(INetChannel*, int, char const*, int, sockaddr const*, int, unsigned int)
002c7630 l     O .data	00000004              CQueuedPacketSender::QueuePacket(INetChannel*, int, char const*, int, sockaddr const*, int, unsigned int)::nWarnings
0016eb40 l     F .text	000001bd              CQueuedPacketSender::Run()
0016e700 l     F .text	0000001b              CQueuedPacketSender::Setup()
0016e930 l     F .text	000000f2              CQueuedPacketSender::Shutdown()
0016e720 l     F .text	0000003b              CQueuedPacketSender::Start(unsigned int)
00223f60 g     F .text	000002c4              crc32
00224230 g     F .text	00000020              crc32_combine
00223d90 l     F .text	000001b9              crc32_combine_
00224250 g     F .text	0000001f              crc32_combine64
001de180 l     F .text	0000000a              CRC32_Final(unsigned int*)
001de190 l     F .text	00000010              CRC32_GetTableEntry(unsigned int)
001de170 l     F .text	0000000e              CRC32_Init(unsigned int*)
001de1a0 l     F .text	00000209              CRC32_ProcessBuffer(unsigned int*, void const*, int)
000bec70 l     F .text	00000142              crc32(unsigned long, unsigned char const*, unsigned int)
000dbfd0 l     F .text	00000194              CRC_File(unsigned int*, char const*)
000dc170 l     F .text	0000025e              CRC_MapFile(unsigned int*, char const*)
001b8320 l     F .text	0000006a              CRConServer::BCloseAcceptedSocket(unsigned int)
001b80a0 l     F .text	00000062              CRConServer::ConnectToListeningClient(netadr_s const&, bool)
001b8b70 l     F .text	000000b0              CRConServer::~CRConServer()
001b8b70 l     F .text	000000b0              CRConServer::~CRConServer()
001b8ab0 l     F .text	000000b9              CRConServer::CRConServer()
001b8ab0 l     F .text	000000b9              CRConServer::CRConServer()
001b89e0 l     F .text	000000c8              CRConServer::CRConServer(char const*)
001b89e0 l     F .text	000000c8              CRConServer::CRConServer(char const*)
001b8250 l     F .text	0000001d              CRConServer::CreateSocket()
001b82d0 l     F .text	00000044              CRConServer::FailedRCon_t::operator<(CRConServer::FailedRCon_t const&) const
001b85d0 l     F .text	00000408              CRConServer::FinishRedirect(char const*, netadr_s const&)
001b8c20 l     F .text	00000387              CRConServer::HandleFailedRconAuth(netadr_s const&)
001b8190 l     F .text	00000017              CRConServer::HasPassword() const
001b8110 l     F .text	0000000d              CRConServer::IsConnected()
001b81b0 l     F .text	00000041              CRConServer::IsPassword(char const*) const
001b7fa0 l     F .text	000000c1              CRConServer::OnSocketAccepted(int, netadr_s const&, void**)
001b8390 l     F .text	00000046              CRConServer::OnSocketClosed(int, netadr_s const&, void*)
001b8fb0 l     F .text	00000855              CRConServer::RunFrame()
001b83e0 l     F .text	000001e1              CRConServer::SendRCONResponse(int, void const*, int, bool)
001b8200 l     F .text	00000044              CRConServer::SetAddress(char const*)
001b8120 l     F .text	00000034              CRConServer::SetPassword(char const*)
001b8270 l     F .text	00000058              CRConServer::SetRequestID(unsigned int, int)
001b8070 l     F .text	00000016              CRConServer::ShouldAcceptSocket(int, netadr_s const&)
00233ce0 l     O .rodata	00000400              crc_table
002345c0 l     O .rodata	00000400              crc_table
0025aaa0 l     O .rodata	00002000              crc_table
0008e4e0 l     F .text	00000025              CreateBSPTreeData()
001c9f50 l     F .text	0000000a              __CreateCClientEngineToolsIClientEngineTools_interface()
000ec660 l     F .text	0000000a              __CreateCCvarQueryICvarQuery_interface()
001c4560 l     F .text	0000000a              __CreateCDedicatedServerAPIIDedicatedServerAPI_interface()
00116710 l     F .text	0000000a              __CreateCEngineReplayIEngineReplay_interface()
00112150 l     F .text	0000000a              __CreateCEngineSoundServerIEngineSound_interface()
00113460 l     F .text	0000000a              __CreateCEngineTraceServerIEngineTrace_interface()
0018a230 l     F .text	0000000a              __CreateCEngineUniformRandomStreamIUniformRandomStream_interface()
00116f90 l     F .text	0000000a              __CreateCGameEventManagerIGameEventManager2_interface()
00119d50 l     F .text	0000000a              __CreateCGameEventManagerOldIGameEventManager_interface()
00145920 l     F .text	0000000a              __CreateCModelInfoServerIVModelInfo003_interface()
00145930 l     F .text	0000000a              __CreateCModelInfoServerIVModelInfo_interface()
001381f0 l     F .text	0000000a              __CreateCModelRenderIVModelRender_interface()
0015d910 l     F .text	0000000a              __CreateCNetworkStringTableContainerINetworkStringTableContainer_interface()
0015df70 l     F .text	0000000a              __CreateCNetworkStringTableContainerServerINetworkStringTableContainer_interface()
001c9fc0 l     F .text	0000000a              __CreateCServerEngineToolsIServerEngineTools_interface()
001b5910 l     F .text	0000000a              __CreateCServerPluginIServerPluginHelpers_interface()
001ba630 l     F .text	0000000a              __CreateCServerRemoteAccessIGameServerData_interface()
0018fe90 l     F .text	0000000a              __CreateCSpatialPartitionISpatialPartition_interface()
00197c90 l     F .text	0000000a              __CreateCStaticPropMgrIStaticPropMgrClient_interface()
00197ca0 l     F .text	0000000a              __CreateCStaticPropMgrIStaticPropMgrServer_interface()
001c9f40 l     F .text	0000000a              __CreateCToolFrameworkInternalIToolFrameworkInternal_interface()
001c01b0 l     F .text	0000000a              __CreateCUploadGameStatsIUploadGameStats_interface()
001cb960 l     F .text	0000000a              __CreateCVEngineServerIVEngineServer021_interface()
001cb970 l     F .text	0000000a              __CreateCVEngineServerIVEngineServer022_interface()
001cb980 l     F .text	0000000a              __CreateCVEngineServerIVEngineServer_interface()
001ceea0 l     F .text	0000000a              __CreateCVoiceServerIVoiceServer_interface()
001cf070 l     F .text	0000000a              __CreateCVProfExportIVProfExport_interface()
000dfdc0 l     F .text	000000ed              CreateExecutionMarker()
001e4920 g     F .text	00000009              CreateInterface
001e4880 l     F .text	00000064              CreateInterfaceInternal(char const*, int*)
00195f70 l     F .text	00000054              CreateSpatialPartition(Vector const&, Vector const&)
001ab390 l     F .text	0000025b              CreateTempFilename(TempFilename_t&, char const*, char const*, bool)
000c01b0 l     F .text	000000c7              CreateZipZ(void*, unsigned int, unsigned int)
0010a0f0 l     F .text	0000008c              CRecvDecoder::CRecvDecoder()
0010a0f0 l     F .text	0000008c              CRecvDecoder::CRecvDecoder()
0013c8c0 l     F .text	0000000d              CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::AddRef()
0013c6f0 l     F .text	00000015              CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::~CRefCounted1()
0013c6f0 l     F .text	00000015              CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::~CRefCounted1()
0013c7a0 l     F .text	00000019              CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::~CRefCounted1()
0013c850 l     F .text	00000061              CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::Release()
0013c6b0 l     F .text	0000000e              CRefCountServiceBase<true, CRefMT>::~CRefCountServiceBase()
0013c6b0 l     F .text	0000000e              CRefCountServiceBase<true, CRefMT>::~CRefCountServiceBase()
0013c7c0 l     F .text	00000012              CRefCountServiceBase<true, CRefMT>::~CRefCountServiceBase()
0013c780 l     F .text	0000000a              CRefCountServiceBase<true, CRefMT>::OnFinalRelease()
000ac770 l     F .text	0000000e              CRegistry::~CRegistry()
000ac770 l     F .text	0000000e              CRegistry::~CRegistry()
000ac840 l     F .text	00000012              CRegistry::~CRegistry()
000acad0 l     F .text	00000012              CRegistry::CRegistry()
000acad0 l     F .text	00000012              CRegistry::CRegistry()
000ac7c0 l     F .text	0000000a              CRegistry::DirectInit(char const*)
000ac7f0 l     F .text	0000004d              CRegistry::Init(char const*)
000ac9e0 l     F .text	0000007d              CRegistry::ReadInt(char const*, char const*, int)
000ac780 l     F .text	00000007              CRegistry::ReadInt(char const*, int)
000ac7a0 l     F .text	00000007              CRegistry::ReadString(char const*, char const*)
000ac8e0 l     F .text	0000007d              CRegistry::ReadString(char const*, char const*, char const*)
000ac7d0 l     F .text	00000012              CRegistry::Shutdown()
000ac960 l     F .text	0000007d              CRegistry::WriteInt(char const*, char const*, int)
000ac790 l     F .text	00000005              CRegistry::WriteInt(char const*, int)
000ac7b0 l     F .text	00000005              CRegistry::WriteString(char const*, char const*)
000ac860 l     F .text	0000007d              CRegistry::WriteString(char const*, char const*, char const*)
0018bcd0 l     F .text	0000013a              CReplayDeltaEntityCache::AddDeltaBits(int, int, int, bf_write*)
0018bc10 l     F .text	00000009              CReplayDeltaEntityCache::~CReplayDeltaEntityCache()
0018bc10 l     F .text	00000009              CReplayDeltaEntityCache::~CReplayDeltaEntityCache()
0018bb30 l     F .text	0000008d              CReplayDeltaEntityCache::CReplayDeltaEntityCache()
0018bb30 l     F .text	0000008d              CReplayDeltaEntityCache::CReplayDeltaEntityCache()
0018bc70 l     F .text	00000056              CReplayDeltaEntityCache::FindDeltaBits(int, int, int&)
0018bbc0 l     F .text	0000004d              CReplayDeltaEntityCache::Flush()
0018bc20 l     F .text	0000004b              CReplayDeltaEntityCache::SetTick(int, int)
0018a540 l     F .text	00000050              CReplayDemoRecorder::~CReplayDemoRecorder()
0018a540 l     F .text	00000050              CReplayDemoRecorder::~CReplayDemoRecorder()
0018a590 l     F .text	0000001f              CReplayDemoRecorder::~CReplayDemoRecorder()
0018a690 l     F .text	00000070              CReplayDemoRecorder::CReplayDemoRecorder(CReplayServer*)
0018a690 l     F .text	00000070              CReplayDemoRecorder::CReplayDemoRecorder(CReplayServer*)
0018a2c0 l     F .text	0000000b              CReplayDemoRecorder::GetDemoFile()
0018a7d0 l     F .text	00000047              CReplayDemoRecorder::GetDemoFilename()
003258c0 l     O .bss	00000104              CReplayDemoRecorder::GetDemoFilename()::s_szDemoFilename
0018ac40 l     F .text	00000027              CReplayDemoRecorder::GetRecordingFilename()
0018a2d0 l     F .text	00000013              CReplayDemoRecorder::GetRecordingTick()
0018a700 l     F .text	0000007b              CReplayDemoRecorder::GetUniqueDemoFilename(char*, int)
0018a2b0 l     F .text	0000000f              CReplayDemoRecorder::IsRecording()
0018b470 l     F .text	00000005              CReplayDemoRecorder::PauseRecording()
0018a380 l     F .text	00000092              CReplayDemoRecorder::RecordCommand(char const*)
0018a420 l     F .text	00000098              CReplayDemoRecorder::RecordMessages(bf_read&, int)
0018a9a0 l     F .text	00000046              CReplayDemoRecorder::RecordPacket()
0018a5b0 l     F .text	000000d9              CReplayDemoRecorder::RecordServerClasses(ServerClass*)
0018a2f0 l     F .text	00000084              CReplayDemoRecorder::RecordStringTables()
0018b490 l     F .text	00000005              CReplayDemoRecorder::RecordUserInput(int)
0018b4a0 l     F .text	00000005              CReplayDemoRecorder::ResetDemoInterpolation()
0018b480 l     F .text	00000005              CReplayDemoRecorder::ResumeRecording()
0018b460 l     F .text	00000005              CReplayDemoRecorder::SetSignonState(int)
0018a780 l     F .text	00000042              CReplayDemoRecorder::StartRecording()
0018b140 l     F .text	00000320              CReplayDemoRecorder::StartRecording(char const*, bool)
0018a4c0 l     F .text	00000078              CReplayDemoRecorder::StopRecording()
0018a9f0 l     F .text	0000024f              CReplayDemoRecorder::WriteFrame(CReplayFrame*)
0018a820 l     F .text	00000175              CReplayDemoRecorder::WriteMessages(unsigned char, bf_write&)
0018ac70 l     F .text	000001f9              CReplayDemoRecorder::WriteServerInfo()
0018ae70 l     F .text	000002ce              CReplayDemoRecorder::WriteSignonData()
0018c220 l     F .text	00000059              CReplayFrame::AllocBuffers()
0018c0d0 l     F .text	0000014f              CReplayFrame::CopyReplayData(CReplayFrame&)
0018c2f0 l     F .text	0000003b              CReplayFrame::~CReplayFrame()
0018c2f0 l     F .text	0000003b              CReplayFrame::~CReplayFrame()
0018c330 l     F .text	0000001f              CReplayFrame::~CReplayFrame()
0018c000 l     F .text	0000005e              CReplayFrame::CReplayFrame()
0018c000 l     F .text	0000005e              CReplayFrame::CReplayFrame()
0018c280 l     F .text	00000064              CReplayFrame::FreeBuffers()
0018c0a0 l     F .text	0000002f              CReplayFrame::HasData()
0018df90 l     F .text	00000007              CReplayFrame::IsMemPoolAllocated()
0018c060 l     F .text	00000031              CReplayFrame::Reset()
0018d020 l     F .text	000003bc              CReplayServer::AddNewFrame(CClientFrame*)
00325a24 l     O .bss	0000000c              CReplayServer::AddNewFrame(CClientFrame*)::tm_fmt
0018e010 l     F .text	00000005              CReplayServer::BroadcastEvent(IGameEvent*)
0018d880 l     F .text	00000061              CReplayServer::Changelevel()
0018c360 l     F .text	000000d0              CReplayServer::Clear()
0018b610 l     F .text	00000007              CReplayServer::ConnectClient(netadr_s&, int, int, int, int, char const*, char const*, char const*, int)
0018b690 l     F .text	00000007              CReplayServer::CreateFakeClient(char const*)
0018dc90 l     F .text	00000192              CReplayServer::~CReplayServer()
0018dc90 l     F .text	00000192              CReplayServer::~CReplayServer()
0018de60 l     F .text	0000001f              CReplayServer::~CReplayServer()
0018c430 l     F .text	000002b2              CReplayServer::CReplayServer()
0018c430 l     F .text	000002b2              CReplayServer::CReplayServer()
0018ce10 l     F .text	00000203              CReplayServer::EntityPVSCheck(CClientFrame*)
0018b7c0 l     F .text	0000003d              CReplayServer::FillServerInfo(SVC_ServerInfo&)
0018d480 l     F .text	000000f5              CReplayServer::FireGameEvent(IGameEvent*)
0018be10 l     F .text	000000c1              CReplayServer::FreeClientRecvTables()
0018b5b0 l     F .text	0000000b              CReplayServer::GetBaseServer()
0018d580 l     F .text	0000001c              CReplayServer::GetBuffer(int)
0018b5d0 l     F .text	0000000a              CReplayServer::GetChallengeType(netadr_s&)
0018de80 l     F .text	00000100              CReplayServer::GetDeltaFrame(int)
0018dff0 l     F .text	00000007              CReplayServer::GetDirector()
0018c6f0 l     F .text	0000000e              CReplayServer::GetEventDebugID()
0018b810 l     F .text	00000021              CReplayServer::GetName() const
0018b750 l     F .text	00000012              CReplayServer::GetNetStats(float&, float&)
0018b520 l     F .text	0000003a              CReplayServer::GetOnlineTime()
0018b5f0 l     F .text	00000007              CReplayServer::GetPassword() const
0018b500 l     F .text	0000000e              CReplayServer::GetReplaySlot()
0018b780 l     F .text	0000002a              CReplayServer::Init(bool)
0018bee0 l     F .text	0000011f              CReplayServer::InitClientRecvTables()
0018c700 l     F .text	0000016e              CReplayServer::InstallStringTables()
0018dfb0 l     F .text	0000000a              CReplayServer::IsMultiplayer() const
0018e050 l     F .text	00000010              CReplayServer::IsRecording()
0018dfd0 l     F .text	0000000a              CReplayServer::IsReplay() const
0018cc00 l     F .text	0000013b              CReplayServer::LinkInstanceBaselines()
0018b670 l     F .text	00000005              CReplayServer::RejectConnection(netadr_s const&, int, char const*)
0018b630 l     F .text	00000005              CReplayServer::ReplyChallenge(netadr_s&, int)
0018b650 l     F .text	00000005              CReplayServer::ReplyServerChallenge(netadr_s&)
0018cba0 l     F .text	00000058              CReplayServer::RestoreTick(int)
0018d9b0 l     F .text	000002a8              CReplayServer::RunFrame()
00325a30 l     O .bss	0000000c              CReplayServer::RunFrame()::tm_fmt
0018d3e0 l     F .text	0000009a              CReplayServer::SendNetMsg(INetMessage&, bool)
0018d8f0 l     F .text	000000b4              CReplayServer::SendPendingEvents()
0018b4c0 l     F .text	00000026              CReplayServer::SetMaxClients(int)
0018b570 l     F .text	00000007              CReplayServer::ShouldUpdateMasterServer()
0018b6b0 l     F .text	0000008f              CReplayServer::Shutdown()
0018c870 l     F .text	0000032b              CReplayServer::StartMaster(CGameClient*)
0018bac0 l     F .text	0000006f              CReplayServer::StartRecording()
0018ba70 l     F .text	0000003e              CReplayServer::StopRecording()
0018d5a0 l     F .text	000002e0              CReplayServer::UpdateTick()
00325a3c l     O .bss	0000000c              CReplayServer::UpdateTick()::tm_fmt
0018b590 l     F .text	00000005              CReplayServer::UserInfoChanged(int)
00155660 l     F .text	00000252              CResourcePreloadModel::CreateResource(char const*)
00151b30 l     F .text	00000009              CResourcePreloadModel::OnEndMapLoading(bool)
00152e30 l     F .text	0000028e              CResourcePreloadModel::PurgeAll()
001530c0 l     F .text	0000020f              CResourcePreloadModel::PurgeUnreferencedResources()
00151b00 l     F .text	00000024              CResourcePreloadModel::QueuedLoaderMapCallback(void*, void*, void const*, int, LoaderError_t)
00205c80 l     F .text	00000060              CrossProduct(float const*, float const*, float*)
000ffd00 l     F .text	000000a3              CSendNode::~CSendNode()
000ffd00 l     F .text	000000a3              CSendNode::~CSendNode()
000ff5a0 l     F .text	00000049              CSendNode::CSendNode()
000ff5a0 l     F .text	00000049              CSendNode::CSendNode()
000ffdb0 l     F .text	00000281              CSendTablePrecalc::~CSendTablePrecalc()
000ffdb0 l     F .text	00000281              CSendTablePrecalc::~CSendTablePrecalc()
00100040 l     F .text	0000001f              CSendTablePrecalc::~CSendTablePrecalc()
000ff5f0 l     F .text	0000023e              CSendTablePrecalc::CSendTablePrecalc()
000ff5f0 l     F .text	0000023e              CSendTablePrecalc::CSendTablePrecalc()
00100560 l     F .text	0000017a              CSendTablePrecalc::SetupFlatPropertyArray()
000af520 l     F .text	00000024              CSentence::AddPhonemeTag(CWordTag*, CPhonemeTag*)
000af780 l     F .text	0000005a              CSentence::AddRuntimePhoneme(CPhonemeTag const*)
000b0790 l     F .text	00000024              CSentence::AddWordTag(CWordTag*)
000b09a0 l     F .text	0000021c              CSentence::Append(float, CSentence const&)
000af8b0 l     F .text	00000ed2              CSentence::CacheRestoreFromBuffer(CUtlBuffer&)
000ad590 l     F .text	00000feb              CSentence::CacheSaveToBuffer(CUtlBuffer&, int)
000ae5b0 l     F .text	00000069              CSentence::ClearRuntimePhonemes()
000ad050 l     F .text	00000054              CSentence::ColorForLanguage(int, unsigned char&, unsigned char&, unsigned char&)
000af0b0 l     F .text	000000fc              CSentence::ComputeDataCheckSum()
000ae8f0 l     F .text	00000031              CSentence::CountPhonemes()
000af1c0 l     F .text	0000005e              CSentence::CountWords(char const*)
000b07c0 l     F .text	000001db              CSentence::CreateEventWordDistribution(char const*, float)
000af490 l     F .text	00000087              CSentence::~CSentence()
000af490 l     F .text	00000087              CSentence::~CSentence()
000ad110 l     F .text	00000095              CSentence::CSentence()
000ad110 l     F .text	00000095              CSentence::CSentence()
000ae930 l     F .text	0000006b              CSentence::EstimateBestWord(float)
000aed00 l     F .text	00000057              CSentence::GetBoundedSample(int, float)
002d3440 l     O .bss	0000000c              CSentence::GetBoundedSample(int, float)::nullend
002d3430 l     O .bss	0000000c              CSentence::GetBoundedSample(int, float)::nullstart
000af1b0 l     F .text	0000000b              CSentence::GetDataCheckSum() const
000aefe0 l     F .text	000000a1              CSentence::GetEstimatedTimes(float&, float&)
000aed60 l     F .text	00000239              CSentence::GetIntensity(float, float)
000aefa0 l     F .text	0000000b              CSentence::GetNumSamples()
000ae580 l     F .text	0000000b              CSentence::GetRuntimePhonemeCount() const
000ae590 l     F .text	00000011              CSentence::GetRuntimePhoneme(int) const
000aefb0 l     F .text	0000002b              CSentence::GetSample(int)
000aeb30 l     F .text	00000014              CSentence::GetText() const
000ae8c0 l     F .text	0000000b              CSentence::GetWordBase()
000ae9a0 l     F .text	00000068              CSentence::GetWordForPhoneme(CPhonemeTag*)
000b1250 l     F .text	000000b9              CSentence::InitFromBuffer(CUtlBuffer&)
000b1310 l     F .text	000000ac              CSentence::InitFromDataChunk(void*, int)
000ad0d0 l     F .text	00000040              CSentence::LanguageForName(char const*)
000af7e0 l     F .text	000000cc              CSentence::MakeRuntimeOnly()
000ae8d0 l     F .text	00000016              CSentence::MarkNewPhraseBase()
000ad0b0 l     F .text	0000001c              CSentence::NameForLanguage(int)
000b0bc0 l     F .text	000001b6              CSentence::operator=(CSentence const&)
000ad1b0 l     F .text	00000274              CSentence::ParseCloseCaption(CUtlBuffer&)
000b1080 l     F .text	000001cb              CSentence::ParseDataVersionOnePointZero(CUtlBuffer&)
000af670 l     F .text	0000010f              CSentence::ParseEmphasis(CUtlBuffer&)
000ad430 l     F .text	0000015b              CSentence::ParseOptions(CUtlBuffer&)
000aea80 l     F .text	000000a6              CSentence::ParsePlaintext(CUtlBuffer&)
000b0d80 l     F .text	000002fd              CSentence::ParseWords(CUtlBuffer&)
000af310 l     F .text	00000066              CSentence::Reset()
000af380 l     F .text	00000064              CSentence::ResetToBase()
000aebf0 l     F .text	00000108              CSentence::Resort()
000ae620 l     F .text	00000299              CSentence::SaveToBuffer(CUtlBuffer&)
000af090 l     F .text	00000012              CSentence::SetDataCheckSum(unsigned int)
000aea10 l     F .text	00000064              CSentence::SetText(char const*)
000aeb50 l     F .text	0000009f              CSentence::SetTextFromWords()
000af220 l     F .text	00000034              CSentence::ShouldSplitWord(char)
000d0e20 l     F .text	00000036              C_ServerClassInfo::~C_ServerClassInfo()
000d0e20 l     F .text	00000036              C_ServerClassInfo::~C_ServerClassInfo()
000d0e00 l     F .text	0000001d              C_ServerClassInfo::C_ServerClassInfo()
000d0e00 l     F .text	0000001d              C_ServerClassInfo::C_ServerClassInfo()
00108740 l     F .text	00000138              CServerDatatableStack::RecurseAndCallProxies(CSendNode*, unsigned char*)
00111a00 l     F .text	00000043              CServerDTITimer::~CServerDTITimer()
00111a00 l     F .text	00000043              CServerDTITimer::~CServerDTITimer()
001caee0 l     F .text	0000000e              CServerEngineTools::~CServerEngineTools()
001caee0 l     F .text	0000000e              CServerEngineTools::~CServerEngineTools()
001caef0 l     F .text	00000012              CServerEngineTools::~CServerEngineTools()
001ca640 l     F .text	00000010              CServerEngineTools::FrameUpdatePostEntityThinkAllTools()
001ca680 l     F .text	00000010              CServerEngineTools::FrameUpdatePreEntityThinkAllTools()
001ca2b0 l     F .text	0000002a              CServerEngineTools::GetEntityData(char const*)
001c9fd0 l     F .text	0000000c              CServerEngineTools::InToolMode()
001ca740 l     F .text	00000010              CServerEngineTools::LevelInitPostEntityAllTools()
001ca780 l     F .text	00000010              CServerEngineTools::LevelInitPreEntityAllTools()
001ca6c0 l     F .text	00000010              CServerEngineTools::LevelShutdownPostEntityAllTools()
001ca700 l     F .text	00000010              CServerEngineTools::LevelShutdownPreEntityAllTools()
001ca600 l     F .text	00000010              CServerEngineTools::PreClientUpdateAllTools()
001ca5c0 l     F .text	00000010              CServerEngineTools::PreSetupVisibilityAllTools()
001b6500 l     F .text	00000080              CServerPlugin::ClientActive(edict_t*, bool)
001b6130 l     F .text	0000007f              CServerPlugin::ClientCommand(edict_t*, CCommand const&)
001b5920 l     F .text	0000006e              CServerPlugin::ClientCommand(edict_t*, char const*)
001b61b0 l     F .text	00000143              CServerPlugin::ClientConnect(edict_t*, char const*, char const*, char*, int)
001b6480 l     F .text	00000079              CServerPlugin::ClientDisconnect(edict_t*)
001b6400 l     F .text	0000007f              CServerPlugin::ClientPutInServer(edict_t*, char const*)
001b6300 l     F .text	00000079              CServerPlugin::ClientSettingsChanged(edict_t*)
001b5990 l     F .text	00000163              CServerPlugin::CreateMessage(edict_t*, DIALOG_TYPE, KeyValues*, IServerPluginCallbacks*)
001b6cd0 l     F .text	0000003e              CServerPlugin::~CServerPlugin()
001b6cd0 l     F .text	0000003e              CServerPlugin::~CServerPlugin()
001b6850 l     F .text	00000038              CServerPlugin::CServerPlugin()
001b6850 l     F .text	00000038              CServerPlugin::CServerPlugin()
001b6970 l     F .text	00000037              CServerPlugin::DisablePlugin(int)
001b6890 l     F .text	00000043              CServerPlugin::DisablePlugins()
001b6a20 l     F .text	00000037              CServerPlugin::EnablePlugin(int)
001b6900 l     F .text	00000043              CServerPlugin::EnablePlugins()
001b65f0 l     F .text	00000079              CServerPlugin::GameFrame(bool)
001b6710 l     F .text	000000e7              CServerPlugin::LevelInit(char const*, char const*, char const*, char const*, bool, bool)
001b6580 l     F .text	0000006d              CServerPlugin::LevelShutdown()
001b6d10 l     F .text	00000097              CServerPlugin::LoadPlugin(char const*)
001b6e90 l     F .text	000001c9              CServerPlugin::LoadPlugins()
001b60d0 l     F .text	0000005f              CServerPlugin::NetworkIDValidated(char const*, char const*)
001b5fe0 l     F .text	00000068              CServerPlugin::OnEdictAllocated(edict_t*)
001b5f70 l     F .text	00000068              CServerPlugin::OnEdictFreed(edict_t const*)
001b6050 l     F .text	00000078              CServerPlugin::OnQueryCvarValueFinished(int, edict_t*, EQueryCvarValueStatus, char const*, char const*)
001b6ad0 l     F .text	00000080              CServerPlugin::PrintDetails()
001b6670 l     F .text	0000009d              CServerPlugin::ServerActivate(edict_t*, int, int)
001b6380 l     F .text	00000079              CServerPlugin::SetCommandClient(int)
001b5b80 l     F .text	0000006b              CServerPlugin::StartQueryCvarValue(edict_t*, char const*)
001b6b70 l     F .text	00000049              CServerPlugin::UnloadPlugin(int)
001b6c70 l     F .text	00000058              CServerPlugin::UnloadPlugins()
001bc490 l     F .text	000001fe              CServerRemoteAccess::BadPassword(CRConServer*, unsigned int)
001bc690 l     F .text	000001fe              CServerRemoteAccess::CheckPassword(CRConServer*, unsigned int, int, char const*)
001bd010 l     F .text	000000c6              CServerRemoteAccess::~CServerRemoteAccess()
001bd010 l     F .text	000000c6              CServerRemoteAccess::~CServerRemoteAccess()
001bd0e0 l     F .text	000000cd              CServerRemoteAccess::~CServerRemoteAccess()
001ba640 l     F .text	000000bd              CServerRemoteAccess::CServerRemoteAccess()
001ba640 l     F .text	000000bd              CServerRemoteAccess::CServerRemoteAccess()
001ba9f0 l     F .text	00000023              CServerRemoteAccess::ExecCommand(char const*)
001ba7b0 l     F .text	00000080              CServerRemoteAccess::GetDataResponseSize(unsigned int)
001bb0f0 l     F .text	000001e7              CServerRemoteAccess::GetMapList(CUtlBuffer&)
001bbb80 l     F .text	00000077              CServerRemoteAccess::GetNextListenerID(bool, netadr_s const*)
001bae70 l     F .text	00000272              CServerRemoteAccess::GetPlayerList(CUtlBuffer&)
001bace0 l     F .text	00000132              CServerRemoteAccess::GetStatsString(char*, int)
001bab50 l     F .text	0000018f              CServerRemoteAccess::GetUserBanList(CUtlBuffer&)
001ba790 l     F .text	00000013              CServerRemoteAccess::IsAuthenticated(unsigned int)
001ba710 l     F .text	0000007e              CServerRemoteAccess::LogCommand(unsigned int, char const*)
001baa20 l     F .text	0000012b              CServerRemoteAccess::LookupStringValue(char const*)
00358fc0 l     O .bss	00000020              CServerRemoteAccess::LookupStringValue(char const*)::s_ReturnBuf
001bb2e0 l     F .text	000006ff              CServerRemoteAccess::LookupValue(char const*, CUtlBuffer&)
001bbaa0 l     F .text	000000dd              CServerRemoteAccess::ReadDataResponse(unsigned int, void*, int)
001bcf40 l     F .text	0000000e              CServerRemoteAccess::RegisterAdminUIID(unsigned int)
001bc1e0 l     F .text	000002a2              CServerRemoteAccess::RequestValue(unsigned int, int, char const*)
001bc040 l     F .text	00000194              CServerRemoteAccess::RespondString(unsigned int, int, char const*)
001bbe60 l     F .text	000001ac              CServerRemoteAccess::SendMessageToAdminUI(unsigned int, char const*)
001bbc00 l     F .text	00000240              CServerRemoteAccess::SendResponseToClient(unsigned int, ServerDataResponseType_t, void*, int)
001bbe40 l     F .text	00000015              CServerRemoteAccess::SendVProfData(unsigned int, bool, void*, int)
001ba830 l     F .text	000001b2              CServerRemoteAccess::SetValue(char const*, char const*)
001ba700 l     F .text	00000005              CServerRemoteAccess::UploadScreenshot(char const*)
001bc890 l     F .text	00000661              CServerRemoteAccess::WriteDataRequest(CRConServer*, unsigned int, void const*, int)
001bcf00 l     F .text	00000031              CServerRemoteAccess::WriteDataRequest(unsigned int, void const*, int)
0018f170 l     F .text	000000a3              CSocketCreator::CloseAcceptedSocket(int)
0018f220 l     F .text	00000077              CSocketCreator::CloseAllAcceptedSockets()
0018efe0 l     F .text	00000027              CSocketCreator::CloseListenSocket()
0018ef20 l     F .text	000000ba              CSocketCreator::ConfigureSocket(int)
0018f450 l     F .text	000002b1              CSocketCreator::ConnectSocket(netadr_s const&, bool)
0018f010 l     F .text	00000156              CSocketCreator::CreateListenSocket(netadr_s const&)
0018f330 l     F .text	0000006e              CSocketCreator::~CSocketCreator()
0018f330 l     F .text	0000006e              CSocketCreator::~CSocketCreator()
0018f3a0 l     F .text	000000a9              CSocketCreator::CSocketCreator(ISocketCreatorListener*)
0018f3a0 l     F .text	000000a9              CSocketCreator::CSocketCreator(ISocketCreatorListener*)
0018f2a0 l     F .text	0000001f              CSocketCreator::Disconnect()
0018f2f0 l     F .text	00000017              CSocketCreator::GetAcceptedSocketAddress(int) const
0018f2c0 l     F .text	0000000b              CSocketCreator::GetAcceptedSocketCount() const
0018f310 l     F .text	00000017              CSocketCreator::GetAcceptedSocketData(int)
0018f2d0 l     F .text	00000016              CSocketCreator::GetAcceptedSocketHandle(int) const
0018ef10 l     F .text	0000000f              CSocketCreator::IsListening() const
0018f710 l     F .text	0000018a              CSocketCreator::ProcessAccept()
0018f8a0 l     F .text	0000001a              CSocketCreator::RunFrame()
001960c0 l     F .text	00000199              CSpatialPartition::CreateHandle(IHandleEntity*)
0018ff00 l     F .text	00000065              CSpatialPartition::CreateHandle(IHandleEntity*, int, Vector const&, Vector const&)
00194cf0 l     F .text	000000e3              CSpatialPartition::~CSpatialPartition()
00194cf0 l     F .text	000000e3              CSpatialPartition::~CSpatialPartition()
00194de0 l     F .text	0000001f              CSpatialPartition::~CSpatialPartition()
00195e50 l     F .text	0000011b              CSpatialPartition::CSpatialPartition()
00195e50 l     F .text	0000011b              CSpatialPartition::CSpatialPartition()
00195fd0 l     F .text	000000e8              CSpatialPartition::DestroyHandle(unsigned short)
001901d0 l     F .text	0000002f              CSpatialPartition::DrawDebugOverlays()
00190040 l     F .text	00000095              CSpatialPartition::ElementMoved(unsigned short, Vector const&, Vector const&)
001918c0 l     F .text	000000c7              CSpatialPartition::EnumerateElementsAlongRay(int, Ray_t const&, bool, IPartitionEnumerator*)
001917f0 l     F .text	000000c7              CSpatialPartition::EnumerateElementsAtPoint(int, Vector const&, bool, IPartitionEnumerator*)
00191a70 l     F .text	000000d4              CSpatialPartition::EnumerateElementsInBox(int, Vector const&, Vector const&, bool, IPartitionEnumerator*)
00191990 l     F .text	000000dc              CSpatialPartition::EnumerateElementsInSphere(int, Vector const&, float, bool, IPartitionEnumerator*)
00190030 l     F .text	0000000e              CSpatialPartition::GetSuppressedLists()
00190270 l     F .text	000000a8              CSpatialPartition::HideElement(unsigned short)
00194c00 l     F .text	000000e8              CSpatialPartition::Init(Vector const&, Vector const&)
001956f0 l     F .text	000000ac              CSpatialPartition::InsertIntoTree(unsigned short, Vector const&, Vector const&)
0018ff70 l     F .text	00000019              CSpatialPartition::Insert(int, unsigned short)
001903e0 l     F .text	00000032              CSpatialPartition::InstallQueryCallback(IPartitionQueryCallback*)
00190420 l     F .text	00000032              CSpatialPartition::InstallQueryCallback_V1(IPartitionQueryCallback*)
00191740 l     F .text	000000a4              CSpatialPartition::InvokeQueryCallbacks(int, bool)
0018ffb0 l     F .text	00000029              CSpatialPartition::RemoveAndInsert(int, int, unsigned short)
001963d0 l     F .text	0000006e              CSpatialPartition::RemoveFromTree(unsigned short)
0018ff90 l     F .text	0000001b              CSpatialPartition::Remove(int, unsigned short)
0018fea0 l     F .text	00000052              CSpatialPartition::RemoveQueryCallback(IPartitionQueryCallback*)
0018ffe0 l     F .text	00000018              CSpatialPartition::Remove(unsigned short)
00190110 l     F .text	00000042              CSpatialPartition::RenderAllObjectsInTree(float)
00196590 l     F .text	00000005              CSpatialPartition::RenderLeafsForBoxEnd()
00196580 l     F .text	00000005              CSpatialPartition::RenderLeafsForBoxStart(float)
00196570 l     F .text	00000005              CSpatialPartition::RenderLeafsForHullTraceEnd()
00196560 l     F .text	00000005              CSpatialPartition::RenderLeafsForHullTraceStart(float)
00196550 l     F .text	00000005              CSpatialPartition::RenderLeafsForRayTraceEnd()
00196540 l     F .text	00000005              CSpatialPartition::RenderLeafsForRayTraceStart(float)
001965b0 l     F .text	00000005              CSpatialPartition::RenderLeafsForSphereEnd()
001965a0 l     F .text	00000005              CSpatialPartition::RenderLeafsForSphereStart(float)
00190100 l     F .text	00000005              CSpatialPartition::RenderObjectsAlongRay(Ray_t const&, float)
001900e0 l     F .text	00000005              CSpatialPartition::RenderObjectsInBox(Vector const&, Vector const&, float)
00190160 l     F .text	00000062              CSpatialPartition::RenderObjectsInPlayerLeafs(Vector const&, Vector const&, float)
001900f0 l     F .text	00000005              CSpatialPartition::RenderObjectsInSphere(Vector const&, float, float)
00190200 l     F .text	00000065              CSpatialPartition::ReportStats(char const*)
00194b90 l     F .text	0000006c              CSpatialPartition::Shutdown()
00190000 l     F .text	00000028              CSpatialPartition::SuppressLists(int, bool)
00190320 l     F .text	000000be              CSpatialPartition::UnhideElement(unsigned short, int)
000a6dd0 l     F .text	0000002a              CStandardRecvProxies::CStandardRecvProxies()
000a6dd0 l     F .text	0000002a              CStandardRecvProxies::CStandardRecvProxies()
000a76c0 l     F .text	00000054              CStandardSendProxies::CStandardSendProxies()
000a76c0 l     F .text	00000054              CStandardSendProxies::CStandardSendProxies()
000a7680 l     F .text	0000003f              CStandardSendProxiesV1::CStandardSendProxiesV1()
000a7680 l     F .text	0000003f              CStandardSendProxiesV1::CStandardSendProxiesV1()
00198f00 l     F .text	00000015              CStaticProp::CleanUpRenderHandle()
00197fd0 l     F .text	0000000b              CStaticProp::CollisionToWorldTransform() const
00199e70 l     F .text	0000001b              CStaticProp::ComputeFxBlend()
0019b830 l     F .text	00000005              CStaticProp::CreateModelInstance()
001991a0 l     F .text	00000226              CStaticProp::CreateVPhysics(IPhysicsEnvironment*, IVPhysicsKeyHandler*, void*)
00199120 l     F .text	0000005f              CStaticProp::~CStaticProp()
00199120 l     F .text	0000005f              CStaticProp::~CStaticProp()
00199180 l     F .text	0000001f              CStaticProp::~CStaticProp()
00198b10 l     F .text	00000040              CStaticProp::CStaticProp()
00198b10 l     F .text	00000040              CStaticProp::CStaticProp()
00198f40 l     F .text	00000005              CStaticProp::DisplayStaticPropInfo(int)
00197e60 l     F .text	00000005              CStaticProp::DoAnimationEvents()
001981a0 l     F .text	00000007              CStaticProp::DrawModel(int)
00198f50 l     F .text	00000007              CStaticProp::DrawModelSlow(int)
0019b7d0 l     F .text	00000007              CStaticProp::FirstShadowChild()
00198760 l     F .text	0000002a              CStaticProp::GetAttachment(int, matrix3x4_t&)
00197da0 l     F .text	00000037              CStaticProp::GetAttachment(int, Vector&, QAngle&)
0019b530 l     F .text	00000007              CStaticProp::GetBaseEntity()
0019b620 l     F .text	00000007              CStaticProp::GetBody()
0019b500 l     F .text	00000007              CStaticProp::GetClientNetworkable()
0019b510 l     F .text	0000000b              CStaticProp::GetClientRenderable()
0019b540 l     F .text	00000007              CStaticProp::GetClientThinkable()
0019b4f0 l     F .text	0000000b              CStaticProp::GetCollideable()
00197f90 l     F .text	00000028              CStaticProp::GetCollisionAngles() const
0019b5c0 l     F .text	00000007              CStaticProp::GetCollisionGroup() const
00197f50 l     F .text	0000000b              CStaticProp::GetCollisionModel()
00197f30 l     F .text	0000000a              CStaticProp::GetCollisionModelIndex()
00197f70 l     F .text	0000000b              CStaticProp::GetCollisionOrigin() const
00197ec0 l     F .text	00000015              CStaticProp::GetColorModulation(float*)
0019b5a0 l     F .text	00000008              CStaticProp::GetEntityHandle()
00197ea0 l     F .text	0000000c              CStaticProp::GetFxBlend()
0019b520 l     F .text	00000007              CStaticProp::GetIClientEntity()
0019b4e0 l     F .text	00000008              CStaticProp::GetIClientUnknown()
00197e80 l     F .text	0000000b              CStaticProp::GetModel() const
0019b8d0 l     F .text	0000000c              CStaticProp::GetModelInstance()
001980a0 l     F .text	00000007              CStaticProp::GetPVSNotifyInterface()
00197cc0 l     F .text	0000000b              CStaticProp::GetRefEHandle() const
00197d80 l     F .text	0000000b              CStaticProp::GetRenderAngles()
001980c0 l     F .text	00000032              CStaticProp::GetRenderBounds(Vector&, Vector&)
00198110 l     F .text	00000044              CStaticProp::GetRenderBoundsWorldspace(Vector&, Vector&)
0019b890 l     F .text	00000007              CStaticProp::GetRenderClipPlane()
00197d60 l     F .text	0000000b              CStaticProp::GetRenderOrigin()
0019b600 l     F .text	00000007              CStaticProp::GetRootParentToWorldTransform() const
0019b6e0 l     F .text	00000007              CStaticProp::GetShadowCastDirection(Vector*, ShadowType_t) const
0019b6c0 l     F .text	00000007              CStaticProp::GetShadowCastDistance(float*, ShadowType_t) const
0019b700 l     F .text	0000000a              CStaticProp::GetShadowHandle() const
0019b7b0 l     F .text	00000007              CStaticProp::GetShadowParent()
0019b740 l     F .text	00000011              CStaticProp::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
0019b640 l     F .text	00000007              CStaticProp::GetSkin()
00197ff0 l     F .text	0000000c              CStaticProp::GetSolid() const
00198010 l     F .text	00000007              CStaticProp::GetSolidFlags() const
0019b870 l     F .text	00000007              CStaticProp::IgnoresZBuffer() const
00198b50 l     F .text	000003a4              CStaticProp::Init(int, StaticPropLump_t&, model_t*)
00326790 l     O .bss	00000004              CStaticProp::Init(int, StaticPropLump_t&, model_t*)::nBitchCount
00198f60 l     F .text	0000017d              CStaticProp::InsertPropIntoKDTree()
0019b770 l     F .text	00000007              CStaticProp::IsShadowDirty()
001987a0 l     F .text	00000036              CStaticProp::IsTransparent()
00197df0 l     F .text	0000001f              CStaticProp::IsTwoPass()
0019b680 l     F .text	0000000a              CStaticProp::LODTest()
0019b850 l     F .text	0000000a              CStaticProp::LookupAttachment(char const*)
0019b790 l     F .text	00000005              CStaticProp::MarkShadowDirty(bool)
00198500 l     F .text	00000005              CStaticPropMgr::AddColorDecalToStaticProp(Vector const&, Vector const&, int, int, bool, CGameTrace&, bool, Color)
001984a0 l     F .text	0000004e              CStaticPropMgr::AddDecalToStaticProp(Vector const&, Vector const&, int, int, bool, CGameTrace&)
00198520 l     F .text	00000005              CStaticPropMgr::AddShadowToStaticProp(unsigned short, IClientRenderable*)
00199d00 l     F .text	00000005              CStaticPropMgr::ChangeRenderGroup(CStaticProp&)
00199d10 l     F .text	00000147              CStaticPropMgr::ComputePropOpacity(CStaticProp&)
00198430 l     F .text	00000022              CStaticPropMgr::ComputePropOpacity(Vector const&, float)
00199bf0 l     F .text	00000110              CStaticPropMgr::ComputeScreenFade(CStaticProp&, float, float, float)
001993f0 l     F .text	00000058              CStaticPropMgr::CreateVPhysicsRepresentations(IPhysicsEnvironment*, IVPhysicsKeyHandler*, void*)
00199f80 l     F .text	00000112              CStaticPropMgr::~CStaticPropMgr()
00199f80 l     F .text	00000112              CStaticPropMgr::~CStaticPropMgr()
0019a0a0 l     F .text	0000001f              CStaticPropMgr::~CStaticPropMgr()
00199460 l     F .text	000000b0              CStaticPropMgr::CStaticPropMgr()
00199460 l     F .text	000000b0              CStaticPropMgr::CStaticPropMgr()
00199710 l     F .text	00000005              CStaticPropMgr::DrawStaticProps_Fast(IClientRenderable**, int, bool)
00199720 l     F .text	0000010a              CStaticPropMgr::DrawStaticProps_FastPipeline(IClientRenderable**, int, bool)
00199840 l     F .text	000003a8              CStaticPropMgr::DrawStaticProps(IClientRenderable**, int, bool, bool)
00326810 l     O .bss	0000000c              CStaticPropMgr::DrawStaticProps(IClientRenderable**, int, bool, bool)::tm_fmt
001996e0 l     F .text	00000024              CStaticPropMgr::DrawStaticProps_Slow(IClientRenderable**, int, bool, bool)
0019b410 l     F .text	00000069              CStaticPropMgr::GetAllStaticProps(CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
0019b310 l     F .text	000000d7              CStaticPropMgr::GetAllStaticPropsInAABB(Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
0019aa90 l     F .text	00000854              CStaticPropMgr::GetAllStaticPropsInOBB(Vector const&, Vector const&, Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
001983c0 l     F .text	00000054              CStaticPropMgr::GetLightCacheHandleForStaticProp(IHandleEntity*)
00198260 l     F .text	00000023              CStaticPropMgr::GetStaticPropByIndex(int)
001981d0 l     F .text	00000070              CStaticPropMgr::GetStaticProp(IHandleEntity*)
00198320 l     F .text	0000001a              CStaticPropMgr::GetStaticPropIndex(IHandleEntity*) const
00198560 l     F .text	00000005              CStaticPropMgr::GetStaticPropMaterialColorAndLighting(CGameTrace*, int, Vector&, Vector&)
001981b0 l     F .text	0000000a              CStaticPropMgr::Init()
00198670 l     F .text	00000092              CStaticPropMgr::IsPropInPVS(IHandleEntity*, unsigned char const*) const
00198300 l     F .text	00000015              CStaticPropMgr::IsStaticProp(CBaseHandle) const
001982b0 l     F .text	00000029              CStaticPropMgr::IsStaticProp(IHandleEntity*) const
0019aa50 l     F .text	0000001a              CStaticPropMgr::LevelInit()
001981c0 l     F .text	00000005              CStaticPropMgr::LevelInitClient()
00199e90 l     F .text	000000ed              CStaticPropMgr::LevelShutdown()
00198940 l     F .text	00000084              CStaticPropMgr::LevelShutdownClient()
00199540 l     F .text	00000103              CStaticPropMgr::OutputLevelStats()
00199650 l     F .text	0000008b              CStaticPropMgr::PrecacheLighting()
00198340 l     F .text	0000002d              CStaticPropMgr::PropHasBakedLightingDisabled(IHandleEntity*) const
00198370 l     F .text	00000046              CStaticPropMgr::RecomputeStaticLighting()
00198540 l     F .text	00000005              CStaticPropMgr::RemoveAllShadowsFromStaticProp(IClientRenderable*)
001987e0 l     F .text	00000018              CStaticPropMgr::Shutdown()
00198480 l     F .text	00000005              CStaticPropMgr::TraceRayAgainstStaticProp(Ray_t const&, int, CGameTrace&)
0019a2e0 l     F .text	0000018f              CStaticPropMgr::UnserializeLeafList(CUtlBuffer&)
0019a0c0 l     F .text	00000214              CStaticPropMgr::UnserializeModelDict(CUtlBuffer&)
0019a470 l     F .text	0000049a              CStaticPropMgr::UnserializeModels(CUtlBuffer&)
0019a910 l     F .text	00000136              CStaticPropMgr::UnserializeStaticProps()
0019b7f0 l     F .text	00000007              CStaticProp::NextShadowPeer()
00198810 l     F .text	00000125              CStaticProp::OBBMaxs() const
0019b580 l     F .text	0000000e              CStaticProp::OBBMaxsPreScaled() const
001989e0 l     F .text	00000125              CStaticProp::OBBMins() const
0019b560 l     F .text	0000000e              CStaticProp::OBBMinsPreScaled() const
0019b660 l     F .text	00000005              CStaticProp::OnThreadedDrawSetup()
00198f20 l     F .text	00000005              CStaticProp::PrecacheLighting()
00198f30 l     F .text	00000005              CStaticProp::RecomputeStaticLighting()
0019b720 l     F .text	00000005              CStaticProp::RecordToolMessage()
001990e0 l     F .text	00000032              CStaticProp::RemovePropFromKDTree()
0019b8b0 l     F .text	0000000b              CStaticProp::RenderableToWorldTransform()
00198080 l     F .text	0000000b              CStaticProp::RenderHandle()
00197cb0 l     F .text	00000005              CStaticProp::SetRefEHandle(CBaseHandle const&)
00198720 l     F .text	0000002b              CStaticProp::SetupBones(matrix3x4_t*, int, int, float)
00197e40 l     F .text	00000005              CStaticProp::SetupWeights(matrix3x4_t const*, int, float*, float*)
0019b810 l     F .text	00000007              CStaticProp::ShadowCastType()
00198180 l     F .text	0000000a              CStaticProp::ShouldCacheRenderInfo()
00197e20 l     F .text	0000000f              CStaticProp::ShouldDraw()
00198170 l     F .text	0000000b              CStaticProp::ShouldReceiveProjectedTextures(int)
0019b5e0 l     F .text	00000007              CStaticProp::ShouldTouchTrigger(int) const
00197ef0 l     F .text	00000007              CStaticProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
00197f10 l     F .text	00000007              CStaticProp::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
0019b6a0 l     F .text	00000007              CStaticProp::UsesFlexDelayedWeights()
00198060 l     F .text	00000007              CStaticProp::UsesFullFrameBufferTexture()
00198030 l     F .text	00000018              CStaticProp::UsesPowerOfTwoFrameBufferTexture()
00197d00 l     F .text	00000044              CStaticProp::WorldSpaceSurroundingBounds(Vector*, Vector*)
00197ce0 l     F .text	00000005              CStaticProp::WorldSpaceTriggerBounds(Vector*, Vector*) const
00113430 l     F .text	00000021              CStatTime::GetTime()
001bf210 l     F .text	000005ed              CSteam3Server::Activate(CSteam3Server::EServerType)
001bdbd0 l     F .text	00000112              CSteam3Server::CheckForDuplicateSteamID(CBaseClient const*)
001bde80 l     F .text	0000009c              CSteam3Server::ClientFindFromSteamID(CSteamID&)
001bdb90 l     F .text	00000034              CSteam3Server::CompareUserID(USERID_s const&, USERID_s const&)
001be570 l     F .text	000001db              CSteam3Server::~CSteam3Server()
001be570 l     F .text	000001db              CSteam3Server::~CSteam3Server()
001be750 l     F .text	0000036c              CSteam3Server::CSteam3Server()
001be750 l     F .text	0000036c              CSteam3Server::CSteam3Server()
001bdaa0 l     F .text	00000041              CSteam3Server::GetCurrentServerMode()
001bdcf0 l     F .text	0000000d              CSteam3Server::GetGSSteamID()
001be470 l     F .text	0000000f              CSteam3Server::IsMasterServerUpdaterSharingGameSocket()
001bf800 l     F .text	0000046f              CSteam3Server::NotifyClientConnect(CBaseClient*, unsigned int, netadr_s&, void const*, unsigned int)
001be300 l     F .text	00000167              CSteam3Server::NotifyClientDisconnect(CBaseClient*)
001bf010 l     F .text	00000068              CSteam3Server::NotifyLocalClientConnect(CBaseClient*)
001befe0 l     F .text	00000025              CSteam3Server::NotifyOfLevelChange()
001befd0 l     F .text	00000009              CSteam3Server::NotifyOfServerNameChange()
001bdf20 l     F .text	0000010d              CSteam3Server::OnComputeNewPlayerCompatibilityResponse(ComputeNewPlayerCompatibilityResult_t*)
001bda40 l     F .text	0000004d              CSteam3Server::OnGSPolicyResponse(GSPolicyResponse_t*)
001bd9a0 l     F .text	0000002a              CSteam3Server::OnLoggedOff(SteamServersDisconnected_t*)
001bd9d0 l     F .text	0000006b              CSteam3Server::OnLogonFailure(SteamServerConnectFailure_t*)
001bf080 l     F .text	00000183              CSteam3Server::OnLogonSuccess(SteamServersConnected_t*)
001bdd00 l     F .text	0000017d              CSteam3Server::OnValidateAuthTicketResponseHelper(CBaseClient*, EAuthSessionResponse)
001be2d0 l     F .text	00000022              CSteam3Server::OnValidateAuthTicketResponse(ValidateAuthTicketResponse_t*)
001be030 l     F .text	00000298              CSteam3Server::OnValidateAuthTicketResponse(ValidateAuthTicketResponse_t*) [clone .part.30]
001bef60 l     F .text	00000070              CSteam3Server::RunFrame()
0035d100 l     O .bss	00000008              CSteam3Server::RunFrame()::s_fLastRunCallback
001beac0 l     F .text	00000499              CSteam3Server::SendUpdatedServerDetails()
001bdaf0 l     F .text	00000093              CSteam3Server::Shutdown()
001be480 l     F .text	000000a7              CSteam3Server::UpdateGroupSteamID(bool)
00202c20 l     F .text	00000030              CSteamAppSystemGroup::CSteamAppSystemGroup(IFileSystem*, CAppSystemGroup*)
00202c20 l     F .text	00000030              CSteamAppSystemGroup::CSteamAppSystemGroup(IFileSystem*, CAppSystemGroup*)
00202c70 l     F .text	0000000b              CSteamAppSystemGroup::GetGameInfoPath() const
002029f0 l     F .text	0000002d              CSteamAppSystemGroup::LoadModuleDLL(char const*)
00202c50 l     F .text	00000014              CSteamAppSystemGroup::Setup(IFileSystem*, CAppSystemGroup*)
00202c80 l     F .text	00000128              CSteamAppSystemGroup::SetupSearchPaths(char const*, bool, bool)
000ac260 l     F .text	00000226              CSteamEnvVars::~CSteamEnvVars()
000ac260 l     F .text	00000226              CSteamEnvVars::~CSteamEnvVars()
0008df70 l     F .text	0000004a              CSteamID::BValidExternalSteamID() const
0008dad0 l     F .text	00000009              CSteamID::CSteamID(char const*, EUniverse)
0008dad0 l     F .text	00000009              CSteamID::CSteamID(char const*, EUniverse)
0008dbb0 l     F .text	0000039b              CSteamID::Render() const
002c8680 l     O .bss	00000004              CSteamID::Render() const::nBuf
002c86a0 l     O .bss	00000094              CSteamID::Render() const::rgchBuf
0008df50 l     F .text	0000001f              CSteamID::Render(unsigned long long)
0008dae0 l     F .text	000000c9              CSteamID::SetFromSteam2String(char const*, EUniverse)
0008d690 l     F .text	00000440              CSteamID::SetFromString(char const*, EUniverse)
0008d190 l     F .text	000004f1              CSteamID::SetFromStringStrict(char const*, EUniverse)
00116350 l     F .text	0000003b              CStudioConvexInfo::GetContents(int)
000b5050 l     F .text	000000a5              CStudioHdr::CActivityToSequenceMapping::~CActivityToSequenceMapping()
000b5050 l     F .text	000000a5              CStudioHdr::CActivityToSequenceMapping::~CActivityToSequenceMapping()
000b4050 l     F .text	000000f2              CStudioHdr::CActivityToSequenceMapping::GetSequences(int, int*, int*)
000b44e0 l     F .text	000006d7              CStudioHdr::CActivityToSequenceMapping::Initialize(CStudioHdr*)
000b4150 l     F .text	000000cc              CStudioHdr::CActivityToSequenceMapping::NumSequencesForActivity(int)
000b4bc0 l     F .text	00000060              CStudioHdr::CActivityToSequenceMapping::Reinitialize(CStudioHdr*)
000b4260 l     F .text	00000016              CStudioHdr::CActivityToSequenceMapping::SetValidationPair(CStudioHdr const*)
000b4220 l     F .text	00000033              CStudioHdr::CActivityToSequenceMapping::ValidateAgainst(CStudioHdr const*)
000b4c20 l     F .text	0000014d              CStudioHdr::CStudioHdr()
000b4c20 l     F .text	0000014d              CStudioHdr::CStudioHdr()
000b4d70 l     F .text	0000014b              CStudioHdr::CStudioHdr(studiohdr_t const*, IMDLCache*)
000b4d70 l     F .text	0000014b              CStudioHdr::CStudioHdr(studiohdr_t const*, IMDLCache*)
000b2f50 l     F .text	00000065              CStudioHdr::EntryNode(int)
000b2fc0 l     F .text	00000065              CStudioHdr::ExitNode(int)
000b3260 l     F .text	00000072              CStudioHdr::GetActivityListVersion()
000b30d0 l     F .text	00000065              CStudioHdr::GetAttachmentBone(int)
000b3340 l     F .text	00000072              CStudioHdr::GetEventListVersion()
000b3030 l     F .text	00000022              CStudioHdr::GetNumAttachments() const
000b3420 l     F .text	00000022              CStudioHdr::GetNumIKAutoplayLocks() const
000b2e40 l     F .text	00000026              CStudioHdr::GetNumPoseParameters() const
000b2cc0 l     F .text	00000022              CStudioHdr::GetNumSeq() const
000b2f10 l     F .text	0000003f              CStudioHdr::GetSharedPoseParameter(int, int) const
000b3220 l     F .text	00000037              CStudioHdr::GetTransition(int, int) const
000b29d0 l     F .text	000001f7              CStudioHdr::GroupStudioHdr(int)
002d3510 l     O .bss	00000004              CStudioHdr::GroupStudioHdr(int)::__executeCount
002d3520 l     O .bss	00000004              CStudioHdr::GroupStudioHdr(int)::__executeCount
000b43d0 l     F .text	0000010f              CStudioHdr::Init(studiohdr_t const*, IMDLCache*)
000b2de0 l     F .text	0000002f              CStudioHdr::iRelativeAnim(int, int) const
000b2e10 l     F .text	0000002f              CStudioHdr::iRelativeSeq(int, int) const
000b2c30 l     F .text	00000081              CStudioHdr::pAnimdesc(int)
000b2c00 l     F .text	0000002c              CStudioHdr::pAnimStudioHdr(int)
000b3060 l     F .text	00000067              CStudioHdr::pAttachment(int)
000b3450 l     F .text	00000077              CStudioHdr::pIKAutoplayLock(int)
000b2e70 l     F .text	00000098              CStudioHdr::pPoseParameter(int)
000b2cf0 l     F .text	000000ed              CStudioHdr::pSeqdesc(int)
002d3540 l     O .bss	000000d4              CStudioHdr::pSeqdesc(int)::s_nil_seq
000b2bd0 l     F .text	0000002c              CStudioHdr::pSeqStudioHdr(int)
000b31a0 l     F .text	00000077              CStudioHdr::pszNodeName(int)
000b3520 l     F .text	0000002e              CStudioHdr::RemapAnimBone(int, int) const
000b34d0 l     F .text	00000044              CStudioHdr::RemapSeqBone(int, int) const
000b4320 l     F .text	00000054              CStudioHdr::ResetVModel(virtualmodel_t const*) const
000b3550 l     F .text	00000b00              CStudioHdr::RunFlexRules(float const*, float*)
000b4380 l     F .text	0000004b              CStudioHdr::SequencesAvailable() const
000b32e0 l     F .text	0000005b              CStudioHdr::SetActivityListVersion(int)
000b3140 l     F .text	00000054              CStudioHdr::SetAttachmentBone(int, int)
000b33c0 l     F .text	00000055              CStudioHdr::SetEventListVersion(int)
000b29c0 l     F .text	00000005              CStudioHdr::Term()
00230204 l     O .rodata	00000010              CSWTCH.184
00242324 l     O .rodata	00000010              CSWTCH.309
00249680 l     O .rodata	00000018              CSWTCH.448
00259000 l     O .rodata	00000098              CSWTCH.6
000ac1c0 l     F .text	00000092              CTempEnvVar::~CTempEnvVar()
000ac1c0 l     F .text	00000092              CTempEnvVar::~CTempEnvVar()
000abf50 l     F .text	00000051              CTempEnvVar::SetValue(char const*, ...)
000a6960 l     F .text	00000016              CTesselateVert::CTesselateVert(CVertIndex const&, int)
000a6960 l     F .text	00000016              CTesselateVert::CTesselateVert(CVertIndex const&, int)
001c8530 l     F .text	000000b6              CTestScriptMgr::CheckPoint(char const*)
001c83b0 l     F .text	00000073              CTestScriptMgr::~CTestScriptMgr()
001c83b0 l     F .text	00000073              CTestScriptMgr::~CTestScriptMgr()
001c8430 l     F .text	0000001f              CTestScriptMgr::~CTestScriptMgr()
001c8450 l     F .text	000000d2              CTestScriptMgr::CTestScriptMgr()
001c8450 l     F .text	000000d2              CTestScriptMgr::CTestScriptMgr()
001c8050 l     F .text	0000001d              CTestScriptMgr::ErrorIfNotInitted()
001c7fe0 l     F .text	0000006a              CTestScriptMgr::FindLoop(char const*)
001c7fa0 l     F .text	0000000f              CTestScriptMgr::IsCheckPointWaiting() const
001c7d30 l     F .text	00000010              CTestScriptMgr::IsInitted() const
001c7d40 l     F .text	00000020              CTestScriptMgr::IsTimerWaiting() const
001c8210 l     F .text	000000db              CTestScriptMgr::LoopCount(char const*, int)
001c8120 l     F .text	000000e5              CTestScriptMgr::LoopForNumSeconds(char const*, double)
001c7d60 l     F .text	00000198              CTestScriptMgr::RunCommands()
001c8070 l     F .text	000000ac              CTestScriptMgr::SetWaitCheckPoint(char const*, bool)
001c7fb0 l     F .text	00000029              CTestScriptMgr::SetWaitTime(float)
001c82f0 l     F .text	000000b5              CTestScriptMgr::StartLoop(char const*)
001c7f00 l     F .text	0000009e              CTestScriptMgr::StartTestScript(char const*)
001c7cf0 l     F .text	00000034              CTestScriptMgr::Term()
00213bf0 l     F .text	0000001b              CTextureReference::~CTextureReference()
00213bf0 l     F .text	0000001b              CTextureReference::~CTextureReference()
00213950 l     F .text	0000000e              CTextureReference::CTextureReference()
00213950 l     F .text	0000000e              CTextureReference::CTextureReference()
00213960 l     F .text	00000022              CTextureReference::CTextureReference(CTextureReference const&)
00213960 l     F .text	00000022              CTextureReference::CTextureReference(CTextureReference const&)
00213b60 l     F .text	00000085              CTextureReference::Init(char const*, char const*, bool)
00213b10 l     F .text	0000004a              CTextureReference::Init(ITexture*)
00213ab0 l     F .text	0000005c              CTextureReference::InitProceduralTexture(char const*, char const*, int, int, ImageFormat, int)
00213a20 l     F .text	00000089              CTextureReference::InitRenderTarget(int, int, RenderTargetSizeMode_t, ImageFormat, MaterialRenderTargetDepth_t, bool, char*)
00213990 l     F .text	00000022              CTextureReference::operator=(CTextureReference&)
002139c0 l     F .text	00000054              CTextureReference::Shutdown(bool)
001c4090 l     F .text	00000009              CThreadLocalInt<int>::~CThreadLocalInt()
001c4090 l     F .text	00000009              CThreadLocalInt<int>::~CThreadLocalInt()
000c0510 l     F .text	00000009              CThreadLocalInt<unsigned int>::~CThreadLocalInt()
000c0510 l     F .text	00000009              CThreadLocalInt<unsigned int>::~CThreadLocalInt()
001454b0 l     F .text	00000009              CThreadMutex::~CThreadMutex()
001454b0 l     F .text	00000009              CThreadMutex::~CThreadMutex()
0024b644 l     O .rodata	00000008              CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
001c5ae0 l     F .text	00000029              CTier1AppSystem<IDedicatedServerAPI, 0>::Connect(void* (*)(char const*, int*))
001c5ac0 l     F .text	00000016              CTier1AppSystem<IDedicatedServerAPI, 0>::Disconnect()
001c5b10 l     F .text	00000034              CTier1AppSystem<IDedicatedServerAPI, 0>::Init()
001c5a90 l     F .text	00000022              CTier1AppSystem<IDedicatedServerAPI, 0>::Shutdown()
001c5b50 l     F .text	0000005f              CTier2AppSystem<IDedicatedServerAPI, 0>::Connect(void* (*)(char const*, int*))
001c5bb0 l     F .text	00000035              CTier2AppSystem<IDedicatedServerAPI, 0>::Disconnect()
001c5c60 l     F .text	00000034              CTier2AppSystem<IDedicatedServerAPI, 0>::Init()
001c5c30 l     F .text	00000022              CTier2AppSystem<IDedicatedServerAPI, 0>::Shutdown()
001c5ca0 l     F .text	00000078              CTier3AppSystem<IDedicatedServerAPI, 0>::Connect(void* (*)(char const*, int*))
001c5bf0 l     F .text	00000040              CTier3AppSystem<IDedicatedServerAPI, 0>::Disconnect()
000bbba0 l     F .text	000002fd              ct_init(TState&, unsigned short*)
001ca250 l     F .text	00000045              CToolFrameworkInternal::AdjustEngineViewport(int&, int&, int&, int&)
001c9dd0 l     F .text	00000055              CToolFrameworkInternal::CanQuit()
001c9cd0 l     F .text	00000051              CToolFrameworkInternal::ClientInit(void* (*)(char const*, int*))
001ca890 l     F .text	00000023              CToolFrameworkInternal::ClientLevelInitPostEntityAllTools()
001ca8d0 l     F .text	00000023              CToolFrameworkInternal::ClientLevelInitPreEntityAllTools()
001ca810 l     F .text	00000023              CToolFrameworkInternal::ClientLevelShutdownPostEntityAllTools()
001ca850 l     F .text	00000023              CToolFrameworkInternal::ClientLevelShutdownPreEntityAllTools()
001ca790 l     F .text	00000023              CToolFrameworkInternal::ClientPostRenderAllTools()
001ca7d0 l     F .text	00000023              CToolFrameworkInternal::ClientPreRenderAllTools()
001c9d80 l     F .text	00000041              CToolFrameworkInternal::ClientShutdown()
001c9bd0 l     F .text	0000000a              CToolFrameworkInternal::Connect(void* (*)(char const*, int*))
001cb030 l     F .text	00000077              CToolFrameworkInternal::~CToolFrameworkInternal()
001cb030 l     F .text	00000077              CToolFrameworkInternal::~CToolFrameworkInternal()
001c9be0 l     F .text	00000005              CToolFrameworkInternal::Disconnect()
001cab60 l     F .text	0000002a              CToolFrameworkInternal::GetEntityData(char const*)
001ca060 l     F .text	00000047              CToolFrameworkInternal::GetSoundSpatialization(int, int, SpatializationInfo_t&)
001c9ee0 l     F .text	0000000b              CToolFrameworkInternal::GetToolCount()
001ca180 l     F .text	00000037              CToolFrameworkInternal::GetToolName(int)
001c9f10 l     F .text	00000028              CToolFrameworkInternal::GetToolSystem(int) const
001c9ef0 l     F .text	00000017              CToolFrameworkInternal::GetTopmostTool()
001ca500 l     F .text	00000023              CToolFrameworkInternal::HostRunFrameBegin()
001ca4d0 l     F .text	00000023              CToolFrameworkInternal::HostRunFrameEnd()
001c9c00 l     F .text	00000018              CToolFrameworkInternal::Init()
001c9e30 l     F .text	0000000c              CToolFrameworkInternal::InToolMode()
001ca910 l     F .text	0000007b              CToolFrameworkInternal::InvokeMethodInt(void (IToolSystem::*)(int), int)
001ca400 l     F .text	0000006c              CToolFrameworkInternal::InvokeMethod(void (IToolSystem::*)())
001ca310 l     F .text	00000024              CToolFrameworkInternal::IsThirdPersonCamera()
001ca2e0 l     F .text	00000024              CToolFrameworkInternal::IsToolRecording()
001ca0e0 l     F .text	00000024              CToolFrameworkInternal::IsTopmostTool(IToolSystem const*)
001cad80 l     F .text	00000122              CToolFrameworkInternal::LoadTools()
001cab90 l     F .text	000001e8              CToolFrameworkInternal::LoadToolsFromLibrary(char const*)
001c9e40 l     F .text	00000050              CToolFrameworkInternal::LookupProxy(char const*)
001ca380 l     F .text	00000079              CToolFrameworkInternal::PostInit()
001ca0b0 l     F .text	0000002f              CToolFrameworkInternal::PostMessage(KeyValues*)
001c9e90 l     F .text	00000049              CToolFrameworkInternal::PostToolMessage(unsigned int, KeyValues*)
001c9bf0 l     F .text	00000007              CToolFrameworkInternal::QueryInterface(char const*)
001ca4a0 l     F .text	00000023              CToolFrameworkInternal::RenderFrameBegin()
001ca470 l     F .text	00000023              CToolFrameworkInternal::RenderFrameEnd()
001ca610 l     F .text	00000023              CToolFrameworkInternal::ServerFrameUpdatePostEntityThinkAllTools()
001ca650 l     F .text	00000023              CToolFrameworkInternal::ServerFrameUpdatePreEntityThinkAllTools()
001c9c70 l     F .text	00000051              CToolFrameworkInternal::ServerInit(void* (*)(char const*, int*))
001ca710 l     F .text	00000023              CToolFrameworkInternal::ServerLevelInitPostEntityAllTools()
001ca750 l     F .text	00000023              CToolFrameworkInternal::ServerLevelInitPreEntityAllTools()
001ca690 l     F .text	00000023              CToolFrameworkInternal::ServerLevelShutdownPostEntityAllTools()
001ca6d0 l     F .text	00000023              CToolFrameworkInternal::ServerLevelShutdownPreEntityAllTools()
001ca5d0 l     F .text	00000023              CToolFrameworkInternal::ServerPreClientUpdateAllTools()
001ca590 l     F .text	00000023              CToolFrameworkInternal::ServerPreSetupVisibilityAllTools()
001c9d30 l     F .text	00000041              CToolFrameworkInternal::ServerShutdown()
001ca1c0 l     F .text	00000024              CToolFrameworkInternal::SetupAudioState(AudioState_t&)
001ca200 l     F .text	0000003c              CToolFrameworkInternal::SetupEngineView(Vector&, QAngle&, float&)
001ca350 l     F .text	00000027              CToolFrameworkInternal::ShouldGameRenderView()
001cab50 l     F .text	00000009              CToolFrameworkInternal::Shutdown()
001caa10 l     F .text	00000048              CToolFrameworkInternal::ShutdownModules()
001caa60 l     F .text	00000078              CToolFrameworkInternal::ShutdownToolDictionaries()
001caae0 l     F .text	00000067              CToolFrameworkInternal::ShutdownTools()
001c9fe0 l     F .text	0000007a              CToolFrameworkInternal::SwitchToTool(char const*)
001ca110 l     F .text	0000006a              CToolFrameworkInternal::SwitchToTool(int)
001c9c20 l     F .text	00000044              CToolFrameworkInternal::Think(bool)
001ca990 l     F .text	0000002a              CToolFrameworkInternal::VGui_PostRenderAllTools(int)
001ca530 l     F .text	00000023              CToolFrameworkInternal::VGui_PostSimulateAllTools()
001ca9d0 l     F .text	0000002a              CToolFrameworkInternal::VGui_PreRenderAllTools(int)
001ca560 l     F .text	00000023              CToolFrameworkInternal::VGui_PreSimulateAllTools()
002c2458 l     O .ctors	00000000              __CTOR_END__
002c2174 l     O .ctors	00000000              __CTOR_LIST__
002c2174 l    d  .ctors	00000000              .ctors
001da030 l     F .text	00000123              CTouchLinks::EnumElement(IHandleEntity*)
00116280 l     F .text	00000007              CTraceFilter::GetTraceType() const
00116290 l     F .text	0000000a              CTraceFilterHitAll::ShouldHitEntity(IHandleEntity*, int)
0019b4a0 l     F .text	00000007              CTraceFilterWorldAndPropsOnly::GetTraceType() const
0019b490 l     F .text	00000007              CTraceFilterWorldAndPropsOnly::ShouldHitEntity(IHandleEntity*, int)
000e4cd0 l     F .text	000000d2              CTraceInfoPool::~CTraceInfoPool()
000e4cd0 l     F .text	000000d2              CTraceInfoPool::~CTraceInfoPool()
001d9db0 l     F .text	00000271              CTriggerMoved::EnumElement(IHandleEntity*)
0016d4b0 l     F .text	00000047              CTSListBase::~CTSListBase()
0016d4b0 l     F .text	00000047              CTSListBase::~CTSListBase()
0016d470 l     F .text	0000003a              CTSListBase::CTSListBase()
0016d470 l     F .text	0000003a              CTSListBase::CTSListBase()
00196610 l     F .text	0000004b              CTSListBase::Detach()
001973a0 l     F .text	000000aa              CTSList<CVarBitVec*>::~CTSList()
001973a0 l     F .text	000000aa              CTSList<CVarBitVec*>::~CTSList()
0016d500 l     F .text	0000019d              CTSQueue<loopback_t*, false>::~CTSQueue()
0016d500 l     F .text	0000019d              CTSQueue<loopback_t*, false>::~CTSQueue()
0016d420 l     F .text	00000047              CTSSimpleList<NetScratchBuffer_t>::~CTSSimpleList()
0016d420 l     F .text	00000047              CTSSimpleList<NetScratchBuffer_t>::~CTSSimpleList()
000bc380 l     F .text	00000274              ct_tally(TState&, int, int)
0020ae20 l     F .text	00000072              Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0020ad10 l     F .text	0000010d              Cubic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001c23b0 l     F .text	0000005a              CUploadGameStats::GetPseudoUniqueId(char*, unsigned int)
001c2780 l     F .text	00000044              CUploadGameStats::InitConnection()
001c2390 l     F .text	00000007              CUploadGameStats::IsCyberCafeUser()
001c2410 l     F .text	00000022              CUploadGameStats::IsGameStatsLoggingEnabled()
001c23a0 l     F .text	00000007              CUploadGameStats::IsHDREnabled()
001c2440 l     F .text	00000130              CUploadGameStats::UpdateConnection()
001c2a90 l     F .text	0000002d              CUploadGameStats::UploadGameStats(char const*, unsigned int, unsigned int, void const*)
0035732c l     O .bss	00000004              current_skill
001f46b0 l     F .text	0000002c              CUtlBuffer::ActivateByteSwapping(bool)
001f4720 l     F .text	00000069              CUtlBuffer::AddNullTermination()
001f52f0 l     F .text	00000073              CUtlBuffer::AssumeMemory(void*, int, int, int)
001f3270 l     F .text	00000095              CUtlBuffer::CheckArbitraryPeekGet(int, int&)
001f3050 l     F .text	00000083              CUtlBuffer::CheckGet(int)
001f30e0 l     F .text	0000002e              CUtlBuffer::CheckPeekGet(int, int)
001f4640 l     F .text	0000006d              CUtlBuffer::CheckPut(int)
001f5370 l     F .text	000003c7              CUtlBuffer::ConvertCRLF(CUtlBuffer&)
0008c4c0 l     F .text	00000032              CUtlBuffer::~CUtlBuffer()
0008c4c0 l     F .text	00000032              CUtlBuffer::~CUtlBuffer()
001f5740 l     F .text	00000103              CUtlBuffer::CUtlBuffer(int, int, int)
001f5740 l     F .text	00000103              CUtlBuffer::CUtlBuffer(int, int, int)
001f51c0 l     F .text	000000a7              CUtlBuffer::CUtlBuffer(void const*, int, int)
001f51c0 l     F .text	000000a7              CUtlBuffer::CUtlBuffer(void const*, int, int)
001f4260 l     F .text	0000015f              CUtlBuffer::EatCPPComment()
001f37a0 l     F .text	0000005b              CUtlBuffer::EatWhiteSpace()
001f2e60 l     F .text	000000c9              CUtlBuffer::EnsureCapacity(int)
001f4050 l     F .text	00000085              CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
001f3f50 l     F .text	000000f1              CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
001f40e0 l     F .text	00000179              CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
001c25b0 l     F .text	000000a9              CUtlBuffer::GetInt()
001f3850 l     F .text	000000db              CUtlBuffer::GetLine(char*, int)
001f2b10 l     F .text	00000007              CUtlBuffer::GetOverflow(int)
001f3930 l     F .text	000000f4              CUtlBuffer::GetStringInternal(char*, unsigned int)
001f3110 l     F .text	00000106              CUtlBuffer::GetToken(char const*)
001f33c0 l     F .text	00000059              CUtlBuffer::GetUpTo(void*, int)
001f3800 l     F .text	0000004e              CUtlBuffer::Get(void*, int)
001f4710 l     F .text	0000000f              CUtlBuffer::IsBigEndian()
001f2f90 l     F .text	00000025              CUtlBuffer::OnGetOverflow(int)
001f2f60 l     F .text	00000025              CUtlBuffer::OnPutOverflow(int)
001f43c0 l     F .text	0000027e              CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
001f3d50 l     F .text	000001fe              CUtlBuffer::ParseToken(char const*, char const*, char*, int)
001f3630 l     F .text	00000168              CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
001f3220 l     F .text	00000041              CUtlBuffer::PeekGet(int, int)
001f3310 l     F .text	000000a8              CUtlBuffer::PeekLineLength()
001f34f0 l     F .text	00000134              CUtlBuffer::PeekStringLength()
001f3420 l     F .text	0000005d              CUtlBuffer::PeekStringMatch(int, char const*, int)
001f3480 l     F .text	00000066              CUtlBuffer::PeekWhiteSpace(int)
001f4a80 l     F .text	00000021              CUtlBuffer::Printf(char const*, ...)
001f4dd0 l     F .text	00000205              CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
001f4ab0 l     F .text	00000316              CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
001f5860 l     F .text	000000a1              CUtlBuffer::PutOverflow(int)
001f4870 l     F .text	000001b9              CUtlBuffer::PutString(char const*)
001f47f0 l     F .text	00000071              CUtlBuffer::Put(void const*, int)
001f3d20 l     F .text	00000021              CUtlBuffer::Scanf(char const*, ...)
001f2fc0 l     F .text	00000085              CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
001f4790 l     F .text	0000005f              CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
001f46e0 l     F .text	0000002c              CUtlBuffer::SetBigEndian(bool)
001f2e10 l     F .text	00000042              CUtlBuffer::SetBufferType(bool, bool)
001f5270 l     F .text	0000007a              CUtlBuffer::SetExternalBuffer(void*, int, int, int)
001f2f30 l     F .text	00000022              CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
001f4fe0 l     F .text	0000005f              CUtlBuffer::Swap(CUtlBuffer&)
001f5040 l     F .text	00000044              CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
001f4a30 l     F .text	00000046              CUtlBuffer::VaPrintf(char const*, char*)
001f3a30 l     F .text	000002ed              CUtlBuffer::VaScanf(char const*, char*)
001f2bc0 l     F .text	000000fe              CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
001f2bc0 l     F .text	000000fe              CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
001f2b20 l     F .text	00000073              CUtlCharConversion::FindConversion(char const*, int*)
001f2de0 l     F .text	00000013              CUtlCharConversion::GetConversionLength(char) const
001f2dc0 l     F .text	00000013              CUtlCharConversion::GetConversionString(char) const
001f2da0 l     F .text	0000000b              CUtlCharConversion::GetDelimiter() const
001f2db0 l     F .text	0000000b              CUtlCharConversion::GetDelimiterLength() const
001f2d90 l     F .text	0000000c              CUtlCharConversion::GetEscapeChar() const
001f2e00 l     F .text	0000000b              CUtlCharConversion::MaxConversionLength() const
0015b7d0 l     F .text	0000004a              CUtlConstStringBase<char>::Set(char const*)
001f2cc0 l     F .text	000000c8              CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
001f2cc0 l     F .text	000000c8              CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
001f2ae0 l     F .text	00000022              CUtlCStringConversion::FindConversion(char const*, int*)
00133370 l     F .text	00000129              CUtlDict<CMapListItem, int>::Find(char const*) const
001351c0 l     F .text	00000036              CUtlDict<CMapListItem, int>::Insert(char const*, CMapListItem const&)
001339d0 l     F .text	00000124              CUtlDict<CMapListItem, int>::Purge()
00185d10 l     F .text	0000013c              CUtlDict<CPureServerWhitelist::CCommand*, int>::~CUtlDict()
00185d10 l     F .text	0000013c              CUtlDict<CPureServerWhitelist::CCommand*, int>::~CUtlDict()
00180350 l     F .text	00000085              CUtlDict<CPureServerWhitelist::CCommand*, int>::CUtlDict(int, int, int)
00180350 l     F .text	00000085              CUtlDict<CPureServerWhitelist::CCommand*, int>::CUtlDict(int, int, int)
001803e0 l     F .text	00000131              CUtlDict<CPureServerWhitelist::CCommand*, int>::Find(char const*) const
00185bd0 l     F .text	0000013c              CUtlDict<CPureServerWhitelist::CCommand*, int>::PurgeAndDeleteElements()
000c58c0 l     F .text	00000032              CUtlDict<int, int>::~CUtlDict()
000c58c0 l     F .text	00000032              CUtlDict<int, int>::~CUtlDict()
000c4740 l     F .text	00000131              CUtlDict<int, int>::Find(char const*) const
000c54c0 l     F .text	00000124              CUtlDict<int, int>::RemoveAll()
001c6c70 l     F .text	00000149              CUtlDict<int, unsigned short>::~CUtlDict()
001c6c70 l     F .text	00000149              CUtlDict<int, unsigned short>::~CUtlDict()
00203800 l     F .text	00000114              CUtlDict<int, unsigned short>::Find(char const*) const
0013dcf0 l     F .text	0000013c              CUtlDict<memhandle_t__*, int>::~CUtlDict()
0013dcf0 l     F .text	0000013c              CUtlDict<memhandle_t__*, int>::~CUtlDict()
001f7c00 l     F .text	0000005a              CUtlFilenameSymbolTable::~CUtlFilenameSymbolTable()
001f7c00 l     F .text	0000005a              CUtlFilenameSymbolTable::~CUtlFilenameSymbolTable()
001f7330 l     F .text	000000a7              CUtlFilenameSymbolTable::CUtlFilenameSymbolTable()
001f7330 l     F .text	000000a7              CUtlFilenameSymbolTable::CUtlFilenameSymbolTable()
001f73e0 l     F .text	00000201              CUtlFilenameSymbolTable::FindFileName(char const*)
001f7c60 l     F .text	0000047a              CUtlFilenameSymbolTable::FindOrAddFileName(char const*)
001f7ba0 l     F .text	00000056              CUtlFilenameSymbolTable::RemoveAll()
001f75f0 l     F .text	000000c6              CUtlFilenameSymbolTable::String(void* const&, char*, int)
000de1a0 l     F .text	00000044              CUtlFixedLinkedList<CEventInfo>::~CUtlFixedLinkedList()
000de1a0 l     F .text	00000044              CUtlFixedLinkedList<CEventInfo>::~CUtlFixedLinkedList()
001dfc20 l     F .text	000000a8              CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> >::Grow(int)
000de230 l     F .text	000000a8              CUtlFixedMemory<UtlLinkedListElem_t<CEventInfo, int> >::Grow(int)
00197830 l     F .text	000000a8              CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> >::Grow(int)
001904a0 l     F .text	0000003c              CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> >::Purge() [clone .isra.53]
00197600 l     F .text	000000a8              CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> >::Grow(int)
00190460 l     F .text	0000003c              CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> >::Purge() [clone .isra.42]
000b5500 l     F .text	000001df              CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::CUtlHash(int, int, int, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs)
000b5500 l     F .text	000001df              CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::CUtlHash(int, int, int, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs)
000a3940 l     F .text	00000073              CUtlHash<DispCollPlaneIndex_t, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs>::~CUtlHash()
000a3940 l     F .text	00000073              CUtlHash<DispCollPlaneIndex_t, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs>::~CUtlHash()
000a3e70 l     F .text	000001d7              CUtlHash<DispCollPlaneIndex_t, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs>::CUtlHash(int, int, int, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs)
000a3e70 l     F .text	000001d7              CUtlHash<DispCollPlaneIndex_t, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs>::CUtlHash(int, int, int, CPlaneIndexHashFuncs, CPlaneIndexHashFuncs)
00196660 l     F .text	000000cc              CUtlHashFixed<int, 512, CUtlHashFixedGenericHash<512> >::~CUtlHashFixed()
00196660 l     F .text	000000cc              CUtlHashFixed<int, 512, CUtlHashFixedGenericHash<512> >::~CUtlHashFixed()
001eb3c0 l     F .text	000001e7              CUtlHash<int, CKeyValuesGrowableStringTable::CLookupFunctor&, CKeyValuesGrowableStringTable::CLookupFunctor&>::CUtlHash(int, int, int, CKeyValuesGrowableStringTable::CLookupFunctor&, CKeyValuesGrowableStringTable::CLookupFunctor&)
001eb3c0 l     F .text	000001e7              CUtlHash<int, CKeyValuesGrowableStringTable::CLookupFunctor&, CKeyValuesGrowableStringTable::CLookupFunctor&>::CUtlHash(int, int, int, CKeyValuesGrowableStringTable::CLookupFunctor&, CKeyValuesGrowableStringTable::CLookupFunctor&)
0015bc80 l     F .text	0000015f              CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::EqualProxy, char const*>::BumpEntry(unsigned int)
0015bde0 l     F .text	00000128              CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::EqualProxy, char const*>::DoInsertUnconstructed(unsigned int, bool)
0015bf10 l     F .text	0000011b              CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::EqualProxy, char const*>::DoRealloc(int)
0015af20 l     F .text	00000044              CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::EqualProxy, char const*>::RemoveAll()
001f9ee0 l     F .text	0000015f              CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::BumpEntry(unsigned int)
001fa040 l     F .text	00000128              CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoInsertUnconstructed(unsigned int, bool)
001fa170 l     F .text	0000011b              CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoRealloc(int)
001f8220 l     F .text	00000044              CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::RemoveAll()
00153410 l     F .text	00000142              CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::BumpEntry(unsigned int)
00153560 l     F .text	000000e7              CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoInsertUnconstructed(unsigned int, bool)
00153650 l     F .text	00000142              CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoRealloc(int)
001538f0 l     F .text	00000132              CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::BumpEntry(unsigned int)
00153a30 l     F .text	000000e7              CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::DoInsertUnconstructed(unsigned int, bool)
00153b20 l     F .text	0000012a              CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::DoRealloc(int)
001f5850 l     F .text	00000009              CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
001f5850 l     F .text	00000009              CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
001f5140 l     F .text	0000007c              CUtlInplaceBuffer::InplaceGetLinePtr()
001f5090 l     F .text	000000a7              CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
0008f960 l     F .text	0000016f              CUtlLinkedList<CBSPTreeData::HandleInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool)
0008ee10 l     F .text	0000006b              CUtlLinkedList<CBSPTreeData::HandleInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInfo_t, unsigned short>, unsigned short> >::RemoveAll()
0008f0c0 l     F .text	000000a4              CUtlLinkedList<CBSPTreeData::HandleInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInfo_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
0008f5e0 l     F .text	0000016f              CUtlLinkedList<CBSPTreeData::HandleInLeaf_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInLeaf_t, unsigned short>, unsigned short> >::AllocInternal(bool)
0008ef20 l     F .text	00000098              CUtlLinkedList<CBSPTreeData::HandleInLeaf_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInLeaf_t, unsigned short>, unsigned short> >::RemoveAll()
0008f220 l     F .text	000000a4              CUtlLinkedList<CBSPTreeData::HandleInLeaf_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInLeaf_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
001a3490 l     F .text	00000120              CUtlLinkedList<CChangeTrack*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CChangeTrack*, int>, int> >::AllocInternal(bool)
001a3330 l     F .text	0000008e              CUtlLinkedList<CChangeTrack*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CChangeTrack*, int>, int> >::~CUtlLinkedList()
001a3330 l     F .text	0000008e              CUtlLinkedList<CChangeTrack*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CChangeTrack*, int>, int> >::~CUtlLinkedList()
001a3640 l     F .text	000000a3              CUtlLinkedList<CChangeTrack*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CChangeTrack*, int>, int> >::InsertBefore(int, CChangeTrack* const&)
001a35b0 l     F .text	00000086              CUtlLinkedList<CChangeTrack*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CChangeTrack*, int>, int> >::Unlink(int)
00101e60 l     F .text	0000016f              CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::AllocInternal(bool)
0010cf00 l     F .text	0000001f              CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
0010cf00 l     F .text	0000001f              CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
00102070 l     F .text	000000b8              CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::InsertBefore(unsigned short, CClientSendTable* const&)
0010ce90 l     F .text	0000006b              CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::RemoveAll()
00101fd0 l     F .text	0000009c              CUtlLinkedList<CClientSendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short> >::Unlink(unsigned short)
001dfcd0 l     F .text	0000017e              CUtlLinkedList<CCommandBuffer::Command_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> > >::AllocInternal(bool)
001dfbb0 l     F .text	00000062              CUtlLinkedList<CCommandBuffer::Command_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> > >::LinkBefore(int, int)
001df930 l     F .text	00000190              CUtlLinkedList<CCommandBuffer::Command_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> > >::RemoveAll()
001dfac0 l     F .text	000000e8              CUtlLinkedList<CCommandBuffer::Command_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CCommandBuffer::Command_t, int> > >::Unlink(int)
000f9a00 l     F .text	0000016f              CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::AllocInternal(bool)
000fa5d0 l     F .text	0000003a              CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::~CUtlLinkedList()
000fa5d0 l     F .text	0000003a              CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::~CUtlLinkedList()
000fa500 l     F .text	000000c3              CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::RemoveAll()
000f9690 l     F .text	0000009c              CUtlLinkedList<CDispDecalFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short> >::Unlink(unsigned short)
000f9c40 l     F .text	0000016f              CUtlLinkedList<CDispDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short> >::AllocInternal(bool)
000fa4c0 l     F .text	0000003a              CUtlLinkedList<CDispDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short> >::~CUtlLinkedList()
000fa4c0 l     F .text	0000003a              CUtlLinkedList<CDispDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short> >::~CUtlLinkedList()
000fa420 l     F .text	00000098              CUtlLinkedList<CDispDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short> >::RemoveAll()
000f9730 l     F .text	000000ac              CUtlLinkedList<CDispDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short> >::Unlink(unsigned short)
000fa0c0 l     F .text	0000016f              CUtlLinkedList<CDispShadowDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short> >::AllocInternal(bool)
000fa2d0 l     F .text	0000003a              CUtlLinkedList<CDispShadowDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short> >::~CUtlLinkedList()
000fa2d0 l     F .text	0000003a              CUtlLinkedList<CDispShadowDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short> >::~CUtlLinkedList()
000fa230 l     F .text	00000098              CUtlLinkedList<CDispShadowDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short> >::RemoveAll()
000f9890 l     F .text	0000009c              CUtlLinkedList<CDispShadowDecal, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short> >::Unlink(unsigned short)
000f9e80 l     F .text	0000016f              CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::AllocInternal(bool)
000fa3e0 l     F .text	0000003a              CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::~CUtlLinkedList()
000fa3e0 l     F .text	0000003a              CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::~CUtlLinkedList()
000fa310 l     F .text	000000c3              CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::RemoveAll()
000f97e0 l     F .text	000000a4              CUtlLinkedList<CDispShadowFragment, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short> >::Unlink(unsigned short)
00105b20 l     F .text	00000120              CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::AllocInternal(bool)
00105990 l     F .text	0000001f              CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::~CUtlLinkedList()
00105990 l     F .text	0000001f              CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::~CUtlLinkedList()
00105cd0 l     F .text	000000a3              CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::InsertBefore(int, CDTIRecvTable* const&)
001059b0 l     F .text	000000b6              CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::PurgeAndDeleteElements()
00105930 l     F .text	00000059              CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::RemoveAll()
00105c40 l     F .text	00000086              CUtlLinkedList<CDTIRecvTable*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int> >::Unlink(int)
00106b00 l     F .text	0000016f              CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::AllocInternal(bool)
00106a00 l     F .text	0000001f              CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
00106a00 l     F .text	0000001f              CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
00106d10 l     F .text	000000b8              CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::InsertBefore(unsigned short, CDTISendTable* const&)
00106990 l     F .text	0000006b              CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::RemoveAll()
00106c70 l     F .text	0000009c              CUtlLinkedList<CDTISendTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short> >::Unlink(unsigned short)
000ddfa0 l     F .text	000001f8              CUtlLinkedList<CEventInfo, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CEventInfo, int> > >::RemoveAll()
001a6ee0 l     F .text	0000016f              CUtlLinkedList<CFrameSnapshot*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short> >::AllocInternal(bool)
001a6ca0 l     F .text	00000090              CUtlLinkedList<CFrameSnapshot*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short> >::~CUtlLinkedList()
001a6ca0 l     F .text	00000090              CUtlLinkedList<CFrameSnapshot*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short> >::~CUtlLinkedList()
001a7050 l     F .text	000000b8              CUtlLinkedList<CFrameSnapshot*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short> >::InsertBefore(unsigned short, CFrameSnapshot* const&)
001a6d70 l     F .text	0000009c              CUtlLinkedList<CFrameSnapshot*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short> >::Unlink(unsigned short)
001c87c0 l     F .text	00000120              CUtlLinkedList<CLoopInfo*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int> >::AllocInternal(bool)
001c85f0 l     F .text	0000008e              CUtlLinkedList<CLoopInfo*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int> >::~CUtlLinkedList()
001c85f0 l     F .text	0000008e              CUtlLinkedList<CLoopInfo*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int> >::~CUtlLinkedList()
001c88e0 l     F .text	000000a3              CUtlLinkedList<CLoopInfo*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int> >::InsertBefore(int, CLoopInfo* const&)
001c8680 l     F .text	00000086              CUtlLinkedList<CLoopInfo*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int> >::Unlink(int)
0013d600 l     F .text	0000017f              CUtlLinkedList<CModelRender::ModelInstance_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short> >::AllocInternal(bool)
0013d070 l     F .text	0000009b              CUtlLinkedList<CModelRender::ModelInstance_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
0013d070 l     F .text	0000009b              CUtlLinkedList<CModelRender::ModelInstance_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
0013d780 l     F .text	0000014a              CUtlLinkedList<CModelRender::ModelInstance_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short> >::InsertBefore(unsigned short)
0013d1c0 l     F .text	000000d5              CUtlLinkedList<CModelRender::ModelInstance_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00179070 l     F .text	0000016f              CUtlLinkedList<COverlayMgr::RenderQueueHead_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short> >::AllocInternal(bool)
001787f0 l     F .text	0000006b              CUtlLinkedList<COverlayMgr::RenderQueueHead_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short> >::RemoveAll()
00178a50 l     F .text	000000ac              CUtlLinkedList<COverlayMgr::RenderQueueHead_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00102200 l     F .text	0000016f              CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::AllocInternal(bool)
0010ce70 l     F .text	0000001f              CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::~CUtlLinkedList()
0010ce70 l     F .text	0000001f              CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::~CUtlLinkedList()
00102410 l     F .text	000000b8              CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::InsertBefore(unsigned short, CRecvDecoder* const&)
0010d5f0 l     F .text	000000e3              CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::PurgeAndDeleteElements()
0010ce00 l     F .text	0000006b              CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::RemoveAll()
00102370 l     F .text	0000009c              CUtlLinkedList<CRecvDecoder*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short> >::Unlink(unsigned short)
001bd630 l     F .text	00000120              CUtlLinkedList<CServerRemoteAccess::DataResponse_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int> >::AllocInternal(bool)
001bd750 l     F .text	000000c3              CUtlLinkedList<CServerRemoteAccess::DataResponse_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int> >::InsertBefore(int)
001bd1b0 l     F .text	00000096              CUtlLinkedList<CServerRemoteAccess::DataResponse_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int> >::Unlink(int)
001bd300 l     F .text	00000119              CUtlLinkedList<CServerRemoteAccess::ListenerStore_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int> >::AllocInternal(bool)
001bcf80 l     F .text	00000088              CUtlLinkedList<CServerRemoteAccess::ListenerStore_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int> >::~CUtlLinkedList()
001bcf80 l     F .text	00000088              CUtlLinkedList<CServerRemoteAccess::ListenerStore_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int> >::~CUtlLinkedList()
001bd4b0 l     F .text	000000c3              CUtlLinkedList<CServerRemoteAccess::ListenerStore_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int> >::InsertBefore(int)
001bd420 l     F .text	00000086              CUtlLinkedList<CServerRemoteAccess::ListenerStore_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int> >::Unlink(int)
001b9b80 l     F .text	0000016f              CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::AllocInternal(bool)
001b9810 l     F .text	000000a8              CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::~CUtlLinkedList()
001b9810 l     F .text	000000a8              CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::~CUtlLinkedList()
001b9dd0 l     F .text	00000113              CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::InsertAfter(unsigned short)
001b9cf0 l     F .text	000000d8              CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::InsertBefore(unsigned short)
001b9970 l     F .text	0000009c              CUtlLinkedList<CUtlBuffer, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short> >::Unlink(unsigned short)
0015bb10 l     F .text	0000016f              CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, CNetworkStringTableItem>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, CNetworkStringTableItem>, unsigned short>, unsigned short> >::AllocInternal(bool)
0015b820 l     F .text	000000b0              CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, CNetworkStringTableItem>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, CNetworkStringTableItem>, unsigned short>, unsigned short> >::RemoveAll()
0015d6c0 l     F .text	0000009c              CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, CNetworkStringTableItem>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, CNetworkStringTableItem>, unsigned short>, unsigned short> >::Unlink(unsigned short)
001f9d70 l     F .text	0000016f              CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::AllocInternal(bool)
001f9c10 l     F .text	00000088              CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::RemoveAll()
001fa290 l     F .text	0000009c              CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::Unlink(unsigned short)
00146c00 l     F .text	00000090              CUtlLinkedList<CUtlKeyValuePair<model_t*, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<model_t*, empty_t>, unsigned short>, unsigned short> >::~CUtlLinkedList()
00146c00 l     F .text	00000090              CUtlLinkedList<CUtlKeyValuePair<model_t*, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<model_t*, empty_t>, unsigned short>, unsigned short> >::~CUtlLinkedList()
001e3780 l     F .text	0000016f              CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
001e38f0 l     F .text	000000a4              CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
001c4310 l     F .text	0000016f              CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::AllocInternal(bool)
001c40e0 l     F .text	000000a8              CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::~CUtlLinkedList()
001c40e0 l     F .text	000000a8              CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::~CUtlLinkedList()
001c4480 l     F .text	000000b8              CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::InsertBefore(unsigned short)
001c4190 l     F .text	0000009c              CUtlLinkedList<CUtlString, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short> >::Unlink(unsigned short)
00197a60 l     F .text	00000189              CUtlLinkedList<EntityInfo_t, unsigned short, false, unsigned short, CUtlMemoryStack<UtlLinkedListElem_t<EntityInfo_t, unsigned short>, unsigned short, 65535u, 1024u, 0u> >::AllocInternal(bool)
00197590 l     F .text	0000006b              CUtlLinkedList<EntityInfo_t, unsigned short, false, unsigned short, CUtlMemoryStack<UtlLinkedListElem_t<EntityInfo_t, unsigned short>, unsigned short, 65535u, 1024u, 0u> >::RemoveAll()
00197bf0 l     F .text	0000009c              CUtlLinkedList<EntityInfo_t, unsigned short, false, unsigned short, CUtlMemoryStack<UtlLinkedListElem_t<EntityInfo_t, unsigned short>, unsigned short, 65535u, 1024u, 0u> >::Unlink(unsigned short)
001ba220 l     F .text	0000016f              CUtlLinkedList<float, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short> >::AllocInternal(bool)
001ba390 l     F .text	000000b8              CUtlLinkedList<float, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short> >::InsertBefore(unsigned short, float const&)
001b98c0 l     F .text	0000006b              CUtlLinkedList<float, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short> >::RemoveAll()
001b9a10 l     F .text	0000009c              CUtlLinkedList<float, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short> >::Unlink(unsigned short)
001978e0 l     F .text	0000017e              CUtlLinkedList<LeafListData_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> > >::AllocInternal(bool)
001971f0 l     F .text	000001a8              CUtlLinkedList<LeafListData_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> > >::RemoveAll()
00197100 l     F .text	000000e8              CUtlLinkedList<LeafListData_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LeafListData_t, int> > >::Unlink(int)
00178f40 l     F .text	00000056              CUtlLinkedList<moverlayfragment_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short> >::Alloc(bool)
00178dd0 l     F .text	0000016f              CUtlLinkedList<moverlayfragment_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short> >::AllocInternal(bool)
00178b80 l     F .text	000000db              CUtlLinkedList<moverlayfragment_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short> >::RemoveAll()
00178860 l     F .text	000000a4              CUtlLinkedList<moverlayfragment_t, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
0010d2e0 l     F .text	0000016f              CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::AllocInternal(bool)
0010cd60 l     F .text	0000001f              CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
0010cd60 l     F .text	0000001f              CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
0010d4f0 l     F .text	000000b8              CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::InsertBefore(unsigned short, RecvTable* const&)
0010ccb0 l     F .text	0000006b              CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::RemoveAll()
0010d450 l     F .text	0000009c              CUtlLinkedList<RecvTable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short> >::Unlink(unsigned short)
0016e120 l     F .text	0000016f              CUtlLinkedList<SendQueueItem_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<SendQueueItem_t, unsigned short>, unsigned short> >::AllocInternal(bool)
0016d790 l     F .text	000000b8              CUtlLinkedList<SendQueueItem_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<SendQueueItem_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
0016d790 l     F .text	000000b8              CUtlLinkedList<SendQueueItem_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<SendQueueItem_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
0016e290 l     F .text	00000131              CUtlLinkedList<SendQueueItem_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<SendQueueItem_t, unsigned short>, unsigned short> >::InsertBefore(unsigned short)
0016db10 l     F .text	00000058              CUtlLinkedList<SendQueueItem_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<SendQueueItem_t, unsigned short>, unsigned short> >::Remove(unsigned short)
0016da70 l     F .text	0000009c              CUtlLinkedList<SendQueueItem_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<SendQueueItem_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
001976b0 l     F .text	0000017e              CUtlLinkedList<unsigned short, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> > >::AllocInternal(bool)
00196e80 l     F .text	00000190              CUtlLinkedList<unsigned short, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> > >::RemoveAll()
00197010 l     F .text	000000e8              CUtlLinkedList<unsigned short, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<unsigned short, int> > >::Unlink(int)
00137f10 l     F .text	0000016f              CUtlLinkedList<unsigned short, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::AllocInternal(bool)
00138130 l     F .text	000000c0              CUtlLinkedList<unsigned short, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::InsertBefore(unsigned short, unsigned short const&)
00137e60 l     F .text	000000a7              CUtlLinkedList<unsigned short, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::Purge()
00138080 l     F .text	000000a4              CUtlLinkedList<unsigned short, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::Unlink(unsigned short)
0008f3a0 l     F .text	0000016f              CUtlLinkedList<unsigned short, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::AllocInternal(bool)
0008ee80 l     F .text	00000098              CUtlLinkedList<unsigned short, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::RemoveAll()
0008f170 l     F .text	000000a4              CUtlLinkedList<unsigned short, unsigned short, true, unsigned short, CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short> >::Unlink(unsigned short)
001569f0 l     F .text	0000017f              CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::AllocInternal(bool)
00156700 l     F .text	0000003a              CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::~CUtlLinkedList()
00156700 l     F .text	0000003a              CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::~CUtlLinkedList()
00156b70 l     F .text	000000cd              CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::InsertAfter(unsigned short)
00156810 l     F .text	00000104              CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::LinkAfter(unsigned short, unsigned short)
00156600 l     F .text	000000f3              CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::RemoveAll()
00156740 l     F .text	000000cd              CUtlLinkedList<VisCacheEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short> >::Unlink(unsigned short)
000f0800 l     F .text	0000002a              CUtlMap<void*, DecalEntry, unsigned short>::~CUtlMap()
000f0800 l     F .text	0000002a              CUtlMap<void*, DecalEntry, unsigned short>::~CUtlMap()
000de1f0 l     F .text	00000032              CUtlMemory<AddAngle, int>::Purge()
001c6690 l     F .text	000000a3              CUtlMemory<AppSystemInfo_t, int>::Grow(int)
001c6650 l     F .text	00000032              CUtlMemory<AppSystemInfo_t, int>::Purge()
00203920 l     F .text	000000a7              CUtlMemory<CAppSystemGroup::Module_t, int>::Grow(int)
001c65d0 l     F .text	00000032              CUtlMemory<CAppSystemGroup::Module_t, int>::Purge()
001c2950 l     F .text	000000a4              CUtlMemory<CAsyncUploaderThread::DataEntry*, int>::Grow(int)
001c2740 l     F .text	00000032              CUtlMemory<CAsyncUploaderThread::DataEntry*, int>::Purge()
000d99a0 l     F .text	000000a4              CUtlMemory<CBaseClient*, int>::Grow(int)
000d9820 l     F .text	00000032              CUtlMemory<CBaseClient*, int>::Purge()
000b17b0 l     F .text	000000a4              CUtlMemory<CBasePhonemeTag*, int>::Grow(int)
000b1490 l     F .text	00000032              CUtlMemory<CBasePhonemeTag*, int>::Purge()
0008f750 l     F .text	000000a3              CUtlMemory<CBSPTreeData::Leaf_t, int>::Grow(int)
0008f080 l     F .text	00000032              CUtlMemory<CBSPTreeData::Leaf_t, int>::Purge()
00102610 l     F .text	000000a4              CUtlMemory<CClientSendProp, int>::Grow(int)
0010a370 l     F .text	00000032              CUtlMemory<CClientSendProp, int>::Purge()
000fe180 l     F .text	000000a4              CUtlMemory<CCoreDispInfo*, int>::Grow(int)
000fde70 l     F .text	00000032              CUtlMemory<CCoreDispInfo*, int>::Purge()
000a61e0 l     F .text	000000a6              CUtlMemory<CDispBox, int>::Grow(int)
000a61a0 l     F .text	00000032              CUtlMemory<CDispBox, int>::Purge()
000a3c70 l     F .text	000000a6              CUtlMemory<CDispCollTriCache, int>::Grow(int)
000a36d0 l     F .text	00000032              CUtlMemory<CDispCollTriCache, int>::Purge()
000fdf00 l     F .text	000000a4              CUtlMemory<CDispGroup*, int>::Grow(int)
000f8140 l     F .text	00000032              CUtlMemory<CDispGroup*, int>::Purge()
000fe2c0 l     F .text	000000a4              CUtlMemory<CDispInfo*, int>::Grow(int)
000fddf0 l     F .text	00000032              CUtlMemory<CDispInfo*, int>::Purge()
00105d80 l     F .text	000000a3              CUtlMemory<CDTIProp, int>::Grow(int)
00105860 l     F .text	00000032              CUtlMemory<CDTIProp, int>::Purge()
00173b80 l     F .text	000000a7              CUtlMemory<CEdgeList::Edge_t, int>::Grow(int)
001732f0 l     F .text	00000032              CUtlMemory<CEdgeList::Edge_t, int>::Purge()
00173ad0 l     F .text	000000a7              CUtlMemory<CEdgeList::Surface_t, int>::Grow(int)
00173330 l     F .text	00000032              CUtlMemory<CEdgeList::Surface_t, int>::Purge()
000b1650 l     F .text	000000a7              CUtlMemory<CEmphasisSample, int>::Grow(int)
000b14d0 l     F .text	00000032              CUtlMemory<CEmphasisSample, int>::Purge()
001cedf0 l     F .text	000000a4              CUtlMemory<CEventInfo*, int>::Grow(int)
001b2260 l     F .text	00000032              CUtlMemory<CEventInfo*, int>::Purge()
00108880 l     F .text	000000a6              CUtlMemory<CFastLocalTransferPropInfo, int>::Grow(int)
00100890 l     F .text	00000032              CUtlMemory<CFastLocalTransferPropInfo, int>::Purge()
00126160 l     F .text	000000a3              CUtlMemory<CFrameCacheEntry_s, int>::Grow(int)
00126120 l     F .text	00000032              CUtlMemory<CFrameCacheEntry_s, int>::Purge()
00119a90 l     F .text	000000a4              CUtlMemory<CGameEventCallback*, int>::Grow(int)
00119990 l     F .text	00000032              CUtlMemory<CGameEventCallback*, int>::Purge()
00119bd0 l     F .text	000000a4              CUtlMemory<CGameEventDescriptor, int>::Grow(int)
001199d0 l     F .text	00000032              CUtlMemory<CGameEventDescriptor, int>::Purge()
000fe040 l     F .text	000000a4              CUtlMemory<CGroupMesh*, int>::Grow(int)
000fddb0 l     F .text	00000032              CUtlMemory<CGroupMesh*, int>::Purge()
0012bea0 l     F .text	00000032              CUtlMemory<char, int>::~CUtlMemory()
0012bea0 l     F .text	00000032              CUtlMemory<char, int>::~CUtlMemory()
000ac5d0 l     F .text	000000a0              CUtlMemory<char, int>::Grow(int)
000ac490 l     F .text	000000a3              CUtlMemory<char*, int>::Grow(int)
000ac150 l     F .text	00000032              CUtlMemory<char, int>::Purge()
000ac070 l     F .text	00000032              CUtlMemory<char*, int>::Purge()
000dbe50 l     F .text	000000a6              CUtlMemory<CheatCodeData_t, int>::Grow(int)
000dbde0 l     F .text	00000032              CUtlMemory<CheatCodeData_t, int>::Purge()
001264c0 l     F .text	000000a3              CUtlMemory<CHLTVServer*, int>::Grow(int)
00126480 l     F .text	00000032              CUtlMemory<CHLTVServer*, int>::Purge()
001cb820 l     F .text	000000a3              CUtlMemory<CInitTracker::InitFunc*, int>::Grow(int)
001cb7e0 l     F .text	00000032              CUtlMemory<CInitTracker::InitFunc*, int>::Purge()
00165840 l     F .text	000000a4              CUtlMemory<CNetChan::dataFragments_s*, int>::Grow(int)
00165800 l     F .text	00000032              CUtlMemory<CNetChan::dataFragments_s*, int>::Purge()
0016dca0 l     F .text	000000a4              CUtlMemory<CNetChan*, int>::Grow(int)
0016dbc0 l     F .text	00000032              CUtlMemory<CNetChan*, int>::Purge()
0015b4b0 l     F .text	000000a4              CUtlMemory<CNetworkStringTable*, int>::Grow(int)
0015b300 l     F .text	00000032              CUtlMemory<CNetworkStringTable*, int>::Purge()
0015de10 l     F .text	000000a6              CUtlMemory<CNetworkStringTableItem::itemchange_s, int>::Grow(int)
0015ddd0 l     F .text	00000032              CUtlMemory<CNetworkStringTableItem::itemchange_s, int>::Purge()
000b1510 l     F .text	000000a4              CUtlMemory<CPhonemeTag*, int>::Grow(int)
000b1410 l     F .text	00000032              CUtlMemory<CPhonemeTag*, int>::Purge()
000ea0c0 l     F .text	000000a4              CUtlMemory<CPhysCollide*, int>::Grow(int)
000e9db0 l     F .text	00000032              CUtlMemory<CPhysCollide*, int>::Purge()
00179620 l     F .text	000000a7              CUtlMemory<cplane_t, int>::Grow(int)
001789d0 l     F .text	00000032              CUtlMemory<cplane_t, int>::Purge()
001b70f0 l     F .text	000000a3              CUtlMemory<CPlugin*, int>::Grow(int)
001b70b0 l     F .text	00000032              CUtlMemory<CPlugin*, int>::Purge()
000fe410 l     F .text	000000a4              CUtlMemory<CPrimList, int>::Grow(int)
000fde30 l     F .text	00000032              CUtlMemory<CPrimList, int>::Purge()
0016f1e0 l     F .text	000000a4              CUtlMemory<CQueuedPacketSender::CQueuedPacket*, int>::Grow(int)
0016f1a0 l     F .text	00000032              CUtlMemory<CQueuedPacketSender::CQueuedPacket*, int>::Purge()
001b9fa0 l     F .text	000000a4              CUtlMemory<CRConServer::FailedRCon_t, int>::Grow(int)
001b9930 l     F .text	00000032              CUtlMemory<CRConServer::FailedRCon_t, int>::Purge()
0018e0a0 l     F .text	000000a3              CUtlMemory<CReplayFrameCacheEntry_s, int>::Grow(int)
0018e060 l     F .text	00000032              CUtlMemory<CReplayFrameCacheEntry_s, int>::Purge()
00100a00 l     F .text	000000a4              CUtlMemory<CSendNode*, int>::Grow(int)
00100790 l     F .text	00000032              CUtlMemory<CSendNode*, int>::Purge()
001b4f80 l     F .text	00000032              CUtlMemory<CSendProxyRecipients, int>::~CUtlMemory()
001b4f80 l     F .text	00000032              CUtlMemory<CSendProxyRecipients, int>::~CUtlMemory()
00179c80 l     F .text	000000a3              CUtlMemory<CSendProxyRecipients, int>::Grow(int)
00179c40 l     F .text	00000032              CUtlMemory<CSendProxyRecipients, int>::Purge()
00100c90 l     F .text	000000a4              CUtlMemory<CSendTablePrecalc::CProxyPathEntry, int>::Grow(int)
001007d0 l     F .text	00000032              CUtlMemory<CSendTablePrecalc::CProxyPathEntry, int>::Purge()
00100b40 l     F .text	000000a4              CUtlMemory<CSendTablePrecalc::CProxyPath, int>::Grow(int)
00100810 l     F .text	00000032              CUtlMemory<CSendTablePrecalc::CProxyPath, int>::Purge()
0018f900 l     F .text	000000a6              CUtlMemory<CSocketCreator::AcceptedSocket_t, int>::Grow(int)
0018f8c0 l     F .text	00000032              CUtlMemory<CSocketCreator::AcceptedSocket_t, int>::Purge()
0016dde0 l     F .text	000000a7              CUtlMemory<CSplitPacketEntry, int>::Grow(int)
0016e630 l     F .text	00000032              CUtlMemory<CSplitPacketEntry, int>::Purge()
001ceb40 l     F .text	000000a4              CUtlMemory<CSPVert, int>::Grow(int)
001ceb00 l     F .text	00000032              CUtlMemory<CSPVert, int>::Purge()
0019bdc0 l     F .text	000000a7              CUtlMemory<CStaticProp, int>::Grow(int)
0019bba0 l     F .text	00000032              CUtlMemory<CStaticProp, int>::Purge()
0019bc60 l     F .text	000000a4              CUtlMemory<CStaticPropMgr::StaticPropDict_t, int>::Grow(int)
0019bbe0 l     F .text	00000032              CUtlMemory<CStaticPropMgr::StaticPropDict_t, int>::Purge()
0019be70 l     F .text	000000a4              CUtlMemory<CStaticPropMgr::StaticPropFade_t, int>::Grow(int)
0019bc20 l     F .text	00000032              CUtlMemory<CStaticPropMgr::StaticPropFade_t, int>::Purge()
000b5350 l     F .text	000000a4              CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::Grow(int)
000b4fb0 l     F .text	00000032              CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::Purge()
001cb330 l     F .text	000000a4              CUtlMemory<CSysModule*, int>::Grow(int)
001caff0 l     F .text	00000032              CUtlMemory<CSysModule*, int>::Purge()
0015b240 l     F .text	00000032              CUtlMemory<CUtlHashtableEntry<CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::IndirectIndex, empty_t>, int>::Purge()
001f8340 l     F .text	00000032              CUtlMemory<CUtlHashtableEntry<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t>, int>::Purge()
00151bf0 l     F .text	00000032              CUtlMemory<CUtlHashtableEntry<model_t*, CModelLoader::CDynamicModelInfo>, int>::~CUtlMemory()
00151bf0 l     F .text	00000032              CUtlMemory<CUtlHashtableEntry<model_t*, CModelLoader::CDynamicModelInfo>, int>::~CUtlMemory()
00151c30 l     F .text	00000032              CUtlMemory<CUtlHashtableEntry<unsigned int, int>, int>::~CUtlMemory()
00151c30 l     F .text	00000032              CUtlMemory<CUtlHashtableEntry<unsigned int, int>, int>::~CUtlMemory()
001e33d0 l     F .text	000000a7              CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
001d2060 l     F .text	000000a4              CUtlMemory<CUtlString, int>::Grow(int)
001d1dd0 l     F .text	00000032              CUtlMemory<CUtlString, int>::Purge()
000c7680 l     F .text	000000a2              CUtlMemory<CUtlSymbol, int>::Grow(int)
000c7640 l     F .text	00000032              CUtlMemory<CUtlSymbol, int>::Purge()
001f83c0 l     F .text	000000a4              CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
001f8270 l     F .text	00000032              CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Purge()
0016e580 l     F .text	000000a7              CUtlMemory<CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >, int>::Grow(int)
0016d9e0 l     F .text	00000032              CUtlMemory<CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >, int>::Purge()
000b5450 l     F .text	000000a7              CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int>::Grow(int)
000b4f70 l     F .text	00000032              CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int>::Purge()
000a3dc0 l     F .text	000000a7              CUtlMemory<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, int>::Grow(int)
000a38a0 l     F .text	00000032              CUtlMemory<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, int>::Purge()
001eb310 l     F .text	000000a7              CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int>::Grow(int)
001eb220 l     F .text	00000032              CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int>::Purge()
00181c10 l     F .text	000000a7              CUtlMemory<CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >, int>::Grow(int)
00181320 l     F .text	00000032              CUtlMemory<CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >, int>::Purge()
001d7ca0 l     F .text	000000a6              CUtlMemory<CVProfRecorder::CNodeAverage, int>::Grow(int)
001d7c60 l     F .text	00000032              CUtlMemory<CVProfRecorder::CNodeAverage, int>::Purge()
001c27d0 l     F .text	000000a7              CUtlMemory<CWin32UploadGameStats::FSMState_t, int>::Grow(int)
001c2700 l     F .text	00000032              CUtlMemory<CWin32UploadGameStats::FSMState_t, int>::Purge()
00173a20 l     F .text	000000a7              CUtlMemory<CWingedEdgeList::Surface_t, int>::Grow(int)
00173240 l     F .text	00000032              CUtlMemory<CWingedEdgeList::Surface_t, int>::Purge()
00173970 l     F .text	000000a7              CUtlMemory<CWingedEdgeList::WingedEdge_t, int>::Grow(int)
00173200 l     F .text	00000032              CUtlMemory<CWingedEdgeList::WingedEdge_t, int>::Purge()
000b18f0 l     F .text	000000a4              CUtlMemory<CWordTag*, int>::Grow(int)
000b1450 l     F .text	00000032              CUtlMemory<CWordTag*, int>::Purge()
0018eac0 l     F .text	00000032              CUtlMemory<decal_t*, int>::Purge()
00152c30 l     F .text	000000a7              CUtlMemory<dgamelump_internal_t, int>::Grow(int)
00152570 l     F .text	00000032              CUtlMemory<dgamelump_internal_t, int>::Purge()
000a3b70 l     F .text	000000a4              CUtlMemory<DispCollPlaneIndex_t, int>::Grow(int)
000a3860 l     F .text	00000032              CUtlMemory<DispCollPlaneIndex_t, int>::Purge()
00173190 l     F .text	00000032              CUtlMemory<EdgeVisualizationInfo_t, int>::Purge()
00113180 l     F .text	000000a3              CUtlMemory<edict_t*, int>::Grow(int)
00113140 l     F .text	00000032              CUtlMemory<edict_t*, int>::Purge()
001819b0 l     F .text	000000a4              CUtlMemory<FindFileIndex_t, int>::Grow(int)
00181860 l     F .text	00000032              CUtlMemory<FindFileIndex_t, int>::Purge()
001d2310 l     F .text	000000a4              CUtlMemory<float, int>::Grow(int)
001d1d50 l     F .text	00000032              CUtlMemory<float, int>::Purge()
002039d0 l     F .text	000000a4              CUtlMemory<IAppSystem*, int>::Grow(int)
001c6610 l     F .text	00000032              CUtlMemory<IAppSystem*, int>::Purge()
0019bf20 l     F .text	000000a4              CUtlMemory<ICollideable*, int>::Grow(int)
001532d0 l     F .text	000000a4              CUtlMemory<IMaterial*, int>::Grow(int)
00152820 l     F .text	00000032              CUtlMemory<IMaterial*, int>::Purge()
00165980 l     F .text	000000a4              CUtlMemory<INetMessage*, int>::Grow(int)
001657c0 l     F .text	00000032              CUtlMemory<INetMessage*, int>::Purge()
000b5150 l     F .text	000000a4              CUtlMemory<int, int>::Grow(int)
000b4ec0 l     F .text	00000032              CUtlMemory<int, int>::Purge()
001a5a50 l     F .text	000000a4              CUtlMemory<ipfilter_t, int>::Grow(int)
001a5970 l     F .text	00000032              CUtlMemory<ipfilter_t, int>::Purge()
001cb1f0 l     F .text	000000a4              CUtlMemory<IToolDictionary*, int>::Grow(int)
001cafb0 l     F .text	00000032              CUtlMemory<IToolDictionary*, int>::Purge()
001cb0b0 l     F .text	000000a4              CUtlMemory<IToolSystem*, int>::Grow(int)
001caf70 l     F .text	00000032              CUtlMemory<IToolSystem*, int>::Purge()
001eb120 l     F .text	000000a4              CUtlMemory<KeyValues*, int>::Grow(int)
001eb0b0 l     F .text	00000032              CUtlMemory<KeyValues*, int>::Purge()
00141410 l     F .text	000000a4              CUtlMemory<maplist_map_t, int>::Grow(int)
000f3500 l     F .text	00000032              CUtlMemory<maplist_map_t, int>::Purge()
001e3570 l     F .text	000000a4              CUtlMemory<memhandle_t__*, int>::Grow(int)
00153c50 l     F .text	000000a4              CUtlMemory<mmodel_t, int>::Grow(int)
00152860 l     F .text	00000032              CUtlMemory<mmodel_t, int>::Purge()
0013d3b0 l     F .text	000000a7              CUtlMemory<ModelDebugOverlayData_t, int>::Grow(int)
0013d110 l     F .text	00000032              CUtlMemory<ModelDebugOverlayData_t, int>::Purge()
00152a00 l     F .text	000000a4              CUtlMemory<modelsize_t, int>::Grow(int)
001528a0 l     F .text	00000032              CUtlMemory<modelsize_t, int>::Purge()
00153ec0 l     F .text	000000a7              CUtlMemory<model_t, int>::Grow(int)
001471a0 l     F .text	000000a3              CUtlMemory<model_t*, int>::Grow(int)
00151db0 l     F .text	00000032              CUtlMemory<model_t, int>::Purge()
00146c90 l     F .text	00000032              CUtlMemory<model_t*, int>::Purge()
001791e0 l     F .text	000000a4              CUtlMemory<moverlayfragment_t*, int>::Grow(int)
00178a10 l     F .text	00000032              CUtlMemory<moverlayfragment_t*, int>::Purge()
00179780 l     F .text	000000a7              CUtlMemory<moverlay_t, int>::Grow(int)
00178910 l     F .text	00000032              CUtlMemory<moverlay_t, int>::Purge()
00179830 l     F .text	000000a4              CUtlMemory<msurface2_t*, int>::Grow(int)
001796d0 l     F .text	00000032              CUtlMemory<msurface2_t*, int>::Purge()
001ace70 l     F .text	000000a6              CUtlMemory<netadr_s, int>::Grow(int)
001ace30 l     F .text	00000032              CUtlMemory<netadr_s, int>::Purge()
0016e4d0 l     F .text	000000a9              CUtlMemory<netpacket_s, int>::Grow(int)
0016d970 l     F .text	00000032              CUtlMemory<netpacket_s, int>::Purge()
0008c850 l     F .text	000000a9              CUtlMemory<NET_SetConVar::cvar_s, int>::Grow(int)
0008c530 l     F .text	00000032              CUtlMemory<NET_SetConVar::cvar_s, int>::Purge()
0016e3d0 l     F .text	000000a4              CUtlMemory<netsocket_t, int>::Grow(int)
0016d900 l     F .text	00000032              CUtlMemory<netsocket_t, int>::Purge()
001792e0 l     F .text	000000a4              CUtlMemory<overlayvert_t, int>::Grow(int)
00178b00 l     F .text	00000032              CUtlMemory<overlayvert_t, int>::Purge()
0016dee0 l     F .text	000000a7              CUtlMemory<pendingsocket_t, int>::Grow(int)
0016dc30 l     F .text	00000032              CUtlMemory<pendingsocket_t, int>::Purge()
001ec4a0 l     F .text	000000ba              CUtlMemoryPool::AddNewBlob()
001ec680 l     F .text	00000019              CUtlMemoryPool::Alloc()
001ec620 l     F .text	00000058              CUtlMemoryPool::Alloc(unsigned int)
001ec6f0 l     F .text	00000019              CUtlMemoryPool::AllocZero()
001ec6a0 l     F .text	00000044              CUtlMemoryPool::AllocZero(unsigned int)
001ec3d0 l     F .text	00000053              CUtlMemoryPool::Clear()
001ec430 l     F .text	00000035              CUtlMemoryPool::~CUtlMemoryPool()
001ec430 l     F .text	00000035              CUtlMemoryPool::~CUtlMemoryPool()
001ec560 l     F .text	000000b3              CUtlMemoryPool::CUtlMemoryPool(int, int, int, char const*, int)
001ec560 l     F .text	000000b3              CUtlMemoryPool::CUtlMemoryPool(int, int, int, char const*, int)
001ec710 l     F .text	0000001b              CUtlMemoryPool::Free(void*)
0037d690 l     O .bss	00000004              CUtlMemoryPool::g_ReportFunc
001ec3a0 l     F .text	00000025              CUtlMemoryPool::Init()
001ec470 l     F .text	00000024              CUtlMemoryPool::ReportLeaks()
001ec390 l     F .text	0000000d              CUtlMemoryPool::SetErrorReportFunc(void (*)(char const*, ...))
0010ece0 l     F .text	000000a4              CUtlMemory<RecvProp const*, int>::Grow(int)
0010d5b0 l     F .text	00000032              CUtlMemory<RecvProp const*, int>::Purge()
00100de0 l     F .text	000000a4              CUtlMemory<SendProp const*, int>::Grow(int)
00100850 l     F .text	00000032              CUtlMemory<SendProp const*, int>::Purge()
001024d0 l     F .text	000000a4              CUtlMemory<SendTable*, int>::Grow(int)
00101d50 l     F .text	00000032              CUtlMemory<SendTable*, int>::Purge()
000c5740 l     F .text	000000a6              CUtlMemory<sentencegroup_t, int>::Grow(int)
000c4e10 l     F .text	00000032              CUtlMemory<sentencegroup_t, int>::Purge()
000c5900 l     F .text	000000a7              CUtlMemory<sentence_t, int>::Grow(int)
000c4da0 l     F .text	00000032              CUtlMemory<sentence_t, int>::Purge()
001a0240 l     F .text	000000a3              CUtlMemory<SoundInfo_t, int>::Grow(int)
001a0200 l     F .text	00000032              CUtlMemory<SoundInfo_t, int>::Purge()
000cc5d0 l     F .text	000000a8              CUtlMemory<Spike_t, int>::Grow(int)
000cc590 l     F .text	00000032              CUtlMemory<Spike_t, int>::Purge()
0019bd10 l     F .text	000000a3              CUtlMemory<StaticPropLeafLump_t, int>::Grow(int)
0019bb60 l     F .text	00000032              CUtlMemory<StaticPropLeafLump_t, int>::Purge()
0015b340 l     F .text	000000a4              CUtlMemory<StringHistoryEntry, int>::Grow(int)
0015b2c0 l     F .text	00000032              CUtlMemory<StringHistoryEntry, int>::Purge()
000b5200 l     F .text	000000a4              CUtlMemory<studiohdr_t const*, int>::Grow(int)
000b4f30 l     F .text	00000032              CUtlMemory<studiohdr_t const*, int>::Purge()
0008ca40 l     F .text	000000a9              CUtlMemory<SVC_ClassInfo::class_s, int>::Grow(int)
0008c610 l     F .text	00000032              CUtlMemory<SVC_ClassInfo::class_s, int>::Purge()
001a7110 l     F .text	000000a7              CUtlMemory<UnpackedDataCache_t, int>::Grow(int)
001a6d30 l     F .text	00000032              CUtlMemory<UnpackedDataCache_t, int>::Purge()
0016d700 l     F .text	00000032              CUtlMemory<unsigned char, int>::~CUtlMemory()
0016d700 l     F .text	00000032              CUtlMemory<unsigned char, int>::~CUtlMemory()
000c5a50 l     F .text	00000099              CUtlMemory<unsigned char, int>::Grow(int)
000c46d0 l     F .text	00000032              CUtlMemory<unsigned char, int>::Purge()
000e6320 l     F .text	000000a3              CUtlMemory<unsigned int, int>::Grow(int)
00152280 l     F .text	00000032              CUtlMemory<unsigned int, int>::Purge()
0008cbb0 l     F .text	000000a4              CUtlMemory<unsigned long long, int>::Grow(int)
0008cfb0 l     F .text	00000032              CUtlMemory<unsigned long long, int>::Purge()
000e8db0 l     F .text	000000a2              CUtlMemory<unsigned short, int>::Grow(int)
000e8d70 l     F .text	00000032              CUtlMemory<unsigned short, int>::Purge()
001a5b00 l     F .text	000000a7              CUtlMemory<userfilter_t, int>::Grow(int)
001a59e0 l     F .text	00000032              CUtlMemory<userfilter_t, int>::Purge()
0008f890 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInfo_t, unsigned short>, unsigned short>::Grow(int)
0008efc0 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInfo_t, unsigned short>, unsigned short>::Purge()
0008f510 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInLeaf_t, unsigned short>, unsigned short>::Grow(int)
0008f040 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CBSPTreeData::HandleInLeaf_t, unsigned short>, unsigned short>::Purge()
001a33e0 l     F .text	000000a6              CUtlMemory<UtlLinkedListElem_t<CChangeTrack*, int>, int>::Grow(int)
00101d90 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short>::Grow(int)
0010cdc0 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CClientSendTable*, unsigned short>, unsigned short>::Purge()
000f9930 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CDispDecalFragment, unsigned short>, unsigned short>::Grow(int)
000f9b70 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CDispDecal, unsigned short>, unsigned short>::Grow(int)
000f9ff0 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CDispShadowDecal, unsigned short>, unsigned short>::Grow(int)
000f9db0 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CDispShadowFragment, unsigned short>, unsigned short>::Grow(int)
00105a70 l     F .text	000000a6              CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int>::Grow(int)
001058f0 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CDTIRecvTable*, int>, int>::Purge()
00106a20 l     F .text	000000d1              CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short>::Grow(int)
00106950 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CDTISendTable*, unsigned short>, unsigned short>::Purge()
001a6e10 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CFrameSnapshot*, unsigned short>, unsigned short>::Grow(int)
001c8710 l     F .text	000000a6              CUtlMemory<UtlLinkedListElem_t<CLoopInfo*, int>, int>::Grow(int)
0013d520 l     F .text	000000d1              CUtlMemory<UtlLinkedListElem_t<CModelRender::ModelInstance_t, unsigned short>, unsigned short>::Grow(int)
00178fa0 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short>::Grow(int)
00178990 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<COverlayMgr::RenderQueueHead_t, unsigned short>, unsigned short>::Purge()
00102130 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short>::Grow(int)
0010cd80 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CRecvDecoder*, unsigned short>, unsigned short>::Purge()
001bd580 l     F .text	000000a9              CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::DataResponse_t, int>, int>::Grow(int)
001bd250 l     F .text	000000a4              CUtlMemory<UtlLinkedListElem_t<CServerRemoteAccess::ListenerStore_t, int>, int>::Grow(int)
001b9ab0 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CUtlBuffer, unsigned short>, unsigned short>::Grow(int)
0015ba40 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, CNetworkStringTableItem>, unsigned short>, unsigned short>::Grow(int)
0015b280 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, CNetworkStringTableItem>, unsigned short>, unsigned short>::Purge()
001f9ca0 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short>::Grow(int)
001f8380 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short>::Purge()
001e36b0 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
001c40a0 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short>::~CUtlMemory()
001c40a0 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short>::~CUtlMemory()
001c4230 l     F .text	000000d1              CUtlMemory<UtlLinkedListElem_t<CUtlString, unsigned short>, unsigned short>::Grow(int)
001b9ef0 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short>::~CUtlMemory()
001b9ef0 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short>::~CUtlMemory()
001ba150 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<float, unsigned short>, unsigned short>::Grow(int)
00178d00 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short>::Grow(int)
00178950 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<moverlayfragment_t, unsigned short>, unsigned short>::Purge()
0010d210 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short>::Grow(int)
0010cd20 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<RecvTable*, unsigned short>, unsigned short>::Purge()
0016e050 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<SendQueueItem_t, unsigned short>, unsigned short>::Grow(int)
0008f2d0 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short>::Grow(int)
0008f000 l     F .text	00000032              CUtlMemory<UtlLinkedListElem_t<unsigned short, unsigned short>, unsigned short>::Purge()
00156920 l     F .text	000000c9              CUtlMemory<UtlLinkedListElem_t<VisCacheEntry, unsigned short>, unsigned short>::Grow(int)
000c52e0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int>::Purge()
000d9ae0 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short>::Grow(int)
000d9860 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short>::Purge()
001aa6b0 l     F .text	000000a3              CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int>::Grow(int)
001a7dc0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int>::Purge()
000ee8e0 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short>::Grow(int)
000ee6c0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short>::Purge()
00133b00 l     F .text	000000a3              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int>::Grow(int)
001334a0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int>::Purge()
001894d0 l     F .text	000000a7              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int>::Grow(int)
00181bd0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int>::Purge()
000c5c30 l     F .text	000000a7              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int>::Grow(int)
000c5880 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int>::Purge()
0017af00 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
0017add0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
0013d2a0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int>, int>::Purge()
00130c20 l     F .text	000000d1              CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
00130ae0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
001089e0 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
001008d0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
00153d00 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
001525e0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
0015b5f0 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
0015af70 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
000f07c0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
001415b0 l     F .text	000000a7              CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int>::Grow(int)
001411f0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int>::Purge()
001f8500 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
001f81e0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Purge()
00141740 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short>::Grow(int)
00141180 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short>::Purge()
00181ed0 l     F .text	000000a4              CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int>::Grow(int)
001814a0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int>::Purge()
0010d050 l     F .text	000000c9              CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short>::Grow(int)
0010cf20 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short>::Purge()
00181d10 l     F .text	000000a9              CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int>::Grow(int)
001815b0 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int>::Purge()
00181360 l     F .text	00000032              CUtlMemory<UtlRBTreeNode_t<UserReportedFile_t, int>, int>::Purge()
001165b0 l     F .text	000000a4              CUtlMemory<Vector4D, int>::Grow(int)
000a3a10 l     F .text	000000a7              CUtlMemory<Vector, int>::Grow(int)
000a3710 l     F .text	00000032              CUtlMemory<Vector, int>::Purge()
001e3290 l     F .text	000000a4              CUtlMemory<void*, int>::Grow(int)
001e3250 l     F .text	00000032              CUtlMemory<void*, int>::Purge()
001d21a0 l     F .text	000000a4              CUtlMemory<VProfListenInfo_t, int>::Grow(int)
001d1f50 l     F .text	00000032              CUtlMemory<VProfListenInfo_t, int>::Purge()
000c55f0 l     F .text	000000a4              CUtlMemory<WordBuf, int>::Grow(int)
000c4e80 l     F .text	00000032              CUtlMemory<WordBuf, int>::Purge()
0008ce60 l     F .text	000000a4              CUtlMemory<_XUSER_CONTEXT, int>::Grow(int)
0008c730 l     F .text	00000032              CUtlMemory<_XUSER_CONTEXT, int>::Purge()
0008cd00 l     F .text	000000a4              CUtlMemory<_XUSER_PROPERTY, int>::Grow(int)
0008c6f0 l     F .text	00000032              CUtlMemory<_XUSER_PROPERTY, int>::Purge()
001e3480 l     F .text	000000e2              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
001e39a0 l     F .text	000000ae              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CreateList()
001e2e20 l     F .text	00000156              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
001e2e20 l     F .text	00000156              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
001e2d80 l     F .text	0000009a              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
001e2d80 l     F .text	0000009a              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
001e3160 l     F .text	000000eb              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
001e3070 l     F .text	000000ec              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
001e2f80 l     F .text	000000e5              CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Unlink(unsigned short, unsigned short)
001f5910 l     F .text	00000010              CUtlNoEscConversion::FindConversion(char const*, int*)
0016f290 l     F .text	000000d9              CUtlPriorityQueue<CQueuedPacketSender::CQueuedPacket*>::Insert(CQueuedPacketSender::CQueuedPacket* const&)
0016eff0 l     F .text	000000d8              CUtlPriorityQueue<CQueuedPacketSender::CQueuedPacket*>::RemoveAtHead()
0016f0d0 l     F .text	000000d0              CUtlPriorityQueue<CQueuedPacketSender::CQueuedPacket*>::RemoveAt(int)
001e5160 l     F .text	00000212              CUtlQueue<KeyValues::CopyKeyValuesFromRecursive(KeyValues const&)::CopyStruct, CUtlMemory<KeyValues::CopyKeyValuesFromRecursive(KeyValues const&)::CopyStruct, int> >::Insert(KeyValues::CopyKeyValuesFromRecursive(KeyValues const&)::CopyStruct const&) [clone .constprop.79]
000c4880 l     F .text	000000fc              CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::FirstInorder() const
002c67f4 l     O .data	00000010              CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::Links(int) const::s_Sentinel
000c4980 l     F .text	0000041d              CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::NextInorder(int) const
000c5320 l     F .text	000000c4              CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::RemoveAll()
000db010 l     F .text	000001d2              CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::Insert(CEventInfo* const&)
000da650 l     F .text	000009b8              CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c6ca4 l     O .data	00000008              CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
000d9bb0 l     F .text	000000ef              CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::NewNode()
000d9340 l     F .text	000004a4              CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
000d98a0 l     F .text	000000f2              CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::RemoveAll()
000d9ca0 l     F .text	000004ec              CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
000da190 l     F .text	000004b4              CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
001ab1b0 l     F .text	000001d3              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::Insert(CIPRateLimit::iprate_s const&)
001aa810 l     F .text	00000991              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::InsertRebalance(int)
002c77a0 l     O .data	00000010              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::Links(int) const::s_Sentinel
001aa760 l     F .text	000000a3              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::NewNode()
001a79b0 l     F .text	00000407              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::PrevInorder(int) const
001a7e00 l     F .text	000000cc              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::Purge()
001a8870 l     F .text	0000116c              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::RemoveRebalance(int)
001a7ed0 l     F .text	000004df              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::RotateLeft(int)
001a83b0 l     F .text	000004b3              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::RotateRight(int)
001a99e0 l     F .text	00000cca              CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::Unlink(int)
000efe10 l     F .text	000001d2              CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::Insert(ConCommandBase const* const&)
000ef450 l     F .text	000009b8              CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c6dc4 l     O .data	00000008              CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
000ee9b0 l     F .text	000000ef              CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::NewNode()
000ee210 l     F .text	000004a4              CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
000ee700 l     F .text	000000f2              CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::RemoveAll()
000eeaa0 l     F .text	000004ec              CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
000eef90 l     F .text	000004b4              CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00134fe0 l     F .text	000001d3              CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CMapListItem, int>::Node_t const&)
00134620 l     F .text	000009ba              CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::InsertRebalance(int)
002c724c l     O .data	00000010              CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
00133bb0 l     F .text	000000d2              CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::NewNode()
001335b0 l     F .text	00000412              CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::NextInorder(int) const
001334e0 l     F .text	000000c4              CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::RemoveAll()
00133c90 l     F .text	000004df              CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::RotateLeft(int)
00134170 l     F .text	000004af              CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::RotateRight(int)
0018a040 l     F .text	000001e9              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t const&)
00189630 l     F .text	00000a0a              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::InsertRebalance(int)
001857f0 l     F .text	0000006c              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::Links(int) const
002c7740 l     O .data	00000010              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
00189580 l     F .text	000000a3              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::NewNode()
00185860 l     F .text	0000036b              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::NextInorder(int) const
00181740 l     F .text	000000c4              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::RemoveAll()
00187ba0 l     F .text	00001234              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::RemoveRebalance(int)
001873a0 l     F .text	0000040f              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::RotateLeft(int)
001877b0 l     F .text	000003ef              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::RotateRight(int)
00188de0 l     F .text	000006ef              CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::Unlink(int)
000c7150 l     F .text	000001e9              CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, int, int>::Node_t const&)
000c6740 l     F .text	00000a0a              CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::InsertRebalance(int)
002c67e4 l     O .data	00000010              CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
000c5ce0 l     F .text	000000a3              CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::NewNode()
000c4ec0 l     F .text	0000041d              CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::NextInorder(int) const
000c53f0 l     F .text	000000c4              CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RemoveAll()
000c5d90 l     F .text	000004ef              CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RotateLeft(int)
000c6280 l     F .text	000004bf              CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RotateRight(int)
0017c4e0 l     F .text	000001d2              CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, int, unsigned short>::Node_t const&)
0017bae0 l     F .text	000009fc              CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c7730 l     O .data	00000008              CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0017afd0 l     F .text	000000ef              CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
001c67e0 l     F .text	00000484              CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
0017ae10 l     F .text	000000e1              CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
0017b0c0 l     F .text	00000509              CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
0017b5d0 l     F .text	00000510              CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
002c7288 l     O .data	00000010              CUtlRBTree<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int, CUtlMap<char const*, memhandle_t__*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
0013d8d0 l     F .text	0000041d              CUtlRBTree<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int, CUtlMap<char const*, memhandle_t__*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int>, int> >::NextInorder(int) const
0013d2e0 l     F .text	000000c4              CUtlRBTree<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int, CUtlMap<char const*, memhandle_t__*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int>, int> >::RemoveAll()
00132210 l     F .text	000001f7              CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CUtlString, int, unsigned short>::Node_t const&)
00131800 l     F .text	00000a05              CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c7244 l     O .data	00000008              CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00130d00 l     F .text	00000100              CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
00130650 l     F .text	00000484              CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
00130b20 l     F .text	000000f9              CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
00130e00 l     F .text	00000509              CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00131310 l     F .text	000004e9              CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00109f00 l     F .text	000001e2              CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t const&)
00109550 l     F .text	000009ac              CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c6e20 l     O .data	00000008              CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00108ab0 l     F .text	000000ef              CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
00100910 l     F .text	000000e5              CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
00108ba0 l     F .text	000004ec              CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00109090 l     F .text	000004c0              CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00155480 l     F .text	000001d2              CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t const&)
00154a70 l     F .text	00000a05              CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c7560 l     O .data	00000008              CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00153dd0 l     F .text	000000ef              CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
00151df0 l     F .text	00000484              CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
00151c70 l     F .text	000000e1              CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
00154070 l     F .text	00000509              CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00154580 l     F .text	000004e9              CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
0015d450 l     F .text	000001e2              CUtlRBTree<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t const&)
0015ca50 l     F .text	000009fc              CUtlRBTree<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c7568 l     O .data	00000008              CUtlRBTree<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0015b6c0 l     F .text	00000110              CUtlRBTree<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
0015afb0 l     F .text	000000f9              CUtlRBTree<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
0015c030 l     F .text	00000509              CUtlRBTree<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
0015c540 l     F .text	00000510              CUtlRBTree<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
002c6dcc l     O .data	00000008              CUtlRBTree<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<void*, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
000f0210 l     F .text	000004a4              CUtlRBTree<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<void*, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
000f06c0 l     F .text	000000f2              CUtlRBTree<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<void*, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
00141230 l     F .text	00000043              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::~CUtlRBTree()
00141230 l     F .text	00000043              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::~CUtlRBTree()
00140570 l     F .text	00000117              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::Find(CUtlString const&) const
00142cd0 l     F .text	000001f9              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::Insert(CUtlString const&)
001422c0 l     F .text	00000a0a              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::InsertRebalance(int)
002c7298 l     O .data	00000010              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::Links(int) const::s_Sentinel
00141660 l     F .text	000000d2              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::NewNode()
00140690 l     F .text	0000041d              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::NextInorder(int) const
00140490 l     F .text	000000d4              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::RemoveAll()
00141910 l     F .text	000004ef              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::RotateLeft(int)
00141e00 l     F .text	000004bf              CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::RotateRight(int)
001f9a20 l     F .text	000001e2              CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
001f9070 l     F .text	000009ac              CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c7ae2 l     O .data	00000008              CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001f85d0 l     F .text	000000ef              CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
001f80e0 l     F .text	000000f2              CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
001f86c0 l     F .text	000004ec              CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
001f8bb0 l     F .text	000004c0              CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
001411c0 l     F .text	0000002a              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::~CUtlRBTree()
001411c0 l     F .text	0000002a              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::~CUtlRBTree()
00140ab0 l     F .text	00000114              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::Find(CUtlSymbol const&) const
00144230 l     F .text	000001d1              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::Insert(CUtlSymbol const&)
00143870 l     F .text	000009b8              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c72a8 l     O .data	00000008              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00141810 l     F .text	00000100              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::NewNode()
00140cd0 l     F .text	000004a4              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
00140bd0 l     F .text	000000f2              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::RemoveAll()
00142ed0 l     F .text	000004dc              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
001433b0 l     F .text	000004b4              CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00187190 l     F .text	00000203              CUtlRBTree<MasterFileHash_t, int, bool (*)(MasterFileHash_t const&, MasterFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int> >::Insert(MasterFileHash_t const&)
001867f0 l     F .text	00000991              CUtlRBTree<MasterFileHash_t, int, bool (*)(MasterFileHash_t const&, MasterFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int> >::InsertRebalance(int)
002c7760 l     O .data	00000010              CUtlRBTree<MasterFileHash_t, int, bool (*)(MasterFileHash_t const&, MasterFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int> >::Links(int) const::s_Sentinel
00181f80 l     F .text	000000d2              CUtlRBTree<MasterFileHash_t, int, bool (*)(MasterFileHash_t const&, MasterFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int> >::NewNode()
001814e0 l     F .text	000000c4              CUtlRBTree<MasterFileHash_t, int, bool (*)(MasterFileHash_t const&, MasterFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int> >::RemoveAll()
00185e50 l     F .text	000004df              CUtlRBTree<MasterFileHash_t, int, bool (*)(MasterFileHash_t const&, MasterFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int> >::RotateLeft(int)
00186330 l     F .text	000004b3              CUtlRBTree<MasterFileHash_t, int, bool (*)(MasterFileHash_t const&, MasterFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int> >::RotateRight(int)
0010eb00 l     F .text	000001d2              CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::Insert(MatchingProp_t const&)
0010e100 l     F .text	000009fc              CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
002c6f40 l     O .data	00000008              CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0010d120 l     F .text	000000ef              CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::NewNode()
0010cf60 l     F .text	000000e1              CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::RemoveAll()
0010d6e0 l     F .text	00000509              CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
0010dbf0 l     F .text	00000510              CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00182af0 l     F .text	0000099d              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::InsertRebalance(int)
00183490 l     F .text	00000244              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::Insert(UserReportedFileHash_t const&)
002c7750 l     O .data	00000010              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::Links(int) const::s_Sentinel
00181dc0 l     F .text	00000102              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::NewNode()
00180520 l     F .text	00000427              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::NextInorder(int) const
00180950 l     F .text	00000437              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::PrevInorder(int) const
001815f0 l     F .text	000000cc              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::Purge()
001836e0 l     F .text	0000141e              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::RemoveRebalance(int)
00182060 l     F .text	00000559              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::RotateLeft(int)
001825c0 l     F .text	00000529              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::RotateRight(int)
00184b00 l     F .text	00000cea              CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::Unlink(int)
002c7770 l     O .data	00000010              CUtlRBTree<UserReportedFile_t, int, bool (*)(UserReportedFile_t const&, UserReportedFile_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFile_t, int>, int> >::Links(int) const::s_Sentinel
00180d90 l     F .text	0000041d              CUtlRBTree<UserReportedFile_t, int, bool (*)(UserReportedFile_t const&, UserReportedFile_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFile_t, int>, int> >::NextInorder(int) const
001813a0 l     F .text	000000ff              CUtlRBTree<UserReportedFile_t, int, bool (*)(UserReportedFile_t const&, UserReportedFile_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFile_t, int>, int> >::RemoveAll()
00181a60 l     F .text	00000162              CUtlSortVector<FindFileIndex_t, CStupidLess, CUtlVector<FindFileIndex_t, CUtlMemory<FindFileIndex_t, int> > >::Insert(FindFileIndex_t const&)
00173840 l     F .text	00000122              CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::Insert(int const&)
001eaf90 l     F .text	00000086              CUtlSortVector<KeyValues*, CUtlSortVectorKeyValuesByName, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> > >::CompareHelper(KeyValues* const*, KeyValues* const*)
00152ab0 l     F .text	00000172              CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::Insert(modelsize_t const&)
001734e0 l     F .text	00000122              CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::Insert(unsigned short const&)
0021c910 l     F .text	00000114              CUtlStreamBuffer::Close()
0021ca30 l     F .text	00000050              CUtlStreamBuffer::~CUtlStreamBuffer()
0021ca30 l     F .text	00000050              CUtlStreamBuffer::~CUtlStreamBuffer()
0021c7c0 l     F .text	00000083              CUtlStreamBuffer::CUtlStreamBuffer()
0021c7c0 l     F .text	00000083              CUtlStreamBuffer::CUtlStreamBuffer()
0021cca0 l     F .text	00000179              CUtlStreamBuffer::CUtlStreamBuffer(char const*, char const*, int, bool)
0021cca0 l     F .text	00000179              CUtlStreamBuffer::CUtlStreamBuffer(char const*, char const*, int, bool)
0021ce20 l     F .text	00000032              CUtlStreamBuffer::GrowAllocatedSize(int)
0021c850 l     F .text	00000022              CUtlStreamBuffer::IsOpen() const
0021cb90 l     F .text	0000010b              CUtlStreamBuffer::Open(char const*, char const*, int)
0021c880 l     F .text	0000008a              CUtlStreamBuffer::OpenFile(char const*, char const*)
0021ca80 l     F .text	00000102              CUtlStreamBuffer::ReadBytesFromFile(int, int)
0021ce60 l     F .text	000000ee              CUtlStreamBuffer::StreamGetOverflow(int)
0021cf50 l     F .text	00000174              CUtlStreamBuffer::StreamPutOverflow(int)
001f68f0 l     F .text	00000062              CUtlString::AbsPath(char const*) const
001f5920 l     F .text	0000005b              CUtlString::AllocMemory(unsigned int)
001f6d20 l     F .text	00000009              CUtlString::Append(char const*)
001f6d30 l     F .text	00000080              CUtlString::Append(char const*, int)
001f5a40 l     F .text	00000009              CUtlString::Clear()
001f6e20 l     F .text	00000009              CUtlString::~CUtlString()
001f6e20 l     F .text	00000009              CUtlString::~CUtlString()
001f69a0 l     F .text	0000008e              CUtlString::DirName() const
001f60d0 l     F .text	00000022              CUtlString::FixSlashes(char)
001f6040 l     F .text	00000021              CUtlString::Format(char const*, ...)
001f5ff0 l     F .text	00000050              CUtlString::FormatV(char const*, char*)
001f6b00 l     F .text	0000005b              CUtlString::GetBaseFilename() const
001f5980 l     F .text	00000014              CUtlString::Get() const
001f6db0 l     F .text	00000069              CUtlString::GetEmptyString()
0037ed78 l     O .bss	00000004              CUtlString::GetEmptyString()::s_emptyString
001f6b60 l     F .text	0000005b              CUtlString::GetExtension() const
001f59a0 l     F .text	00000037              CUtlString::GetForModify()
001f5b90 l     F .text	0000004a              CUtlString::IsEqual_CaseInsensitive(char const*) const
001f5b40 l     F .text	0000004a              CUtlString::IsEqual_CaseSensitive(char const*) const
001f6510 l     F .text	00000034              CUtlString::Left(int) const
000ac0b0 l     F .text	0000009b              CUtlStringList::~CUtlStringList()
000ac0b0 l     F .text	0000009b              CUtlStringList::~CUtlStringList()
001f5ee0 l     F .text	00000103              CUtlString::MatchesPattern(CUtlString const&, int) const
001f5de0 l     F .text	00000052              CUtlString::operator+=(char)
001f5c70 l     F .text	00000021              CUtlString::operator=(char const*)
001f5d70 l     F .text	00000065              CUtlString::operator+=(char const*)
001f6c20 l     F .text	00000044              CUtlString::operator+(char const*) const
001f5c20 l     F .text	00000049              CUtlString::operator=(CUtlString const&)
001f5d00 l     F .text	00000070              CUtlString::operator+=(CUtlString const&)
001f5ca0 l     F .text	00000053              CUtlString::operator==(CUtlString const&) const
001f6c70 l     F .text	00000044              CUtlString::operator+(CUtlString const&) const
001f5e90 l     F .text	0000004f              CUtlString::operator+=(double)
001f5e40 l     F .text	00000042              CUtlString::operator+=(int)
001f59e0 l     F .text	0000003c              CUtlString::operator[](int) const
001f6cc0 l     F .text	0000005a              CUtlString::operator+(int) const
001f6bc0 l     F .text	00000056              CUtlString::PathJoin(char const*, char const*)
001f5a20 l     F .text	00000020              CUtlString::Purge()
001f6590 l     F .text	000000df              CUtlString::Replace(char, char) const
001f6670 l     F .text	0000027e              CUtlString::Replace(char const*, char const*) const
001f6550 l     F .text	00000036              CUtlString::Right(int) const
001f5b00 l     F .text	00000031              CUtlString::Set(char const*)
001f5a80 l     F .text	00000074              CUtlString::SetDirect(char const*, int)
001f5a50 l     F .text	00000021              CUtlString::SetLength(int)
001f6420 l     F .text	000000eb              CUtlString::Slice(int, int) const
001f6a30 l     F .text	0000005b              CUtlString::StripExtension() const
001f6a90 l     F .text	00000068              CUtlString::StripFilename() const
001f6070 l     F .text	00000056              CUtlString::StripTrailingSlash()
001f5be0 l     F .text	0000001a              CUtlString::ToLower()
001f5c00 l     F .text	0000001a              CUtlString::ToUpper()
001f63a0 l     F .text	00000033              CUtlString::Trim(char)
001f63e0 l     F .text	00000032              CUtlString::Trim(char const*)
001f6100 l     F .text	00000088              CUtlString::TrimLeft(char)
001f6190 l     F .text	000000d7              CUtlString::TrimLeft(char const*)
001f6270 l     F .text	00000073              CUtlString::TrimRight(char)
001f62f0 l     F .text	000000a4              CUtlString::TrimRight(char const*)
001f6960 l     F .text	0000003d              CUtlString::UnqualifiedFilename() const
001f78a0 l     F .text	00000012              CUtlSymbol::CurrTable()
001f7b40 l     F .text	00000057              CUtlSymbol::CUtlSymbol(char const*)
001f7b40 l     F .text	00000057              CUtlSymbol::CUtlSymbol(char const*)
001f6fa0 l     F .text	0000000c              CUtlSymbol::DisableStaticSymbolTable()
001f7780 l     F .text	00000115              CUtlSymbol::Initialize()
0037eda4 l     O .bss	00000001              CUtlSymbol::Initialize()::symbolsInitialized
001f79a0 l     F .text	0000002f              CUtlSymbol::operator==(char const*) const
002c7ae0 l     O .data	00000001              CUtlSymbol::s_bAllowStaticSymbolTable
0037eda0 l     O .bss	00000004              CUtlSymbol::s_pSymbolTable
001f78c0 l     F .text	000000d5              CUtlSymbol::String() const
001f79d0 l     F .text	00000162              CUtlSymbolTable::AddString(char const*)
001f6fb0 l     F .text	000000e2              CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
001f7720 l     F .text	0000005b              CUtlSymbolTable::~CUtlSymbolTable()
001f7720 l     F .text	0000005b              CUtlSymbolTable::~CUtlSymbolTable()
001f70a0 l     F .text	0000008a              CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
001f70a0 l     F .text	0000008a              CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
001f7130 l     F .text	00000169              CUtlSymbolTable::Find(char const*) const
001f72a0 l     F .text	0000004d              CUtlSymbolTable::FindPoolWithSpace(int) const
001f76c0 l     F .text	00000054              CUtlSymbolTable::RemoveAll()
001f72f0 l     F .text	00000038              CUtlSymbolTable::String(CUtlSymbol) const
001c6740 l     F .text	00000096              CUtlVector<AppSystemInfo_t, CUtlMemory<AppSystemInfo_t, int> >::InsertBefore(int, AppSystemInfo_t const&)
001c2a00 l     F .text	00000086              CUtlVector<CAsyncUploaderThread::DataEntry*, CUtlMemory<CAsyncUploaderThread::DataEntry*, int> >::InsertBefore(int, CAsyncUploaderThread::DataEntry* const&)
000d9a50 l     F .text	00000086              CUtlVector<CBaseClient*, CUtlMemory<CBaseClient*, int> >::InsertBefore(int, CBaseClient* const&)
000b1860 l     F .text	00000086              CUtlVector<CBasePhonemeTag*, CUtlMemory<CBasePhonemeTag*, int> >::InsertBefore(int, CBasePhonemeTag* const&)
0008f800 l     F .text	00000086              CUtlVector<CBSPTreeData::Leaf_t, CUtlMemory<CBSPTreeData::Leaf_t, int> >::InsertBefore(int, CBSPTreeData::Leaf_t const&)
001026c0 l     F .text	000000d3              CUtlVector<CClientSendProp, CUtlMemory<CClientSendProp, int> >::SetCount(int)
000fe230 l     F .text	00000086              CUtlVector<CCoreDispInfo*, CUtlMemory<CCoreDispInfo*, int> >::InsertBefore(int, CCoreDispInfo* const&)
000a6290 l     F .text	0000009d              CUtlVector<CDispBox, CUtlMemory<CDispBox, int> >::SetCount(int)
000a3180 l     F .text	000000a4              CUtlVector<CDispCollLeaf, CHunkMemory<CDispCollLeaf> >::SetCount(int)
000a3230 l     F .text	000000ab              CUtlVector<CDispCollNode, CHunkMemory<CDispCollNode> >::SetCount(int)
000a3d20 l     F .text	0000009c              CUtlVector<CDispCollTriCache, CUtlMemory<CDispCollTriCache, int> >::SetCount(int)
000f8180 l     F .text	0000002b              CUtlVector<CDispGroup*, CUtlMemory<CDispGroup*, int> >::~CUtlVector()
000f8180 l     F .text	0000002b              CUtlVector<CDispGroup*, CUtlMemory<CDispGroup*, int> >::~CUtlVector()
000fdfb0 l     F .text	00000086              CUtlVector<CDispGroup*, CUtlMemory<CDispGroup*, int> >::InsertBefore(int, CDispGroup* const&)
000fe370 l     F .text	00000097              CUtlVector<CDispInfo*, CUtlMemory<CDispInfo*, int> >::SetCount(int)
001058a0 l     F .text	00000046              CUtlVector<CDTIProp, CUtlMemory<CDTIProp, int> >::RemoveAll()
000b1700 l     F .text	000000a9              CUtlVector<CEmphasisSample, CUtlMemory<CEmphasisSample, int> >::InsertBefore(int, CEmphasisSample const&)
00108930 l     F .text	000000a7              CUtlVector<CFastLocalTransferPropInfo, CUtlMemory<CFastLocalTransferPropInfo, int> >::InsertBefore(int, CFastLocalTransferPropInfo const&)
00119910 l     F .text	0000007f              CUtlVector<CGameEventCallback*, CUtlMemory<CGameEventCallback*, int> >::FindAndRemove(CGameEventCallback* const&)
00119b40 l     F .text	00000086              CUtlVector<CGameEventCallback*, CUtlMemory<CGameEventCallback*, int> >::InsertBefore(int, CGameEventCallback* const&)
00119c80 l     F .text	000000c9              CUtlVector<CGameEventDescriptor, CUtlMemory<CGameEventDescriptor, int> >::InsertBefore(int)
00119a10 l     F .text	0000007a              CUtlVector<CGameEventDescriptor, CUtlMemory<CGameEventDescriptor, int> >::Purge()
000fe0f0 l     F .text	00000086              CUtlVector<CGroupMesh*, CUtlMemory<CGroupMesh*, int> >::InsertBefore(int, CGroupMesh* const&)
0016f370 l     F .text	00000040              CUtlVector<char, CUtlMemory<char, int> >::CopyArray(char const*, int)
000ac190 l     F .text	0000002b              CUtlVector<char, CUtlMemory<char, int> >::~CUtlVector()
000ac190 l     F .text	0000002b              CUtlVector<char, CUtlMemory<char, int> >::~CUtlVector()
000d97f0 l     F .text	0000002b              CUtlVector<char*, CUtlMemory<char*, int> >::~CUtlVector()
000d97f0 l     F .text	0000002b              CUtlVector<char*, CUtlMemory<char*, int> >::~CUtlVector()
000c5b90 l     F .text	00000093              CUtlVector<char, CUtlMemory<char, int> >::EnsureCount(int)
001eb2c0 l     F .text	00000043              CUtlVector<char, CUtlMemory<char, int> >::GrowVector(int)
000ac540 l     F .text	00000086              CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
000ac670 l     F .text	00000093              CUtlVector<char, CUtlMemory<char, int> >::SetCount(int)
001eb070 l     F .text	0000003d              CUtlVector<char, CUtlMemory<char, int> >::ShiftElementsRight(int, int)
000abfb0 l     F .text	000000b5              CUtlVector<char*, CUtlMemory<char*, int> >::Sort(int (*)(char* const*, char* const*))
000dbe20 l     F .text	0000002b              CUtlVector<CheatCodeData_t, CUtlMemory<CheatCodeData_t, int> >::~CUtlVector()
000dbe20 l     F .text	0000002b              CUtlVector<CheatCodeData_t, CUtlMemory<CheatCodeData_t, int> >::~CUtlVector()
00126570 l     F .text	00000086              CUtlVector<CHLTVServer*, CUtlMemory<CHLTVServer*, int> >::InsertBefore(int, CHLTVServer* const&)
001cb8d0 l     F .text	00000086              CUtlVector<CInitTracker::InitFunc*, CUtlMemory<CInitTracker::InitFunc*, int> >::InsertBefore(int, CInitTracker::InitFunc* const&)
0016dd50 l     F .text	00000086              CUtlVector<CNetChan*, CUtlMemory<CNetChan*, int> >::InsertBefore(int, CNetChan* const&)
001658f0 l     F .text	00000086              CUtlVector<CNetChan::dataFragments_s*, CUtlMemory<CNetChan::dataFragments_s*, int> >::InsertBefore(int, CNetChan::dataFragments_s* const&)
0015b560 l     F .text	00000086              CUtlVector<CNetworkStringTable*, CUtlMemory<CNetworkStringTable*, int> >::InsertBefore(int, CNetworkStringTable* const&)
0015dec0 l     F .text	000000a9              CUtlVector<CNetworkStringTableItem::itemchange_s, CUtlMemory<CNetworkStringTableItem::itemchange_s, int> >::InsertBefore(int, CNetworkStringTableItem::itemchange_s const&)
000b15c0 l     F .text	00000086              CUtlVector<CPhonemeTag*, CUtlMemory<CPhonemeTag*, int> >::InsertBefore(int, CPhonemeTag* const&)
000e9df0 l     F .text	0000002b              CUtlVector<CPhysCollide*, CUtlMemory<CPhysCollide*, int> >::~CUtlVector()
000e9df0 l     F .text	0000002b              CUtlVector<CPhysCollide*, CUtlMemory<CPhysCollide*, int> >::~CUtlVector()
000ea170 l     F .text	00000097              CUtlVector<CPhysCollide*, CUtlMemory<CPhysCollide*, int> >::SetCount(int)
001b71a0 l     F .text	00000086              CUtlVector<CPlugin*, CUtlMemory<CPlugin*, int> >::InsertBefore(int, CPlugin* const&)
001b7060 l     F .text	00000046              CUtlVector<CPlugin*, CUtlMemory<CPlugin*, int> >::Remove(int)
000fe4c0 l     F .text	00000097              CUtlVector<CPrimList, CUtlMemory<CPrimList, int> >::SetCount(int)
0016efc0 l     F .text	0000002c              CUtlVector<CQueuedPacketSender::CQueuedPacket*, CUtlMemory<CQueuedPacketSender::CQueuedPacket*, int> >::FastRemove(int)
001b9f30 l     F .text	0000006e              CUtlVector<CRConServer::FailedRCon_t, CUtlMemory<CRConServer::FailedRCon_t, int> >::~CUtlVector()
001b9f30 l     F .text	0000006e              CUtlVector<CRConServer::FailedRCon_t, CUtlMemory<CRConServer::FailedRCon_t, int> >::~CUtlVector()
001ba050 l     F .text	000000f1              CUtlVector<CRConServer::FailedRCon_t, CUtlMemory<CRConServer::FailedRCon_t, int> >::InsertBefore(int)
00100ab0 l     F .text	00000086              CUtlVector<CSendNode*, CUtlMemory<CSendNode*, int> >::InsertBefore(int, CSendNode* const&)
00179d30 l     F .text	00000126              CUtlVector<CSendProxyRecipients, CUtlMemory<CSendProxyRecipients, int> >::SetCount(int)
00100bf0 l     F .text	00000097              CUtlVector<CSendTablePrecalc::CProxyPath, CUtlMemory<CSendTablePrecalc::CProxyPath, int> >::SetCount(int)
00100d40 l     F .text	00000097              CUtlVector<CSendTablePrecalc::CProxyPathEntry, CUtlMemory<CSendTablePrecalc::CProxyPathEntry, int> >::SetCount(int)
0018f9b0 l     F .text	000000c1              CUtlVector<CSocketCreator::AcceptedSocket_t, CUtlMemory<CSocketCreator::AcceptedSocket_t, int> >::InsertBefore(int)
0016de90 l     F .text	00000043              CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >::GrowVector(int)
0016d6a0 l     F .text	00000055              CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >::Remove(int)
0016da20 l     F .text	0000004e              CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >::ShiftElementsRight(int, int)
000b5400 l     F .text	00000043              CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::GrowVector(int)
000b5100 l     F .text	00000047              CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::ShiftElementsRight(int, int)
001cb3e0 l     F .text	00000086              CUtlVector<CSysModule*, CUtlMemory<CSysModule*, int> >::InsertBefore(int, CSysModule* const&)
001d2110 l     F .text	00000086              CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int)
001e1c10 l     F .text	000000a9              CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
000c7730 l     F .text	00000086              CUtlVector<CUtlSymbol, CUtlMemory<CUtlSymbol, int> >::InsertBefore(int, CUtlSymbol const&)
001f8470 l     F .text	00000086              CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::InsertBefore(int, CUtlSymbolTable::StringPool_t* const&)
0016e670 l     F .text	00000077              CUtlVector<CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >, CUtlMemory<CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >, int> >::~CUtlVector()
0016e670 l     F .text	00000077              CUtlVector<CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >, CUtlMemory<CUtlVector<CSplitPacketEntry, CUtlMemory<CSplitPacketEntry, int> >, int> >::~CUtlVector()
000b4ff0 l     F .text	00000060              CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::RemoveAll()
000a38e0 l     F .text	00000060              CUtlVector<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, CUtlMemory<CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >, int> >::RemoveAll()
001eb260 l     F .text	00000060              CUtlVector<CUtlVector<int, CUtlMemory<int, int> >, CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int> >::RemoveAll()
00181cc0 l     F .text	00000043              CUtlVector<CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >, CUtlMemory<CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >, int> >::GrowVector(int)
001812c0 l     F .text	00000060              CUtlVector<CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >, CUtlMemory<CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >, int> >::RemoveAll()
00181810 l     F .text	0000004a              CUtlVector<CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >, CUtlMemory<CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >, int> >::ShiftElementsRight(int, int)
001d7d50 l     F .text	00000096              CUtlVector<CVProfRecorder::CNodeAverage, CUtlMemory<CVProfRecorder::CNodeAverage, int> >::InsertBefore(int)
001c2880 l     F .text	000000a9              CUtlVector<CWin32UploadGameStats::FSMState_t, CUtlMemory<CWin32UploadGameStats::FSMState_t, int> >::InsertBefore(int, CWin32UploadGameStats::FSMState_t const&)
000b19a0 l     F .text	00000086              CUtlVector<CWordTag*, CUtlMemory<CWordTag*, int> >::InsertBefore(int, CWordTag* const&)
000b13c0 l     F .text	00000046              CUtlVector<CWordTag*, CUtlMemory<CWordTag*, int> >::Remove(int)
0018eb00 l     F .text	0000002b              CUtlVector<decal_t*, CUtlMemory<decal_t*, int> >::~CUtlVector()
0018eb00 l     F .text	0000002b              CUtlVector<decal_t*, CUtlMemory<decal_t*, int> >::~CUtlVector()
001525b0 l     F .text	0000002b              CUtlVector<dgamelump_internal_t, CUtlMemory<dgamelump_internal_t, int> >::~CUtlVector()
001525b0 l     F .text	0000002b              CUtlVector<dgamelump_internal_t, CUtlMemory<dgamelump_internal_t, int> >::~CUtlVector()
00152ce0 l     F .text	000000b1              CUtlVector<dgamelump_internal_t, CUtlMemory<dgamelump_internal_t, int> >::InsertBefore(int, dgamelump_internal_t const&)
000a3c20 l     F .text	00000043              CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >::GrowVector(int)
000a39c0 l     F .text	00000047              CUtlVector<DispCollPlaneIndex_t, CUtlMemory<DispCollPlaneIndex_t, int> >::ShiftElementsRight(int, int)
001731d0 l     F .text	0000002b              CUtlVector<EdgeVisualizationInfo_t, CUtlMemory<EdgeVisualizationInfo_t, int> >::~CUtlVector()
001731d0 l     F .text	0000002b              CUtlVector<EdgeVisualizationInfo_t, CUtlMemory<EdgeVisualizationInfo_t, int> >::~CUtlVector()
001d9d80 l     F .text	0000002b              CUtlVector<edict_t*, CUtlMemory<edict_t*, int> >::~CUtlVector()
001d9d80 l     F .text	0000002b              CUtlVector<edict_t*, CUtlMemory<edict_t*, int> >::~CUtlVector()
00113230 l     F .text	00000086              CUtlVector<edict_t*, CUtlMemory<edict_t*, int> >::InsertBefore(int, edict_t* const&)
001d23c0 l     F .text	00000097              CUtlVector<float, CUtlMemory<float, int> >::SetCount(int)
00203a80 l     F .text	00000086              CUtlVector<IAppSystem*, CUtlMemory<IAppSystem*, int> >::InsertBefore(int, IAppSystem* const&)
0019bfd0 l     F .text	00000086              CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >::InsertBefore(int, ICollideable* const&)
00153380 l     F .text	00000086              CUtlVector<IMaterial*, CUtlMemory<IMaterial*, int> >::InsertBefore(int, IMaterial* const&)
00165a30 l     F .text	00000086              CUtlVector<INetMessage*, CUtlMemory<INetMessage*, int> >::InsertBefore(int, INetMessage* const&)
000b4f00 l     F .text	0000002b              CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
000b4f00 l     F .text	0000002b              CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
000b4280 l     F .text	00000099              CUtlVector<int, CUtlMemory<int, int> >::EnsureCount(int) [clone .part.58]
000fdeb0 l     F .text	00000043              CUtlVector<int, CUtlMemory<int, int> >::GrowVector(int)
000e01e0 l     F .text	00000086              CUtlVector<int, CUtlMemory<int, int> >::InsertBefore(int, int const&)
000db8c0 l     F .text	00000097              CUtlVector<int, CUtlMemory<int, int> >::SetCount(int)
000fdd60 l     F .text	00000041              CUtlVector<int, CUtlMemory<int, int> >::ShiftElementsRight(int, int)
001a59b0 l     F .text	0000002b              CUtlVector<ipfilter_t, CUtlMemory<ipfilter_t, int> >::~CUtlVector()
001a59b0 l     F .text	0000002b              CUtlVector<ipfilter_t, CUtlMemory<ipfilter_t, int> >::~CUtlVector()
001a58c0 l     F .text	00000055              CUtlVector<ipfilter_t, CUtlMemory<ipfilter_t, int> >::Remove(int)
001cb2a0 l     F .text	00000086              CUtlVector<IToolDictionary*, CUtlMemory<IToolDictionary*, int> >::InsertBefore(int, IToolDictionary* const&)
001cb160 l     F .text	00000086              CUtlVector<IToolSystem*, CUtlMemory<IToolSystem*, int> >::InsertBefore(int, IToolSystem* const&)
001eb0f0 l     F .text	0000002b              CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::~CUtlVector()
001eb0f0 l     F .text	0000002b              CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::~CUtlVector()
001eb1d0 l     F .text	00000043              CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::GrowVector(int)
001eb020 l     F .text	00000041              CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::ShiftElementsRight(int, int)
001414c0 l     F .text	000000e9              CUtlVector<maplist_map_t, CUtlMemory<maplist_map_t, int> >::InsertBefore(int, maplist_map_t const&)
001e3620 l     F .text	00000086              CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::InsertBefore(int, memhandle_t__* const&)
0013d150 l     F .text	0000006a              CUtlVector<ModelDebugOverlayData_t, CUtlMemory<ModelDebugOverlayData_t, int> >::~CUtlVector()
0013d150 l     F .text	0000006a              CUtlVector<ModelDebugOverlayData_t, CUtlMemory<ModelDebugOverlayData_t, int> >::~CUtlVector()
0013d460 l     F .text	000000b9              CUtlVector<ModelDebugOverlayData_t, CUtlMemory<ModelDebugOverlayData_t, int> >::InsertBefore(int)
00152620 l     F .text	0000002b              CUtlVector<model_t*, CUtlMemory<model_t*, int> >::~CUtlVector()
00152620 l     F .text	0000002b              CUtlVector<model_t*, CUtlMemory<model_t*, int> >::~CUtlVector()
00152da0 l     F .text	00000086              CUtlVector<model_t*, CUtlMemory<model_t*, int> >::InsertBefore(int, model_t* const&)
00151d60 l     F .text	00000049              CUtlVector<model_t, CUtlMemory<model_t, int> >::RemoveAll()
00151b40 l     F .text	00000046              CUtlVector<model_t*, CUtlMemory<model_t*, int> >::Remove(int)
00153f70 l     F .text	000000ba              CUtlVector<model_t, CUtlMemory<model_t, int> >::SetCount(int)
00147250 l     F .text	000000ae              CUtlVector<model_t*, CUtlMemory<model_t*, int> >::SetCountNonDestructively(int)
00179290 l     F .text	00000043              CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >::GrowVector(int)
00178c60 l     F .text	00000041              CUtlVector<moverlayfragment_t*, CUtlMemory<moverlayfragment_t*, int> >::ShiftElementsRight(int, int)
00179710 l     F .text	0000006d              CUtlVector<moverlay_t, CUtlMemory<moverlay_t, int> >::RemoveAll()
001798e0 l     F .text	00000097              CUtlVector<msurface2_t*, CUtlMemory<msurface2_t*, int> >::SetCount(int)
0016dc00 l     F .text	0000002b              CUtlVectorMT<CUtlVector<CNetChan*, CUtlMemory<CNetChan*, int> >, CThreadFastMutex>::~CUtlVectorMT()
0016dc00 l     F .text	0000002b              CUtlVectorMT<CUtlVector<CNetChan*, CUtlMemory<CNetChan*, int> >, CThreadFastMutex>::~CUtlVectorMT()
0016dc70 l     F .text	0000002b              CUtlVectorMT<CUtlVector<pendingsocket_t, CUtlMemory<pendingsocket_t, int> >, CThreadFastMutex>::~CUtlVectorMT()
0016dc70 l     F .text	0000002b              CUtlVectorMT<CUtlVector<pendingsocket_t, CUtlMemory<pendingsocket_t, int> >, CThreadFastMutex>::~CUtlVectorMT()
001acf20 l     F .text	000000a9              CUtlVector<netadr_s, CUtlMemory<netadr_s, int> >::InsertBefore(int, netadr_s const&)
0016d9b0 l     F .text	0000002b              CUtlVector<netpacket_s, CUtlMemory<netpacket_s, int> >::~CUtlVector()
0016d9b0 l     F .text	0000002b              CUtlVector<netpacket_s, CUtlMemory<netpacket_s, int> >::~CUtlVector()
0008c900 l     F .text	0000013d              CUtlVector<NET_SetConVar::cvar_s, CUtlMemory<NET_SetConVar::cvar_s, int> >::InsertBefore(int, NET_SetConVar::cvar_s const&)
0016d940 l     F .text	0000002b              CUtlVector<netsocket_t, CUtlMemory<netsocket_t, int> >::~CUtlVector()
0016d940 l     F .text	0000002b              CUtlVector<netsocket_t, CUtlMemory<netsocket_t, int> >::~CUtlVector()
0016e480 l     F .text	00000043              CUtlVector<netsocket_t, CUtlMemory<netsocket_t, int> >::GrowVector(int)
0016db70 l     F .text	00000047              CUtlVector<netsocket_t, CUtlMemory<netsocket_t, int> >::ShiftElementsRight(int, int)
001794b0 l     F .text	000000cf              CUtlVector<overlayvert_t, CUtlMemory<overlayvert_t, int> >::CopyArray(overlayvert_t const*, int)
00179390 l     F .text	00000043              CUtlVector<overlayvert_t, CUtlMemory<overlayvert_t, int> >::GrowVector(int)
00179580 l     F .text	000000a0              CUtlVector<overlayvert_t, CUtlMemory<overlayvert_t, int> >::InsertBefore(int, overlayvert_t const&)
001793e0 l     F .text	000000c1              CUtlVector<overlayvert_t, CUtlMemory<overlayvert_t, int> >::SetCount(int)
00178cb0 l     F .text	00000045              CUtlVector<overlayvert_t, CUtlMemory<overlayvert_t, int> >::ShiftElementsRight(int, int)
0016df90 l     F .text	000000b9              CUtlVector<pendingsocket_t, CUtlMemory<pendingsocket_t, int> >::InsertBefore(int, pendingsocket_t const&)
0016d740 l     F .text	0000004f              CUtlVector<pendingsocket_t, CUtlMemory<pendingsocket_t, int> >::Remove(int)
0010ed90 l     F .text	00000097              CUtlVector<RecvProp const*, CUtlMemory<RecvProp const*, int> >::SetCount(int)
00100f30 l     F .text	0000003f              CUtlVector<SendProp const*, CUtlMemory<SendProp const*, int> >::CopyArray(SendProp const* const*, int)
00100e90 l     F .text	00000097              CUtlVector<SendProp const*, CUtlMemory<SendProp const*, int> >::SetCount(int)
00111a50 l     F .text	0000002b              CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >::~CUtlVector()
00111a50 l     F .text	0000002b              CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >::~CUtlVector()
00102580 l     F .text	00000086              CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >::InsertBefore(int, SendTable* const&)
00111a80 l     F .text	00000097              CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >::SetCount(int)
000c4e50 l     F .text	0000002b              CUtlVector<sentencegroup_t, CUtlMemory<sentencegroup_t, int> >::~CUtlVector()
000c4e50 l     F .text	0000002b              CUtlVector<sentencegroup_t, CUtlMemory<sentencegroup_t, int> >::~CUtlVector()
000c57f0 l     F .text	0000008e              CUtlVector<sentencegroup_t, CUtlMemory<sentencegroup_t, int> >::InsertBefore(int)
000c4de0 l     F .text	0000002b              CUtlVector<sentence_t, CUtlMemory<sentence_t, int> >::~CUtlVector()
000c4de0 l     F .text	0000002b              CUtlVector<sentence_t, CUtlMemory<sentence_t, int> >::~CUtlVector()
000c59b0 l     F .text	0000009e              CUtlVector<sentence_t, CUtlMemory<sentence_t, int> >::InsertBefore(int)
001a02f0 l     F .text	00000096              CUtlVector<SoundInfo_t, CUtlMemory<SoundInfo_t, int> >::InsertBefore(int, SoundInfo_t const&)
000cc680 l     F .text	000000b1              CUtlVector<Spike_t, CUtlMemory<Spike_t, int> >::InsertBefore(int, Spike_t const&)
0015b3f0 l     F .text	000000b9              CUtlVector<StringHistoryEntry, CUtlMemory<StringHistoryEntry, int> >::InsertBefore(int, StringHistoryEntry const&)
0015aec0 l     F .text	00000055              CUtlVector<StringHistoryEntry, CUtlMemory<StringHistoryEntry, int> >::Remove(int)
000b52b0 l     F .text	00000097              CUtlVector<studiohdr_t const*, CUtlMemory<studiohdr_t const*, int> >::SetCount(int)
0008caf0 l     F .text	000000b1              CUtlVector<SVC_ClassInfo::class_s, CUtlMemory<SVC_ClassInfo::class_s, int> >::InsertBefore(int, SVC_ClassInfo::class_s const&)
001a71c0 l     F .text	0000009f              CUtlVector<UnpackedDataCache_t, CUtlMemory<UnpackedDataCache_t, int> >::SetCount(int)
000f8120 l     F .text	0000001b              CUtlVector<unsigned char, CHunkMemory<unsigned char> >::~CUtlVector()
000f8120 l     F .text	0000001b              CUtlVector<unsigned char, CHunkMemory<unsigned char> >::~CUtlVector()
000fdcc0 l     F .text	00000099              CUtlVector<unsigned char, CHunkMemory<unsigned char> >::SetCount(int)
000c4710 l     F .text	0000002b              CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
000c4710 l     F .text	0000002b              CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
000c5af0 l     F .text	00000093              CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::EnsureCount(int)
000fe600 l     F .text	00000093              CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::SetCount(int)
00151b90 l     F .text	0000005c              CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::FindAndFastRemove(unsigned int const&)
00153860 l     F .text	00000086              CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::InsertBefore(int, unsigned int const&)
000e63d0 l     F .text	00000097              CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::SetCount(int)
0008cc60 l     F .text	00000096              CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> >::InsertBefore(int, unsigned long long const&)
000e9e60 l     F .text	00000043              CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::GrowVector(int)
000e8e60 l     F .text	00000086              CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::InsertBefore(int, unsigned short const&)
000fe560 l     F .text	00000096              CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::SetCount(int)
000e9e20 l     F .text	00000040              CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::ShiftElementsRight(int, int)
001a5a20 l     F .text	0000002b              CUtlVector<userfilter_t, CUtlMemory<userfilter_t, int> >::~CUtlVector()
001a5a20 l     F .text	0000002b              CUtlVector<userfilter_t, CUtlMemory<userfilter_t, int> >::~CUtlVector()
001a5bb0 l     F .text	000000b1              CUtlVector<userfilter_t, CUtlMemory<userfilter_t, int> >::InsertBefore(int, userfilter_t const&)
001a5920 l     F .text	0000004f              CUtlVector<userfilter_t, CUtlMemory<userfilter_t, int> >::Remove(int)
00116660 l     F .text	000000a9              CUtlVector<Vector4D, CUtlMemory<Vector4D, int> >::InsertBefore(int, Vector4D const&)
000a37b0 l     F .text	000000a9              CUtlVector<Vector, CHunkMemory<Vector> >::SetCount(int)
0018ed00 l     F .text	0000002b              CUtlVector<Vector, CUtlMemory<Vector, int> >::~CUtlVector()
0018ed00 l     F .text	0000002b              CUtlVector<Vector, CUtlMemory<Vector, int> >::~CUtlVector()
000a3ac0 l     F .text	000000a9              CUtlVector<Vector, CUtlMemory<Vector, int> >::InsertBefore(int, Vector const&)
001e3340 l     F .text	00000086              CUtlVector<void*, CUtlMemory<void*, int> >::InsertBefore(int, void* const&)
001d1f90 l     F .text	000000ce              CUtlVector<VProfListenInfo_t, CUtlMemory<VProfListenInfo_t, int> >::~CUtlVector()
001d1f90 l     F .text	000000ce              CUtlVector<VProfListenInfo_t, CUtlMemory<VProfListenInfo_t, int> >::~CUtlVector()
001d1e10 l     F .text	00000135              CUtlVector<VProfListenInfo_t, CUtlMemory<VProfListenInfo_t, int> >::FindAndRemove(VProfListenInfo_t const&)
001d2250 l     F .text	000000b1              CUtlVector<VProfListenInfo_t, CUtlMemory<VProfListenInfo_t, int> >::InsertBefore(int)
000c56a0 l     F .text	0000009e              CUtlVector<WordBuf, CUtlMemory<WordBuf, int> >::InsertBefore(int, WordBuf const&)
0008cf10 l     F .text	00000096              CUtlVector<_XUSER_CONTEXT, CUtlMemory<_XUSER_CONTEXT, int> >::InsertBefore(int, _XUSER_CONTEXT const&)
0008cdb0 l     F .text	000000a9              CUtlVector<_XUSER_PROPERTY, CUtlMemory<_XUSER_PROPERTY, int> >::InsertBefore(int, _XUSER_PROPERTY const&)
002c6ce0 l     O .data	00000004              cv
0037d9f0 g     O .bss	00000004              cvar
000edf20 l     F .text	0000001c              cvarlist(CCommand const&)
00314460 l     O .bss	00000024              cvarlist_command
001cc980 l     F .text	00000063              CVEngineServer22::IsMapValid(char const*)
001cd0d0 l     F .text	0000000f              CVEngineServer::AddOriginToPVS(Vector const&)
001ccfb0 l     F .text	00000009              CVEngineServer::AllowImmediateEdictReuse()
001cbc70 l     F .text	000004b2              CVEngineServer::BuildEntityClusterList(edict_t*, PVSInfo_t*)
001ce070 l     F .text	00000080              CVEngineServer::CanPlayerChangeName(edict_t const*)
001cd650 l     F .text	0000008e              CVEngineServer::ChangeLevel(char const*, char const*)
001cc870 l     F .text	00000005              CVEngineServer::ChangeTeam(char const*)
001cbac0 l     F .text	0000001d              CVEngineServer::CheckAreasConnected(int, int)
001cda30 l     F .text	0000002d              CVEngineServer::CheckBoxInPVS(Vector const&, Vector const&, unsigned char const*, int)
001cd6e0 l     F .text	00000024              CVEngineServer::CheckHeadnodeVisible(int, unsigned char const*, int)
001cce80 l     F .text	00000069              CVEngineServer::CheckOriginInPVS(Vector const&, unsigned char const*, int)
001cbb40 l     F .text	00000037              CVEngineServer::CleanUpEntityClusterList(PVSInfo_t*)
001cb9b0 l     F .text	00000005              CVEngineServer::ClearSaveDir()
001cb9c0 l     F .text	00000005              CVEngineServer::ClearSaveDirAfterClientLoad()
001cd510 l     F .text	000000d5              CVEngineServer::ClientCommand(edict_t*, char const*, ...)
00377780 l     O .bss	00000400              CVEngineServer::ClientCommand(edict_t*, char const*, ...)::szOut
001cd430 l     F .text	000000d4              CVEngineServer::ClientCommandKeyValues(edict_t*, KeyValues*)
001ccef0 l     F .text	0000005b              CVEngineServer::ClientPrintf(edict_t*, char const*)
001cd170 l     F .text	0000001b              CVEngineServer::CompareFileTime(char const*, char const*, int*)
001cc7d0 l     F .text	00000005              CVEngineServer::Con_NPrintf(int, char const*, ...)
001cc7e0 l     F .text	00000005              CVEngineServer::Con_NXPrintf(con_nprint_s const*, char const*, ...)
001cd0e0 l     F .text	00000015              CVEngineServer::CopyFile(char const*, char const*)
001cd9c0 l     F .text	00000032              CVEngineServer::CreateEdict(int)
001cd120 l     F .text	0000002c              CVEngineServer::CreateFakeClient(char const*)
001cc7f0 l     F .text	0000002d              CVEngineServer::CreateFakeClientEx(char const*, bool)
001cca00 l     F .text	00000015              CVEngineServer::CreateSpatialPartition(Vector const&, Vector const&)
001cccc0 l     F .text	000000c1              CVEngineServer::CrosshairAngle(edict_t const*, float, float)
001cc9f0 l     F .text	0000000f              CVEngineServer::DestroySpatialPartition(ISpatialPartition*)
001cebf0 l     F .text	000001f2              CVEngineServer::DrawMapToScratchPad(IScratchPad3D*, unsigned long)
001ce5e0 l     F .text	0000051d              CVEngineServer::EmitAmbientSound(int, Vector const&, char const*, float, soundlevel_t, int, int, float)
001cd290 l     F .text	00000090              CVEngineServer::EntityMessageBegin(int, ServerClass*, bool)
001cd8a0 l     F .text	000000dd              CVEngineServer::FadeClientVolume(edict_t const*, float, float, float, float)
001cdda0 l     F .text	000001d0              CVEngineServer::FindMap(char*, int)
001cd1e0 l     F .text	00000010              CVEngineServer::ForceExactFile(char const*)
001cdaa0 l     F .text	00000039              CVEngineServer::ForceModelBounds(char const*, Vector const&, Vector const&)
001cda80 l     F .text	0000001e              CVEngineServer::ForceSimpleMaterial(char const*)
001cc960 l     F .text	0000001a              CVEngineServer::FreeEntPrivateData(void*)
001cc890 l     F .text	0000000a              CVEngineServer::GetAchievementMgr()
001cca40 l     F .text	0000015f              CVEngineServer::GetAllClusterBounds(bbox_t*, int)
001ccfa0 l     F .text	00000009              CVEngineServer::GetAppID()
001cba80 l     F .text	0000001b              CVEngineServer::GetAreaBits(int, unsigned char*, int)
001cba60 l     F .text	0000001b              CVEngineServer::GetAreaPortalPlane(Vector const&, int, VPlane*)
001cbaa0 l     F .text	0000001a              CVEngineServer::GetArea(Vector const&)
001ccbd0 l     F .text	00000021              CVEngineServer::GetChangeAccessor(edict_t const*)
001ce150 l     F .text	00000066              CVEngineServer::GetClientConVarValue(int, char const*)
001cdf70 l     F .text	000000f5              CVEngineServer::GetClientSteamIDByPlayerIndex(int)
001ccba0 l     F .text	0000002a              CVEngineServer::GetClientSteamID(edict_t*)
001cc8d0 l     F .text	00000013              CVEngineServer::GetClusterCount()
001cc940 l     F .text	0000001a              CVEngineServer::GetClusterForOrigin(Vector const&)
001cc760 l     F .text	00000010              CVEngineServer::GetEntityCount()
001cd020 l     F .text	0000004f              CVEngineServer::GetEntityTransmitBitsForClient(int)
001cd190 l     F .text	00000015              CVEngineServer::GetGameDir(char*, int)
001ce1c0 l     F .text	000000b8              CVEngineServer::GetGameServerSteamID()
001cc8b0 l     F .text	0000000a              CVEngineServer::GetGamestatsData()
001cc8f0 l     F .text	0000000a              CVEngineServer::GetIServer()
001cba30 l     F .text	00000009              CVEngineServer::GetMapEntitiesString()
001cc840 l     F .text	0000000a              CVEngineServer::GetMostRecentlyLoadedFileName()
001cce10 l     F .text	00000019              CVEngineServer::GetPlayerInfo(int, player_info_s*)
001cc770 l     F .text	00000031              CVEngineServer::GetPlayerNetInfo(int)
001cc700 l     F .text	0000005d              CVEngineServer::GetPlayerNetworkIDString(edict_t const*)
001cc690 l     F .text	00000067              CVEngineServer::GetPlayerUserId(edict_t const*)
001cdc60 l     F .text	00000043              CVEngineServer::GetPrevCheckTransmitInfo(edict_t*)
001cdd20 l     F .text	00000077              CVEngineServer::GetPVSForCluster(int, int, unsigned char*)
001cc8c0 l     F .text	0000000a              CVEngineServer::GetReplay()
001cc850 l     F .text	0000000a              CVEngineServer::GetSaveFileName()
001cca20 l     F .text	00000010              CVEngineServer::GetServerTime() const
001cca30 l     F .text	00000010              CVEngineServer::GetServerVersion() const
001cc830 l     F .text	0000000a              CVEngineServer::GetSharedEdictChangeInfo()
001cce30 l     F .text	00000050              CVEngineServer::IndexOfEdict(edict_t const*)
001ccf50 l     F .text	0000004e              CVEngineServer::InsertServerCommand(char const*)
001ccc00 l     F .text	00000038              CVEngineServer::IsClientFullyAuthenticated(edict_t*)
001cdb00 l     F .text	00000019              CVEngineServer::IsDecalPrecached(char const*) const
001cc640 l     F .text	0000000c              CVEngineServer::IsDedicatedServer()
001cdae0 l     F .text	00000019              CVEngineServer::IsGenericPrecached(char const*) const
001cc660 l     F .text	00000007              CVEngineServer::IsInCommentaryMode()
001cc650 l     F .text	00000007              CVEngineServer::IsInEditMode()
001cc670 l     F .text	00000018              CVEngineServer::IsInternalBuild()
001cb9d0 l     F .text	0000000c              CVEngineServer::IsLowViolence()
001cc610 l     F .text	00000027              CVEngineServer::IsMapValid(char const*)
001cdb20 l     F .text	00000019              CVEngineServer::IsModelPrecached(char const*) const
001cc820 l     F .text	0000000f              CVEngineServer::IsPaused()
001ce0f0 l     F .text	0000005b              CVEngineServer::IsPlayerNameLocked(edict_t const*)
001cd3d0 l     F .text	0000005e              CVEngineServer::LightStyle(int, char const*)
001cb9a0 l     F .text	00000005              CVEngineServer::LoadAdjacentEnts(char const*, char const*)
001cb990 l     F .text	00000007              CVEngineServer::LoadGameState(char const*, bool)
001cd150 l     F .text	00000018              CVEngineServer::LockNetworkStringTables(bool)
001cba40 l     F .text	00000010              CVEngineServer::LogPrint(char const*)
001ce280 l     F .text	00000155              CVEngineServer::Message_CheckMessageLength()
001cd320 l     F .text	0000001f              CVEngineServer::Message_DetermineMulticastRecipients(bool, Vector const&, CBitVec<255>&)
001ce3e0 l     F .text	000000c5              CVEngineServer::MessageEnd()
001cc860 l     F .text	00000005              CVEngineServer::MultiplayerEndGame()
001cdcb0 l     F .text	00000037              CVEngineServer::NotifyEdictFlagsChange(int)
001cd100 l     F .text	0000001b              CVEngineServer::ParseFile(char const*, char*, int)
001cda00 l     F .text	0000002c              CVEngineServer::PEntityOfEntIndex(int)
001cc130 l     F .text	000004e0              CVEngineServer::PlaybackTempEntity(IRecipientFilter&, float, void const*, SendTable const*, int)
00377404 l     O .bss	0000000c              CVEngineServer::PlaybackTempEntity(IRecipientFilter&, float, void const*, SendTable const*, int)::tm_fmt
001cdc00 l     F .text	0000005c              CVEngineServer::PrecacheDecal(char const*, bool)
001cdb40 l     F .text	0000005c              CVEngineServer::PrecacheGeneric(char const*, bool)
001cdba0 l     F .text	0000005c              CVEngineServer::PrecacheModel(char const*, bool)
001cda60 l     F .text	00000015              CVEngineServer::PrecacheSentenceFile(char const*, bool)
001cd980 l     F .text	00000010              CVEngineServer::PvAllocEntPrivateData(long)
001cd990 l     F .text	0000002c              CVEngineServer::RemoveEdict(edict_t*)
001cd0b0 l     F .text	00000015              CVEngineServer::ResetPVS(unsigned char*, int)
001cc7b0 l     F .text	00000007              CVEngineServer::SaveAllocMemory(unsigned int, unsigned int)
001cc7c0 l     F .text	00000005              CVEngineServer::SaveFreeMemory(void*)
001cd730 l     F .text	00000039              CVEngineServer::SentenceGroupIndexFromName(char const*)
001cd720 l     F .text	0000000f              CVEngineServer::SentenceGroupNameFromIndex(int)
001cd850 l     F .text	0000004e              CVEngineServer::SentenceGroupPick(int, char*, int)
001cd7e0 l     F .text	00000062              CVEngineServer::SentenceGroupPickSequential(int, char*, int, int, int)
001cd780 l     F .text	00000056              CVEngineServer::SentenceIndexFromName(char const*)
001cd710 l     F .text	0000000f              CVEngineServer::SentenceLength(int)
001cd770 l     F .text	0000000f              CVEngineServer::SentenceNameFromIndex(int)
001cd600 l     F .text	0000004e              CVEngineServer::ServerCommand(char const*)
001cd5f0 l     F .text	00000009              CVEngineServer::ServerExecute()
001cc880 l     F .text	0000000d              CVEngineServer::SetAchievementMgr(IAchievementMgr*)
001cd090 l     F .text	00000015              CVEngineServer::SetAreaPortalState(int, int)
001cd070 l     F .text	0000001b              CVEngineServer::SetAreaPortalStates(int const*, int const*, int)
001cdcf0 l     F .text	0000002c              CVEngineServer::SetDedicatedServerBenchmarkMode(bool)
001ccc40 l     F .text	00000074              CVEngineServer::SetFakeClientConVarValue(edict_t*, char const*, char const*)
001cc8a0 l     F .text	0000000d              CVEngineServer::SetGamestatsData(CGamestatsData*)
001ccd90 l     F .text	0000007f              CVEngineServer::SetView(edict_t const*, edict_t const*)
001cba00 l     F .text	00000024              CVEngineServer::SolidMoved(edict_t*, ICollideable*, Vector const*, bool)
001ccfc0 l     F .text	0000005e              CVEngineServer::StartQueryCvarValue(edict_t*, char const*)
001cd340 l     F .text	0000008d              CVEngineServer::StaticDecal(Vector const&, int, int, int, bool)
001cba50 l     F .text	0000000f              CVEngineServer::TextMessageGet(char const*)
001cd1b0 l     F .text	00000021              CVEngineServer::Time()
001cb9e0 l     F .text	00000016              CVEngineServer::TriggerMoved(edict_t*, bool)
001cd1f0 l     F .text	000000a0              CVEngineServer::UserMessageBegin(IRecipientFilter*, int)
000a6980 l     F .text	00000066              CVertInfo::CVertInfo()
000a6980 l     F .text	00000066              CVertInfo::CVertInfo()
000e9d70 l     F .text	0000003e              CVirtualTerrain::~CVirtualTerrain()
000e9d70 l     F .text	0000003e              CVirtualTerrain::~CVirtualTerrain()
000e9b10 l     F .text	00000044              CVirtualTerrain::GetTrianglesInSphere(void*, Vector const&, float, virtualmeshtrianglelist_t*)
000e9b60 l     F .text	0000005a              CVirtualTerrain::GetVirtualMesh(void*, virtualmeshlist_t*)
000e9ab0 l     F .text	00000054              CVirtualTerrain::GetWorldspaceBounds(void*, Vector*, Vector*)
001cf020 l     F .text	0000000e              CVoiceServer::~CVoiceServer()
001cf020 l     F .text	0000000e              CVoiceServer::~CVoiceServer()
001cf030 l     F .text	00000012              CVoiceServer::~CVoiceServer()
001ceec0 l     F .text	00000055              CVoiceServer::GetClientListening(int, int)
001cef20 l     F .text	00000076              CVoiceServer::SetClientListening(int, int, bool)
001cefa0 l     F .text	00000076              CVoiceServer::SetClientProximity(int, int, bool)
001904e0 l     F .text	0000001b              CVoxelHash::ComputeVoxelCountAtLevel(int)
00194900 l     F .text	00000046              CVoxelHash::~CVoxelHash()
00194900 l     F .text	00000046              CVoxelHash::~CVoxelHash()
00194e00 l     F .text	00000148              CVoxelHash::CVoxelHash()
00194e00 l     F .text	00000148              CVoxelHash::CVoxelHash()
00190c60 l     F .text	00000058              CVoxelHash::EntityCount()
00194270 l     F .text	00000547              CVoxelHash::EnumerateElementsAlongRay_ExtrudedRay(int, Ray_t const&, Vector const&, Vector const&, IPartitionEnumerator*)
00192e10 l     F .text	000001ab              CVoxelHash::EnumerateElementsAlongRay_ExtrudedRaySlice(int, IPartitionEnumerator*, CIntersectSweptBox const&, int*, int*, int, int*)
001947c0 l     F .text	00000061              CVoxelHash::EnumerateElementsAlongRay(int, Ray_t const&, Vector const&, Vector const&, IPartitionEnumerator*)
00192bb0 l     F .text	0000025d              CVoxelHash::EnumerateElementsAlongRay_Ray(int, Ray_t const&, Vector const&, Vector const&, IPartitionEnumerator*)
00190910 l     F .text	0000010b              CVoxelHash::EnumerateElementsAtPoint(int, Voxel_t, Vector const&, IPartitionEnumerator*)
00191b70 l     F .text	0000038e              CVoxelHash::EnumerateElementsInBox(int, Voxel_t, Voxel_t, Vector const&, Vector const&, IPartitionEnumerator*)
00326460 l     O .bss	0000000c              CVoxelHash::EnumerateElementsInBox(int, Voxel_t, Voxel_t, Vector const&, Vector const&, IPartitionEnumerator*)::tm_fmt
00194f50 l     F .text	0000015a              CVoxelHash::Init(CVoxelTree*, Vector const&, Vector const&, int)
001950b0 l     F .text	000003c8              CVoxelHash::InsertIntoTree(unsigned short, Vector const&, Vector const&)
00190700 l     F .text	00000201              CVoxelHash::LeafListExtrudedRaySetup(Ray_t const&, Vector const&, Vector const&, Vector const&, int*, int*, int*, float*, float*, float*)
00190500 l     F .text	000001fd              CVoxelHash::LeafListRaySetup(Ray_t const&, Vector const&, Vector const&, Voxel_t, int*, float*, float*)
00194950 l     F .text	000001c0              CVoxelHash::RemoveFromTree(unsigned short)
00190d30 l     F .text	000002c2              CVoxelHash::RenderAllObjectsInTree(float)
00190d20 l     F .text	00000005              CVoxelHash::RenderGrid()
00190bc0 l     F .text	00000005              CVoxelHash::RenderObjectInVoxel(unsigned short, CPartitionVisitor*, float)
00191150 l     F .text	0000040a              CVoxelHash::RenderObjectsInPlayerLeafs(Vector const&, Vector const&, float)
00190bd0 l     F .text	0000008a              CVoxelHash::RenderObjectsInVoxel(Voxel_t, CPartitionVisitor*, bool, float)
00190bb0 l     F .text	00000005              CVoxelHash::RenderVoxel(Voxel_t, float)
00194830 l     F .text	000000c5              CVoxelHash::Shutdown()
00191650 l     F .text	000000dd              CVoxelTree::ComputeSweptRayBounds(Ray_t const&, Vector const&, Vector const&, Vector*, Vector*)
00195880 l     F .text	0000025b              CVoxelTree::~CVoxelTree()
00195880 l     F .text	0000025b              CVoxelTree::~CVoxelTree()
00195ae0 l     F .text	0000001f              CVoxelTree::~CVoxelTree()
00195b00 l     F .text	0000034f              CVoxelTree::CVoxelTree()
00195b00 l     F .text	0000034f              CVoxelTree::CVoxelTree()
00191000 l     F .text	00000098              CVoxelTree::DrawDebugOverlays()
00196440 l     F .text	000000ed              CVoxelTree::ElementMoved(unsigned short, Vector const&, Vector const&)
00192fc0 l     F .text	000007e2              CVoxelTree::EnumerateElementsAlongRay_ExtrudedRay(int, Ray_t const&, Vector const&, Vector const&, IPartitionEnumerator*)
001937b0 l     F .text	00000ab7              CVoxelTree::EnumerateElementsAlongRay(int, Ray_t const&, bool, IPartitionEnumerator*)
00326490 l     O .bss	0000000c              CVoxelTree::EnumerateElementsAlongRay(int, Ray_t const&, bool, IPartitionEnumerator*)::tm_fmt
00192760 l     F .text	0000044a              CVoxelTree::EnumerateElementsAlongRay_Ray(int, Ray_t const&, Vector const&, Vector const&, IPartitionEnumerator*)
00190a20 l     F .text	00000188              CVoxelTree::EnumerateElementsAtPoint(int, Vector const&, bool, IPartitionEnumerator*)
00191f00 l     F .text	00000854              CVoxelTree::EnumerateElementsInBox(int, Vector const&, Vector const&, bool, IPartitionEnumerator*)
00326484 l     O .bss	0000000c              CVoxelTree::EnumerateElementsInBox(int, Vector const&, Vector const&, bool, IPartitionEnumerator*)::tm_fmt
0018fe00 l     F .text	0000008c              CVoxelTree::EnumerateElementsInSphere(int, Vector const&, float, bool, IPartitionEnumerator*)
001957a0 l     F .text	000000dd              CVoxelTree::Init(CSpatialPartition*, int, Vector const&, Vector const&)
00195480 l     F .text	0000026a              CVoxelTree::InsertIntoTree(unsigned short, Vector const&, Vector const&)
00196260 l     F .text	00000169              CVoxelTree::RemoveFromTree(unsigned short)
001910a0 l     F .text	000000a2              CVoxelTree::RenderAllObjectsInTree(float)
00191560 l     F .text	000000a7              CVoxelTree::RenderObjectsInPlayerLeafs(Vector const&, Vector const&, float)
00190cc0 l     F .text	0000005f              CVoxelTree::ReportStats(char const*)
00194b10 l     F .text	00000073              CVoxelTree::Shutdown()
001162a0 l     F .text	00000005              CVProfCounter::~CVProfCounter()
001162a0 l     F .text	00000005              CVProfCounter::~CVProfCounter()
001d11d0 l     F .text	00000026              CVProfExport::AddListener()
001d1530 l     F .text	000007eb              CVProfExport::CalculateBudgetGroupTimes_Recursive(CVProfNode*)
001d1d90 l     F .text	0000003e              CVProfExport::~CVProfExport()
001d1d90 l     F .text	0000003e              CVProfExport::~CVProfExport()
001d1360 l     F .text	0000011d              CVProfExport::GetBudgetGroupInfos(IVProfExport::CExportedBudgetGroupInfo*)
001d12b0 l     F .text	000000a1              CVProfExport::GetBudgetGroupTimes(float*)
001d1230 l     F .text	00000071              CVProfExport::GetNumBudgetGroups()
001d1480 l     F .text	00000055              CVProfExport::PauseProfile()
001d1200 l     F .text	00000019              CVProfExport::RemoveListener()
001d14e0 l     F .text	0000004d              CVProfExport::ResumeProfile()
001d1220 l     F .text	0000000e              CVProfExport::SetBudgetFlagsFilter(int)
001d8440 l     F .text	00000025              CVProfRecorder::~CVProfRecorder()
001d8440 l     F .text	00000025              CVProfRecorder::~CVProfRecorder()
001d75f0 l     F .text	0000066c              CVProfRecorder::DumpAverages_R(CUtlVector<CVProfRecorder::CNodeAverage, CUtlMemory<CVProfRecorder::CNodeAverage, int> >&, CVProfNode*)
001d6bc0 l     F .text	000001f8              CVProfRecorder::FindVProfNodeByID_R(CVProfNode*, int)
001d8a00 l     F .text	00000b2f              CVProfRecorder::Playback_Average(int)
001d6a00 l     F .text	000001be              CVProfRecorder::Playback_ReadAddBudgetGroup()
001d8470 l     F .text	00000590              CVProfRecorder::Playback_ReadAddNode()
001d6dc0 l     F .text	00000830              CVProfRecorder::Playback_ReadTimings_R(CVProfNode*)
001d4e50 l     F .text	000005b1              CVProfRecorder::Record_MatchTree_R(CVProfNode*, CVProfNode const*, CVProfile*)
001d5ad0 l     F .text	00000f27              CVProfRecorder::Record_Snapshot()
001d4ca0 l     F .text	000001a7              CVProfRecorder::Record_Start(char const*)
001d5410 l     F .text	000006c0              CVProfRecorder::Record_WriteTimings_R(CVProfNode const*)
001d7df0 l     F .text	00000645              CVProfRecorder::UpdateAverages_R(CUtlVector<CVProfRecorder::CNodeAverage, CUtlMemory<CVProfRecorder::CNodeAverage, int> >&, CVProfNode*)
000a3110 l     F .text	00000070              CVProfScope::~CVProfScope()
000a3110 l     F .text	00000070              CVProfScope::~CVProfScope()
0007ffc0 l     F .text	00000068              CVProfScope::~CVProfScope() [clone .constprop.77]
001c1270 l     F .text	00000033              CWin32UploadGameStats::AddState(unsigned int, bool (CWin32UploadGameStats::*)(EGameStatsUploadStatus&, CUtlBuffer&))
001c0260 l     F .text	00000040              CWin32UploadGameStats::CloseTCPSocket(EGameStatsUploadStatus&, CUtlBuffer&)
001c0320 l     F .text	00000070              CWin32UploadGameStats::ConnectToHarvesterServer(EGameStatsUploadStatus&, CUtlBuffer&)
001c0390 l     F .text	00000078              CWin32UploadGameStats::CreateTCPSocket(EGameStatsUploadStatus&, CUtlBuffer&)
001c1110 l     F .text	0000006b              CWin32UploadGameStats::~CWin32UploadGameStats()
001c1110 l     F .text	0000006b              CWin32UploadGameStats::~CWin32UploadGameStats()
001c12b0 l     F .text	000001e4              CWin32UploadGameStats::CWin32UploadGameStats(netadr_s const&, TGameStatsParameters const&, unsigned int)
001c12b0 l     F .text	000001e4              CWin32UploadGameStats::CWin32UploadGameStats(netadr_s const&, TGameStatsParameters const&, unsigned int)
001c0530 l     F .text	0000009d              CWin32UploadGameStats::DoBlockingReceive(unsigned int, CUtlBuffer&)
001c05d0 l     F .text	0000011e              CWin32UploadGameStats::ReceiveFileUploadSuccess(EGameStatsUploadStatus&, CUtlBuffer&)
001c06f0 l     F .text	000000f9              CWin32UploadGameStats::ReceiveOKToSendFile(EGameStatsUploadStatus&, CUtlBuffer&)
001c07f0 l     F .text	0000013e              CWin32UploadGameStats::ReceiveProtocolOkay(EGameStatsUploadStatus&, CUtlBuffer&)
001c0930 l     F .text	000001fb              CWin32UploadGameStats::SendGracefulClose(EGameStatsUploadStatus&, CUtlBuffer&)
001c0fb0 l     F .text	00000158              CWin32UploadGameStats::SendProtocolVersion(EGameStatsUploadStatus&, CUtlBuffer&)
001c0b30 l     F .text	00000473              CWin32UploadGameStats::SendUploadCommand(EGameStatsUploadStatus&, CUtlBuffer&)
001c02a0 l     F .text	00000080              CWin32UploadGameStats::SendWholeFile(EGameStatsUploadStatus&, CUtlBuffer&)
001c0480 l     F .text	0000000e              CWin32UploadGameStats::SetNextState(unsigned int)
001c0410 l     F .text	0000006a              CWin32UploadGameStats::Upload(CUtlBuffer&)
001716d0 l     F .text	0000014f              CWingedEdgeList::AddEdge(Vector const&, Vector const&, int, int)
00171820 l     F .text	000000d2              CWingedEdgeList::AddSurface(cplane_t const&)
0016f8c0 l     F .text	00000183              CWingedEdgeList::AdvanceActiveEdgeList(float)
0016fa50 l     F .text	00000075              CWingedEdgeList::CheckConsistency()
0016f790 l     F .text	0000001c              CWingedEdgeList::Clear()
00173280 l     F .text	0000006a              CWingedEdgeList::~CWingedEdgeList()
00173280 l     F .text	0000006a              CWingedEdgeList::~CWingedEdgeList()
0016f690 l     F .text	000000fa              CWingedEdgeList::CWingedEdgeList()
0016f690 l     F .text	000000fa              CWingedEdgeList::CWingedEdgeList()
0016fad0 l     F .text	0000023f              CWingedEdgeList::IsOccludingActiveEdgeList(CWingedEdgeList&, float)
0016fd10 l     F .text	00000145              CWingedEdgeList::IsOccludingEdgeList(CWingedEdgeList&)
0016fe60 l     F .text	00000005              CWingedEdgeList::QueueVisualization(unsigned char*)
0016f7b0 l     F .text	0000002d              CWingedEdgeList::ResetActiveEdgeList()
0016f7e0 l     F .text	000000d5              CWingedEdgeList::SpewActiveEdgeList(float, bool)
0016fe70 l     F .text	00000005              CWingedEdgeList::Visualize(unsigned char*)
000acf90 l     F .text	000000b6              CWordTag::ComputeDataCheckSum()
000af260 l     F .text	000000a1              CWordTag::~CWordTag()
000af260 l     F .text	000000a1              CWordTag::~CWordTag()
000acbf0 l     F .text	0000004b              CWordTag::CWordTag()
000acbf0 l     F .text	0000004b              CWordTag::CWordTag()
000af3f0 l     F .text	0000009f              CWordTag::CWordTag(char const*)
000af3f0 l     F .text	0000009f              CWordTag::CWordTag(char const*)
000af550 l     F .text	00000114              CWordTag::CWordTag(CWordTag const&)
000af550 l     F .text	00000114              CWordTag::CWordTag(CWordTag const&)
000acbe0 l     F .text	0000000b              CWordTag::GetEndByte() const
000acba0 l     F .text	0000000c              CWordTag::GetSelected() const
000acbd0 l     F .text	0000000b              CWordTag::GetStartByte() const
000accf0 l     F .text	00000015              CWordTag::GetWord() const
000acc40 l     F .text	0000003c              CWordTag::IndexOfPhoneme(CPhonemeTag*)
000acb90 l     F .text	0000000e              CWordTag::SetSelected(bool)
000acbb0 l     F .text	00000014              CWordTag::SetStartAndEndBytes(unsigned int, unsigned int)
000acc80 l     F .text	00000067              CWordTag::SetWord(char const*)
001ed390 l     F .text	0000001e              CWrap::~CWrap() [clone .constprop.2]
00000000  w    F *UND*	00000000              __cxa_finalize@@GLIBC_2.1.3
002c25c0 l    d  .data	00000000              .data
001486f0 l     F .text	000000bb              datamap_t* DataMapInit<dheader_t>(dheader_t*)
002c7440 l     O .data	00000118              datamap_t* DataMapInit<dheader_t>(dheader_t*)::dataDesc
0031f028 l     O .bss	0000001c              datamap_t* DataMapInit<dheader_t>(dheader_t*)::nameHolder
00148620 l     F .text	000000bb              datamap_t* DataMapInit<lump_t>(lump_t*)
002c7320 l     O .data	00000118              datamap_t* DataMapInit<lump_t>(lump_t*)::dataDesc
0031eff8 l     O .bss	0000001c              datamap_t* DataMapInit<lump_t>(lump_t*)::nameHolder
00126b80 l     F .text	000000bb              datamap_t* DataMapInit<player_info_s>(player_info_s*)
002c6fc0 l     O .data	00000268              datamap_t* DataMapInit<player_info_s>(player_info_s*)::dataDesc
003197e8 l     O .bss	0000001c              datamap_t* DataMapInit<player_info_s>(player_info_s*)::nameHolder
00101280 l     F .text	00000058              DataTable_ClearWriteFlags_R(SendTable*)
001012e0 l     F .text	00000028              DataTable_ClearWriteFlags(ServerClass*)
00100f80 l     F .text	000001ce              DataTable_CreateClientClassInfosFromServerClasses(CBaseClientState*)
00101bc0 l     F .text	000000e8              DataTable_CreateClientTablesFromServerTables()
00100f70 l     F .text	00000007              DataTable_FindRenamedTable(char const*)
00102b40 l     F .text	0000000a              DataTable_GetTypeNameString()
001016f0 l     F .text	000000bc              DataTable_LoadDataTablesFromBuffer(bf_read*, int)
00101ad0 l     F .text	00000075              DataTable_MaybeCreateReceiveTable(CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >&, SendTable*, bool)
00101b50 l     F .text	00000070              DataTable_MaybeCreateReceiveTable_R(CUtlVector<SendTable*, CUtlMemory<SendTable*, int> >&, SendTable*)
00101210 l     F .text	00000070              DataTable_MaybeWriteSendTableBuffer_R(SendTable*, bf_write*)
00101150 l     F .text	000000b7              DataTable_MaybeWriteSendTableBuffer(SendTable*, bf_write*, bool)
00101450 l     F .text	00000294              DataTable_ParseClassInfosFromBuffer(CClientState*, bf_read*)
000a8790 l     F .text	0000002f              DataTableRecvProxy_LengthProxy(RecvProp const*, void**, void*, int)
000a74b0 l     F .text	0000000f              DataTableRecvProxy_PointerDataTable(RecvProp const*, void**, void*, int)
000a74a0 l     F .text	0000000d              DataTableRecvProxy_StaticDataTable(RecvProp const*, void**, void*, int)
001017b0 l     F .text	00000311              DataTable_SetupReceiveTableFromSendTable(SendTable*, bool)
000ffcb0 l     F .text	00000047              DataTable_Warning(char const*, ...)
001013b0 l     F .text	00000092              DataTable_WriteClassInfosBuffer(ServerClass*, bf_write*)
00101310 l     F .text	00000091              DataTable_WriteSendTablesBuffer(ServerClass*, bf_write*)
0025a9a0 l     O .rodata	00000040              dbase.3454
00315220 l     O .bss	00000048              dbg_demofile
00318c60 l     O .bss	00000048              deathmatch
000f8ba0 l     F .text	00000005              DecalDispSurfacesInit()
000f01e0 l     F .text	00000009              Decal_Init()
000f0060 l     F .text	0000017c              Decal_Shutdown()
00104cd0 l     F .text	00000081              DecodeBits(DecodeInfo*, unsigned char*)
001038b0 l     F .text	000001da              DecodeFloat(SendProp const*, bf_read*)
00104d60 l     F .text	00000033              DecodeInfo::CopyVars(DecodeInfo const*)
0035da74 l     O .bss	00000004              dedicated
001dff70 l     F .text	00000007              DefaultCompletionFunc(char const*, char (*) [64])
00226550 g     F .text	00000ac7              deflate
00226430 g     F .text	00000118              deflateBound
00227670 g     F .text	000002d2              deflateCopy
0025caa0 g     O .rodata	00000044              deflate_copyright
00227020 g     F .text	000000ff              deflateEnd
00224cc0 l     F .text	0000038c              deflate_fast
000bd8f0 l     F .text	0000029e              deflate_fast(TState&)
002251e0 l     F .text	00000146              deflate_huff
00227420 g     F .text	0000024f              deflateInit_
00227120 g     F .text	000002f7              deflateInit2_
002259b0 g     F .text	00000a25              deflateParams
00225970 g     F .text	0000003e              deflatePrime
002257b0 g     F .text	00000187              deflateReset
00225330 l     F .text	00000325              deflate_rle
00225660 g     F .text	0000014f              deflateSetDictionary
00225940 g     F .text	00000030              deflateSetHeader
00224870 l     F .text	0000044b              deflate_slow
00225050 l     F .text	00000181              deflate_stored
000bdb90 l     F .text	000003cf              deflate(TState&)
002263e0 g     F .text	00000043              deflateTune
00000000       F *UND*	00000000              operator delete(void*)@@GLIBCXX_3.4
00000000       F *UND*	00000000              operator delete[](void*)@@GLIBCXX_3.4
0022d52d l     F .text	00000031              __deregister_frame
0022d524 l     F .text	00000009              __deregister_frame_info
0022d44e l     F .text	000000d6              __deregister_frame_info_bases
001ecff0 l     F .text	00000395              Descend(char*, unsigned int, bool, unsigned int)
0008e3c0 l     F .text	0000001a              DestroyBSPTreeData(IBSPTreeData*)
00191b50 l     F .text	0000001a              DestroySpatialPartition(ISpatialPartition*)
00318d20 l     O .bss	00000048              developer
001c2b20 l     F .text	0000004d              DeveloperChangeCallback(IConVar*, char const*, float)
000f3210 l     F .text	0000000a              DevShotGenerator()
000f3300 l     F .text	00000014              DevShotGenerator_BuildMapList()
000f31b0 l     F .text	0000004f              DevShotGenerator_Init()
000f3200 l     F .text	00000005              DevShotGenerator_Shutdown()
000f3160 l     F .text	00000044              DevShotGenerator_Usage()
003156e0 l     O .bss	00000024              devshots_nextmap
0025aa20 l     O .rodata	00000040              dext.3455
0031ee04 l     O .bss	00000004              dheader_t_DataDescInit::g_DataMapHolder
001486e0 l     F .text	00000007              dheader_t::GetBaseMap()
002c72d0 l     O .data	00000018              dheader_t::m_DataMap
000ecf70 l     F .text	0000001c              differences(CCommand const&)
003144e0 l     O .bss	00000024              differences_command
000a5d90 l     F .text	000000cd              DisableUnallowedVerts_R(CDispUtilsHelper*, CVertIndex const&, int, int&)
001300b0 l     F .text	00000062              Disconnect()
00130120 l     F .text	00000009              disconnect(CCommand const&)
0031a760 l     O .bss	00000024              disconnect_command
0014cfb0 l     F .text	0000001d              DisconnectMDLCacheNotify()
001f2aa0 l     F .text	00000033              DisconnectTier1Libraries()
0021c740 l     F .text	00000073              DisconnectTier2Libraries()
0021d3d0 l     F .text	000000b9              DisconnectTier3Libraries()
000a16e0 l     F .text	00000083              DispCollTrees_Alloc(int)
000a1490 l     F .text	0000004a              DispCollTrees_Free(CDispCollTree*)
000e8ef0 l     F .text	00000026              DispCollTrees_FreeLeafList(CCollisionBSPData*)
000a4ee0 l     F .text	0000003e              DispCommon_GenerateTriIndices(int, unsigned short*)
000a4050 l     F .text	00000262              DispCommon_GenerateTriIndices_R(CNodeVert const&, CNodeVert const&, unsigned short*, int, int) [clone .constprop.29]
000a4ec0 l     F .text	00000016              DispCommon_GetNumTriIndices(int)
00316bc0 l     O .bss	00000048              disp_dynamic
000f8bf0 l     F .text	00000007              DispInfo_AddShadowsToMeshBuilder(CMeshBuilder&, unsigned short, int)
000f8bb0 l     F .text	00000005              DispInfo_BatchDecals(CDispInfo**, int)
000f88c0 l     F .text	000002c2              DispInfo_BuildPrimLists(int, msurface2_t**, int, bool, CDispInfo**, int&)
00316c8c l     O .bss	0000000c              DispInfo_BuildPrimLists(int, msurface2_t**, int, bool, CDispInfo**, int&)::tm_fmt
000f8e30 l     F .text	0000004e              DispInfo_ClearAllTags(void*)
000f8e00 l     F .text	00000022              DispInfo_ComputeIndex(void*, IDispInfo*)
000f8c20 l     F .text	0000012d              DispInfo_CreateArray(int)
000fd160 l     F .text	0000016d              DispInfo_CreateEmptyStaticBuffers(model_t*, ddispinfo_t const*)
000fd350 l     F .text	000001c1              DispInfo_CreateFromMapDisp(model_t*, int, ddispinfo_t const*, CCoreDispInfo*, CDispVert const*, CDispTri const*, MaterialSystem_SortInfo_t const*, bool)
000fc7d0 l     F .text	0000018e              DispInfo_CreateMaterialGroups(model_t*, MaterialSystem_SortInfo_t const*)
000fb150 l     F .text	00000032              DispInfo_CreateStaticBuffersAndTags(model_t*, int, CCoreDispInfo*, CDispVert const*)
000f8d50 l     F .text	00000078              DispInfo_DeleteArray(void*)
000f8bd0 l     F .text	00000005              DispInfo_DrawDecals(CDispInfo**, int)
000f8bc0 l     F .text	00000005              DispInfo_DrawDecalsGroup(int, int)
000f8be0 l     F .text	00000005              DispInfo_DrawDecals_Old(CDispInfo**, int)
000f8b90 l     F .text	00000005              DispInfo_DrawPrimLists(ERenderDepthMode)
000f8dd0 l     F .text	00000024              DispInfo_IndexArray(void*, int)
000f8c00 l     F .text	00000005              DispInfo_InitMaterialSystem()
000faa10 l     F .text	00000067              DispInfo_LinkToParentFaces(model_t*, ddispinfo_t const*, int)
000fd520 l     F .text	00000760              DispInfo_LoadDisplacements(model_t*, bool)
000fbf20 l     F .text	000002b2              DispInfo_ReleaseMaterialSystemObjects(model_t*)
000f52a0 l     F .text	00000056              DispInfoRenderDebugModes()
000f8e80 l     F .text	00000005              DispInfo_RenderList(int, msurface2_t**, int, bool, unsigned long, ERenderDepthMode)
000f8c10 l     F .text	00000005              DispInfo_ShutdownMaterialSystem()
0025cc80 l     O .rodata	00000200              _dist_code
0025a860 l     O .rodata	00000080              distfix.3536
0031e0c0 l     O .bss	00000400              d_lightstylenumframes
0031e4c0 l     O .bss	00000400              d_lightstylevalue
000a9f90 l     F .text	00000084              DoesFileExistIn(char const*, char const*)
000aa4b0 l     F .text	00000149              DoesPathExistAlready(char const*, char const*)
000a49a0 l     F .text	000000db              DoesPointHaveAnyNeighbors(CDispUtilsHelper*, CVertIndex const&)
0022d788 l     F .text	00000000              __do_global_ctors_aux
0007c200 l     F .text	00000000              __do_global_dtors_aux
000fe6a0 l     F .text	0000000a              DownloadListGenerator()
00214860 l     F .text	0000055c              DrawAxes(Vector const&, Vector*, int, Color, CMeshBuilder&) [clone .constprop.27]
000f0000 l     F .text	00000045              Draw_DecalMaterial(int)
000efff0 l     F .text	0000000a              Draw_DecalMax()
000f0050 l     F .text	0000000a              Draw_DecalNameFromIndex(int)
00214190 l     F .text	000006c9              DrawExtrusionFace(Vector const&, Vector const&, Vector*, int, int, Color, CMeshBuilder&) [clone .constprop.26]
001398a0 l     F .text	00000005              DrawModelDebugOverlay(DrawModelInfo_t const&, DrawModelResults_t const&, Vector const&, float, float, float)
00139990 l     F .text	00000055              DrawSavedModelDebugOverlays()
0021b270 l     F .text	000012a9              DrawScreenSpaceRectangle(IMaterial*, int, int, int, int, float, float, float, float, int, int, void*, int, int, float)
00259a3c l     O .rodata	00000019              DrawScreenSpaceRectangle(IMaterial*, int, int, int, int, float, float, float, float, int, int, void*, int, int, float)::__FUNCTION__
0038b0e4 l     O .bss	0000000c              DrawScreenSpaceRectangle(IMaterial*, int, int, int, int, float, float, float, float, int, int, void*, int, int, float)::tm_fmt
00323360 l     O .bss	00000048              droppackets
002c25c0 l     O .data	00000000              __dso_handle
0031a2e0 l     O .bss	00000024              dti_flush
00105310 l     F .text	000001e5              DTI_Flush()
001266b0 l     F .text	00000011              DTI_Flush_f()
00105500 l     F .text	0000002f              _DTI_HookDeltaBits(CRecvDecoder*, int, int, int)
00105580 l     F .text	000002d6              DTI_HookRecvDecoder(CRecvDecoder*)
00105300 l     F .text	00000005              DTI_Init()
00105530 l     F .text	00000049              DTI_Term()
002c2460 l     O .dtors	00000000              __DTOR_END__
002c8084 l     O .bss	00000004              dtor_idx.5795
002c245c l     O .dtors	00000000              __DTOR_LIST__
002c245c l    d  .dtors	00000000              .dtors
00317280 l     O .bss	00000048              dt_ShowPartialChangeEnts
00317300 l     O .bss	00000048              dt_UsePartialChangeEnts
001c50c0 l     F .text	000000a1              dumplongticks(CCommand const&)
00374f40 l     O .bss	00000024              dumplongticks_command
0012c1f0 l     F .text	00000009              dumpstringtables(CCommand const&)
0031aaa0 l     O .bss	00000024              dumpstringtables_command
00317580 l     O .bss	00000080              DVariant::ToString()::text
0038b3b0 l     O .bss	00000012              dwarf_reg_size_table
002c2468 l    d  .dynamic	00000000              .dynamic
002c2468 l     O *ABS*	00000000              _DYNAMIC
000025d0 l    d  .dynstr	00000000              .dynstr
00000bc0 l    d  .dynsym	00000000              .dynsym
000de370 l     F .text	0000005a              echo(CCommand const&)
0030d0a0 l     O .bss	00000024              echo_command
0017a9e0 l     F .text	000003bc              ED_Alloc(int)
0017a1e0 l     F .text	0000003c              ED_AllowImmediateReuse()
0017a3c0 l     F .text	00000050              ED_ClearEdict(edict_t*)
0017a1c0 l     F .text	00000017              ED_ClearFreeEdictList()
0017a190 l     F .text	00000024              ED_ClearFreeFlag(edict_t*)
0017a220 l     F .text	00000084              ED_Free(edict_t*)
0017a310 l     F .text	00000034              EDICT_NUM(int)
000a93b0 l     F .text	00000039              Editor_BeginSession(char const*, int, bool)
000a93f0 l     F .text	00000039              Editor_CheckVersion(char const*, int, bool)
000a9430 l     F .text	0000005c              Editor_CreateEntity(char const*, float, float, float, bool)
000a9490 l     F .text	00000063              Editor_CreateNode(char const*, int, float, float, float, bool)
000a9500 l     F .text	00000039              Editor_CreateNodeLink(int, int, bool)
000a9540 l     F .text	0000005c              Editor_DeleteEntity(char const*, float, float, float, bool)
000a96a0 l     F .text	00000032              Editor_DeleteNode(int, bool)
000a96e0 l     F .text	00000039              Editor_DeleteNodeLink(int, int, bool)
000a9720 l     F .text	00000007              Editor_EndSession(bool)
000a9610 l     F .text	00000088              Editor_RotateEntity(char const*, float, float, float, QAngle const&, bool)
000a9730 l     F .text	00000007              Editor_SendCommand(char const*, bool)
000a95a0 l     F .text	0000006a              Editor_SetKeyValue(char const*, float, float, float, char const*, char const*, bool)
0026c998 l    d  .eh_frame	00000000              .eh_frame
0025d77c l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
001491b0 l     F .text	00000076              EnableHDR(bool)
001c5030 l     F .text	0000008b              EnableLongTickWatcher()
001048a0 l     F .text	0000029e              EncodeFloat(SendProp const*, float, bf_write*, int)
000dd8f0 l     F .text	00000005              EndLoadingUpdates()
000e0610 l     F .text	0000007c              EndTrace(TraceInfo_t*&)
002c7800 l     O .data	00000004              eng
000db210 l     F .text	00000170              EngineBitBufErrorHandler(BitBufErrorType, char const*)
002da3e0 l     O .bss	00000070              EngineBitBufErrorHandler(BitBufErrorType, char const*)::errorNames
00374fe0 l     O .bss	00000048              engine_no_focus_sleep
00112680 l     F .text	0000000a              EngineSoundServer()
00115d50 l     F .text	00000005              EngineTraceRenderRayCasts()
00139170 l     F .text	00000275              Engine_WorldLightAngle(dworldlight_t const*, Vector const&, Vector const&, Vector const&)
00138fe0 l     F .text	00000186              Engine_WorldLightDistanceFalloff(dworldlight_t const*, Vector const&, bool)
000ba930 l     F .text	0000001e              EnsureDirectory(char const*, char const*)
000b58a0 l     F .text	000000e5              EnsureDirectory(char const*, char const*) [clone .part.3]
00357708 l     O .bss	00000004              entitylist
0011a660 l     F .text	00000188              EnumerateLeafInBox_R(mnode_t*, EnumLeafBoxInfo_t&)
0011acf0 l     F .text	0000021f              EnumerateLeafInSphere_R(mnode_t*, EnumLeafSphereInfo_t&, int)
0011a330 l     F .text	0000032c              EnumerateLeavesAlongExtrudedRay_R(mnode_t*, Ray_t const&, float, float, ISpatialLeafEnumerator*, int)
0011a180 l     F .text	00000194              EnumerateLeavesAlongRay_R(mnode_t*, Ray_t const&, float, float, ISpatialLeafEnumerator*, int)
0035dae0 l     O .bss	00017319              errorText
001e5cf0 l     F .text	000000ce              EvaluateConditional(char const*)
0030d160 l     O .bss	00000024              exec_command
0022a766 l     F .text	0000047e              execute_cfa_program
0022b0c9 l     F .text	000005d7              execute_stack_op
002344e0 l     O .rodata	0000004c              extra_blbits
0025d5a0 l     O .rodata	0000004c              extra_blbits
00234460 l     O .rodata	00000078              extra_dbits
0025cf00 l     O .rodata	00000078              extra_dbits
002343e0 l     O .rodata	00000074              extra_lbits
0025d400 l     O .rodata	00000074              extra_lbits
0038afd0 l     O .bss	00000010              f05
0038afc0 l     O .bss	00000010              f3
00323420 l     O .bss	00000048              fakejitter
00323300 l     O .bss	00000048              fakelag
003233c0 l     O .bss	00000048              fakeloss
001ef040 l     F .text	0000004a              FastToLower(char)
0022c74e l     F .text	0000007d              fde_mixed_encoding_compare
0022c6d1 l     F .text	0000007d              fde_single_encoding_compare
0022c1ae l     F .text	00000025              fde_unencoded_compare
0017ca40 l     F .text	000001f0              FileRenderHelper(USERID_s, char const*, char const*, char const*, FileHash_t*, int, FileHash_t*)
000a99c0 l     F .text	000001e3              FileSystem_AddLoadedSearchPath(CFSSearchPathsInit&, char const*, char const*, bool) [clone .isra.1]
000aaba0 l     F .text	0000007d              FileSystem_AddSearchPath_Platform(IFileSystem*, char const*)
000abac0 l     F .text	0000048b              FileSystem_ClearSteamEnvVars()
000a9e50 l     F .text	0000008c              FileSystem_GetExecutableDir(char*, int)
000a9bb0 l     F .text	00000124              FileSystem_GetExecutableDir(char*, int) [clone .part.7]
000aa8a0 l     F .text	00000105              FileSystem_GetFileSystemDLLName(char*, int, bool&)
000a9de0 l     F .text	0000000a              FileSystem_GetLastErrorString()
000aaa00 l     F .text	00000124              FileSystem_LoadFileSystemModule(CFSLoadModuleInfo&)
00116e70 l     F .text	00000042              FileSystem_LoadModule(char const*)
000ab070 l     F .text	00000a4a              FileSystem_LoadSearchPaths(CFSSearchPathsInit&)
000aab30 l     F .text	00000052              FileSystem_MountContent(CFSMountContentInfo&)
000aa7b0 l     F .text	000000f0              FileSystem_SetBasePaths(IFileSystem*)
000aab90 l     F .text	0000000d              FileSystem_SetErrorMode(FSErrorMode_t)
000aa9b0 l     F .text	00000050              FileSystem_SetupSteamEnvironment(CFSSteamSetupInfo&)
00116ed0 l     F .text	00000005              FileSystem_SetWhitelistSpewFlags()
00116ec0 l     F .text	00000009              FileSystem_UnloadModule(CSysModule*)
000a9ce0 l     F .text	0000000d              FileSystem_UseVProjectBinDir(bool)
000ff9d0 l     F .text	000000f0              FillPathEntries_R(CSendTablePrecalc*, CSendNode*, CSendNode*, int&)
000faa00 l     F .text	00000005              FillStaticBuffer(CGroupMesh*, CDispInfo*, CCoreDispInfo const*, CDispVert const*, int)
002245b0 l     F .text	000002b6              fill_window
000bd5e0 l     F .text	00000192              fill_window(TState&)
001a5040 l     F .text	00000066              Filter_Add_f(CCommand const&)
001a4aa0 l     F .text	00000595              Filter_Add_f(CCommand const&) [clone .part.35]
001a3ed0 l     F .text	000000ed              Filter_ConvertString(char const*, ipfilter_t*)
001a4050 l     F .text	00000005              Filter_Init()
001a4450 l     F .text	000000b0              Filter_IsUserBanned(USERID_s const&)
001a3ea0 l     F .text	0000002b              Filter_SendBan(netadr_s const&)
001a4390 l     F .text	000000bb              Filter_ShouldDiscard(netadr_s const&)
001a4060 l     F .text	00000005              Filter_Shutdown()
001a3fc0 l     F .text	00000090              Filter_StringToUserID(char const*)
001a3ba0 l     F .text	000002f5              Filter_StringToUserID(char const*) [clone .part.9]
00327540 l     O .bss	0000000c              Filter_StringToUserID(char const*)::id
000de640 l     F .text	00000085              FindAndRemoveExecutionMarker(int)
0007f980 l     F .text	00000044              FindCommonPathID(char const*)
0007f9d0 l     F .text	0000005d              FindCommonPrefix(char const*)
000a5030 l     F .text	000000e8              FindEdge(CCoreDispInfo*, Vector const&, Vector const&, int&)
000ff830 l     F .text	00000075              FindExcludeProp(char const*, char const*, ExcludeProp const*, int)
000ed260 l     F .text	0000001c              findflags(CCommand const&)
00314420 l     O .bss	00000024              findflags_command
00122f60 l     F .text	000000ca              FindHLTVDataInSnapshot(CFrameSnapshot*, int)
000fb190 l     F .text	000000cb              FindNeighborCornerVert(CCoreDispInfo*, Vector const&)
000a5fb0 l     F .text	000001eb              FindNeighboringDispSurfs(CCoreDispInfo**, int)
0010a790 l     F .text	0000006c              FindRecvTable(char const*)
00120a10 l     F .text	0000005c              FindRecvTable(char const*, RecvTable**, int)
0018b840 l     F .text	0000005c              FindRecvTable(char const*, RecvTable**, int)
0018cd40 l     F .text	000000ca              FindReplayDataInSnapshot(CFrameSnapshot*, int)
001cf130 l     F .text	0000006f              FindSentGroupIndex(VProfListenInfo_t&, char const*)
000bb1a0 l     F .text	00000076              FindZipItemA(HZIP__*, char const*, bool, int*, ZIPENTRY*)
000bb220 l     F .text	000000e0              FindZipItemW(HZIP__*, char const*, bool, int*, ZIPENTRYW*)
0022d7b0 g     F .fini	00000000              _fini
0022d7b0 l    d  .fini	00000000              .fini
002c68a0 l     O .data	00000400              FirstBitInWord(unsigned int, int)::firstBitLUT
00139450 l     F .text	0000001c              FirstShadowOnModelInstance(unsigned short)
00233980 l     O .rodata	00000100              fixed_td
00232980 l     O .rodata	00001000              fixed_tl
001033e0 l     F .text	000001c1              Float_CompareDeltas(SendProp const*, bf_read*, bf_read*)
00103b50 l     F .text	0000003a              Float_Decode(DecodeInfo*)
00102820 l     F .text	0000002c              Float_DecodeZero(DecodeInfo*)
00104ca0 l     F .text	00000023              Float_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
001027f0 l     F .text	0000000a              Float_GetTypeNameString()
00103b30 l     F .text	0000001d              Float_IsEncodedZero(SendProp const*, bf_read*)
00102800 l     F .text	00000011              Float_IsZero(unsigned char const*, DVariant*, SendProp const*)
00104510 l     F .text	000001b7              Float_SkipProp(SendProp const*, bf_read*)
000e2770 l     F .text	0000006c              FloodAreaConnections(CCollisionBSPData*)
000e26a0 l     F .text	000000c7              FloodArea_r(CCollisionBSPData*, carea_t*, int)
00206420 l     F .text	00000123              FloorDivMod(double, double, int*, int*)
0020d7e0 l     F .text	0000001a              FloorPow2(int)
000bd0c0 l     F .text	000002cd              flush_block(TState&, char*, unsigned long, int)
0012bf70 l     F .text	00000035              flush(CCommand const&)
0031ab20 l     O .bss	00000024              flush_command
0012bfb0 l     F .text	00000035              flush_locked(CCommand const&)
0031ab60 l     O .bss	00000024              flush_locked_command
00138c00 l     F .text	00000037              FlushLOD_f()
00224530 l     F .text	00000073              flush_pending
00317ee0 l     O .bss	00000048              fog_enable_water_fog
00000000       O *UND*	00000000              typeinfo for CThread
00000000       O *UND*	00000000              vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
00000000       O *UND*	00000000              vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
00000000       O *UND*	00000000              vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
000bada0 l     F .text	0000023f              FormatZipMessageU(unsigned int, char*, unsigned int)
000bff50 l     F .text	00000257              FormatZipMessageZ(unsigned int, char*, unsigned int)
00259620 l     O .rodata	00000010              Four_2ToThe21s
00259610 l     O .rodata	00000010              Four_2ToThe22s
00259600 l     O .rodata	00000010              Four_2ToThe23s
002595f0 l     O .rodata	00000010              Four_2ToThe24s
002595d0 l     O .rodata	00000010              Four_Epsilons
002595c0 l     O .rodata	00000010              Four_FLT_MAX
00259650 l     O .rodata	00000010              Four_Fours
002595b0 l     O .rodata	00000010              Four_Negative_FLT_MAX
00259630 l     O .rodata	00000010              Four_NegativeOnes
00259680 l     O .rodata	00000010              Four_Ones
00259640 l     O .rodata	00000010              Four_Origin
002595e0 l     O .rodata	00000010              Four_Point225s
002596a0 l     O .rodata	00000010              Four_PointFives
00259660 l     O .rodata	00000010              Four_Threes
00259670 l     O .rodata	00000010              Four_Twos
0020ef60 l     F .text	000000ed              FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&)
00259690 l     O .rodata	00000010              Four_Zeros
00374f80 l     O .bss	00000048              fps_max
001c6f80 l     F .text	00000026              fps_max_callback(IConVar*, char const*, float)
0022c1d3 l     F .text	0000008b              frame_downheap
0007c26f l     F .text	00000000              frame_dummy
002bc4ec l     O .eh_frame	00000000              __FRAME_END__
0038b3f4 l     O .bss	000000c0              frame_hdr_cache
0038b3f0 l     O .bss	00000004              frame_hdr_cache_head
0022c25e l     F .text	00000074              frame_heapsort
002c7790 l     O .data	00000004              framesnapshotmanager
0022bc85 l     F .text	000000c1              __frame_state_for
002125f0 l     F .text	00000cc5              FrustumPlanesFromMatrix(VMatrix const&, Frustum_t&)
00116ca0 l     F .text	00000022              fs_printopenfiles(CCommand const&)
003178c0 l     O .bss	00000024              fs_printopenfiles_command
00116cd0 l     F .text	00000151              fs_warning_level(CCommand const&)
00317900 l     O .bss	00000024              fs_warning_level_command
00116e30 l     F .text	0000003d              fs_whitelist_spew_flags_changefn(IConVar*, char const*, float)
002d3480 l     O .bss	00000038              g_ActivityModifiersTable
00208330 l     F .text	000000b8              Gain(float, float)
002c7a68 l     O .data	00000008              g_Alloc
002c7814 l     O .data	00000004              game
001c2ac0 l     F .text	0000000b              GameFactory(char const*, int*)
00204490 l     F .text	0000004a              GammaToLinear(float)
00203f40 l     F .text	0000003c              GammaToLinearFullRange(float)
0035d2ec l     O .bss	00000004              g_AppSystemFactory
0032c770 l     O .bss	00000014              g_AreasNetworked
00314288 l     O .bss	00000008              g_AsyncNotifyTextMutex
00319728 l     O .bss	00000001              g_bAbortServerSet
002c6fb7 l     O .data	00000001              g_bAllowSecureServers
0031ee70 l     O .bss	00000001              g_bBakedPropLightingNoSeparateHDR
003197d9 l     O .bss	00000001              g_bDedicatedServerBenchmarkMode
00316b08 l     O .bss	00000001              g_bDispOrthoRender
003171cc l     O .bss	00000001              g_bDTIEnabled
002305e0 l     O .rodata	00000004              g_bEdgeNeighborFlip
002da480 l     O .bss	0000010c              g_BenchmarkResults
0030ceb4 l     O .bss	00000001              g_bExecutionMarkerStreamInitialized
002c6f3c l     O .data	00000001              g_bFirstHookTimer
0031ee72 l     O .bss	00000001              g_bHunkAllocLightmaps
0035d2e4 l     O .bss	00000001              g_bInErrorExit
0035d2a8 l     O .bss	00000004              g_bInSpew
0037b260 l     O .bss	00000004              g_BitBufErrorHandler
0037a160 l     O .bss	00001080              g_BitWriteMasks
0031ee71 l     O .bss	00000001              g_bLoadedMapHasBakedPropLighting
0035da65 l     O .bss	00000001              g_bLongTickWatcherThreadEnabled
003197d8 l     O .bss	00000001              g_bLowViolence
0035da64 l     O .bss	00000001              g_bQuitLongTickWatcherThread
002d3060 l     O .bss	00000100              g_BreakSet
0030ff60 l     O .bss	00000100              g_BreakSet
002d3160 l     O .bss	00000100              g_BreakSetIncludingColons
0030fe60 l     O .bss	00000100              g_BreakSetIncludingColons
0030a924 l     O .bss	00000001              g_bRPTActive
00325b40 l     O .bss	00000040              g_BrushToWorldMatrix
00317200 l     O .bss	00000001              g_bServerDTIEnabled
0030d3e0 l     O .bss	00000230              g_BSPData
0035d2e5 l     O .bss	00000001              g_bTextMode
00317764 l     O .bss	00000001              g_bThreadedEngine
0035da60 l     O .bss	00000004              g_bTotalDumps
0031e9f8 l     O .bss	00000004              g_BuildCubemaps16BitTexture
002c77e4 l     O .data	00000001              g_bUpdateMinidumpComment
002c6724 l     O .data	00000001              g_bUseNetworkVars
0035da66 l     O .bss	00000001              g_bUsingLegacyAppSystems
0035d2f0 l     O .bss	00000001              g_bV3SteamInterface
003751ac l     O .bss	00000001              g_bVCRSingleStep
0031e9f4 l     O .bss	00000004              g_CameraTexture
002bc4f0 l    d  .gcc_except_table	00000000              .gcc_except_table
002c6740 l     O .data	00000084              g_CCLanguageLookup
002c79fc l     O .data	00000004              __g_CClientEngineTools_singleton
00374f18 l     O .bss	0000000c              __g_CDedicatedServerAPI_singleton
002c8d00 l     O .bss	00000020              g_ChildNodeDependencies
002c8ce0 l     O .bss	00000010              g_ChildNodeIndexMul
002cfa40 l     O .bss	00001210              g_ChildVerts_17x17
002c9300 l     O .bss	00000190              g_ChildVerts_5x5
002caa00 l     O .bss	00000510              g_ChildVerts_9x9
0037edb8 l     O .bss	00000001              g_CleanupSymbolTable
00317430 l     O .bss	0000001c              g_ClientSendTables
002d5300 l     O .bss	00000004              g_cmapnames
00316cd0 l     O .bss	00000004              g_ConstructorChecker
002c6d00 l     O .data	000000c0              g_ConVarFlags
00230600 l     O .rodata	00000040              g_CoreDispNeighborOrientationMap
002c6de0 l     O .data	00000040              g_CoreDispNeighborOrientationMap
002305c0 l     O .rodata	00000020              g_CornerEdges
003763a4 l     O .bss	0000000c              __g_CreateCClientEngineToolsIClientEngineTools_reg
00314410 l     O .bss	0000000c              __g_CreateCCvarQueryICvarQuery_reg
00374f24 l     O .bss	0000000c              __g_CreateCDedicatedServerAPIIDedicatedServerAPI_reg
00317818 l     O .bss	0000000c              __g_CreateCEngineReplayIEngineReplay_reg
0031770c l     O .bss	0000000c              __g_CreateCEngineSoundServerIEngineSound_reg
003177dc l     O .bss	0000000c              __g_CreateCEngineTraceServerIEngineTrace_reg
00325860 l     O .bss	0000000c              __g_CreateCEngineUniformRandomStreamIUniformRandomStream_reg
00317ab0 l     O .bss	0000000c              __g_CreateCGameEventManagerIGameEventManager2_reg
00317acc l     O .bss	0000000c              __g_CreateCGameEventManagerOldIGameEventManager_reg
0031eddc l     O .bss	0000000c              __g_CreateCModelInfoServerIVModelInfo003_reg
0031ede8 l     O .bss	0000000c              __g_CreateCModelInfoServerIVModelInfo_reg
0031d168 l     O .bss	0000000c              __g_CreateCModelRenderIVModelRender_reg
00322974 l     O .bss	0000000c              __g_CreateCNetworkStringTableContainerINetworkStringTableContainer_reg
00322a14 l     O .bss	0000000c              __g_CreateCNetworkStringTableContainerServerINetworkStringTableContainer_reg
003763b0 l     O .bss	0000000c              __g_CreateCServerEngineToolsIServerEngineTools_reg
0035784c l     O .bss	0000000c              __g_CreateCServerPluginIServerPluginHelpers_reg
00359010 l     O .bss	0000000c              __g_CreateCServerRemoteAccessIGameServerData_reg
00326664 l     O .bss	0000000c              __g_CreateCSpatialPartitionISpatialPartition_reg
00326958 l     O .bss	0000000c              __g_CreateCStaticPropMgrIStaticPropMgrClient_reg
00326964 l     O .bss	0000000c              __g_CreateCStaticPropMgrIStaticPropMgrServer_reg
00376398 l     O .bss	0000000c              __g_CreateCToolFrameworkInternalIToolFrameworkInternal_reg
0035d224 l     O .bss	0000000c              __g_CreateCUploadGameStatsIUploadGameStats_reg
00377740 l     O .bss	0000000c              __g_CreateCVEngineServerIVEngineServer021_reg
0037774c l     O .bss	0000000c              __g_CreateCVEngineServerIVEngineServer022_reg
00377758 l     O .bss	0000000c              __g_CreateCVEngineServerIVEngineServer_reg
00377bb0 l     O .bss	0000000c              __g_CreateCVoiceServerIVoiceServer_reg
00378444 l     O .bss	0000000c              __g_CreateCVProfExportIVProfExport_reg
002c7a00 l     O .data	00000004              __g_CServerEngineTools_singleton
002390e0 l     O .rodata	00000010              g_CubeFaceIndex0
002390f0 l     O .rodata	00000010              g_CubeFaceIndex1
002c6ca0 l     O .data	00000004              g_CurGameServerID
00317b80 l     O .bss	0000000c              g_CurrentViewForward
00317b90 l     O .bss	0000000c              g_CurrentViewOrigin
00317b70 l     O .bss	0000000c              g_CurrentViewRight
00317b60 l     O .bss	0000000c              g_CurrentViewUp
00314544 l     O .bss	00000001              g_CvarUtilities
00316fa0 l     O .bss	00000048              g_CV_DTWarning
00316f40 l     O .bss	00000048              g_CV_DTWatchClass
00317060 l     O .bss	00000048              g_CV_DTWatchEnt
00317000 l     O .bss	00000048              g_CV_DTWatchVar
002c7a14 l     O .data	00000004              __g_CVoiceServer_singleton
00325da0 l     O .bss	00000030              g_DecalAllocator
00325fa8 l     O .bss	00000001              g_DecalChecker
003145e0 l     O .bss	00000600              g_DecalClipVerts
00314be0 l     O .bss	00000600              g_DecalClipVerts2
00314580 l     O .bss	0000001c              g_DecalDictionary
00314560 l     O .bss	00000014              g_DecalLookup
00375300 l     O .bss	00000200              gDemoMessageBuffer
003156a0 l     O .bss	00000020              g_DevShotGenerator
002c87c0 l     O .bss	0000001c              g_DispCollPlaneIndexHash
0030f750 l     O .bss	00000004              g_DispCollTreeCount
002c87e0 l     O .bss	00000054              g_DispCollTriCache
00316b0c l     O .bss	00000014              g_DispGroups
00316b20 l     O .bss	00000010              g_DispLightmapSamplePositions
00316b30 l     O .bss	00000014              g_DispLMAlpha
00316d80 l     O .bss	00000180              g_DownloadListGenerator
003171a0 l     O .bss	00000028              g_DTIRecvTables
00317230 l     O .bss	0000001c              g_DTISendTables
002c268c l     O .data	00000010              g_EdgeDims
002c2600 l     O .data	00000010              g_EdgeSideLenMul
00324f94 l     O .bss	00000014              g_EdgeVisualization
000bb7d0 l     F .text	000002f6              gen_bitlen(TState&, tree_desc*)
000bbad0 l     F .text	000000ca              gen_codes(TState&, ct_data*, int)
00214080 l     F .text	000000d8              GenerateBoxVertices(Vector const&, QAngle const&, Vector const&, Vector const&, Vector*)
00213f50 l     F .text	00000126              GenerateLineLoopIndexBuffer(unsigned short*, int, int)
00213e30 l     F .text	00000113              GenerateLineStripIndexBuffer(unsigned short*, int, int)
000ac710 l     F .text	00000055              GenerateLumpFileName(char const*, char*, int, int)
0020e070 l     F .text	0000008d              GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
0020d8f0 l     F .text	00000776              GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, Frustum_t&)
00213dc0 l     F .text	00000065              GeneratePolygonIndexBuffer(unsigned short*, int, int)
00213d50 l     F .text	00000064              GenerateQuadIndexBuffer(unsigned short*, int, int)
00213c10 l     F .text	00000136              GenerateSequentialIndexBuffer(unsigned short*, int, int)
00105280 l     F .text	0000007b              Generic_FastCopy(SendProp const*, RecvProp const*, unsigned char const*, unsigned char*, int)
00375040 l     O .bss	00000038              g_Engine
0030a800 l     O .bss	00000068              g_EngineStats
002d3810 l     O .bss	00000004              g_entnamelastsaved
002d3820 l     O .bss	00001a00              g_entnames
002d1e80 l     O .bss	00000484              g_ErrorEdges_17x17
002c9640 l     O .bss	00000064              g_ErrorEdges_5x5
002cb440 l     O .bss	00000144              g_ErrorEdges_9x9
0035d2f1 l     O .bss	00000001              g_eSteamLoginFailure
000fb790 l     F .text	000000a4              GetAllNeighbors(CCoreDispInfo const*, int*)
0008d100 l     F .text	00000028              GetAppFullName(ESourceApp)
0008d130 l     F .text	00000025              GetAppModName(ESourceApp)
0008d160 l     F .text	00000025              GetAppSteamAppId(ESourceApp)
002c7580 l     O .data	00000080              GetBitForBitnum(int)::bitsForBitnum
001a3230 l     F .text	000000f0              GetChangeTrack(char const*)
0022c413 l     F .text	000000ad              get_cie_encoding
0008fc00 l     F .text	00000042              GetComponentsFromNodeIndex(int, int*, int*)
000ec0c0 l     F .text	0000001c              GetConsoleLogFileData(CUtlBuffer&)
000ebdf0 l     F .text	00000069              GetConsoleLogManager()
003142a8 l     O .bss	00000004              GetConsoleLogManager()::object
000a4310 l     F .text	00000076              GetCornerIndexFromPoint(CVertIndex const&, int)
00223f50 g     F .text	00000006              get_crc_table
000b8220 l     F .text	0000000a              get_crc_table()
001f2ba0 l     F .text	0000000a              GetCStringCharConversion()
000a4f70 l     F .text	000000b1              GetDispBox(CCoreDispInfo*, CDispBox&)
00090b90 l     F .text	000002a0              GetDispNodeTriVerts(CCoreDispInfo*, int, int, Vector&, Vector&, Vector&)
000a42c0 l     F .text	0000004f              GetEdgeIndexFromPoint(CVertIndex const&, int)
000a6470 l     F .text	00000055              GetEdgeVertIndex(int, int, int, CVertIndex&)
001b2e50 l     F .text	0000002a              GetEntSendTable(edict_t*)
0022c4c0 l     F .text	00000011              get_fde_encoding
0012bb60 l     F .text	00000196              GetFileFromRemoteStorage(ISteamRemoteStorage*, char const*, char const*)
001d25a0 l     F .text	00000061              GetFileSize(_IO_FILE*)
00179e60 l     F .text	000000c5              GetFlagString(int)
00325280 l     O .bss	00000200              GetFlagString(int)::ret
0020e7e0 l     F .text	00000107              GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
0007c2b0 l     F .text	00000036              GetLanguageCodeID(ELanguage)
0007c410 l     F .text	00000028              GetLanguageICUName(ELanguage)
0007c3e0 l     F .text	00000028              GetLanguageShortName(ELanguage)
0007c490 l     F .text	00000028              GetLanguageVGUILocalization(ELanguage)
0007c440 l     F .text	00000048              GetLangugeCLocaleName(ELanguage)
00139860 l     F .text	00000007              GetLightingConditions(Vector const&, Vector*, int, LightDesc_t*, ITexture*&)
00144e30 l     F .text	00000005              GetMaterialSystemConfigForBenchmarkUpload(KeyValues*)
001c4ee0 l     F .text	00000050              GetModDirFromPath(char const*)
001e4930 l     F .text	00000057              GetModuleHandle(char const*)
000a4390 l     F .text	0000006e              GetNeighborEdgePower(CDispUtilsHelper*, int, int)
001ae520 l     F .text	0000004d              GetNetSpikeValue()
0008fbd0 l     F .text	0000000f              GetNodeChild(int, int, int)
0008fb90 l     F .text	00000023              GetNodeCount(int)
0008fc50 l     F .text	0000004c              GetNodeIndexFromComponents(int, int)
0008fb50 l     F .text	00000035              GetNodeLevel(int)
0008fbe0 l     F .text	0000001c              GetNodeMinNodeAtLevel(int)
00093c70 l     F .text	000005dd              GetNodeNeighborNodeFromNeighborSurf(int, int, int, int, int)
00093a60 l     F .text	00000210              GetNodeNeighborNode(int, int, int, int)
0008fbc0 l     F .text	0000000e              GetNodeParent(int)
001f2bb0 l     F .text	0000000a              GetNoEscCharConversion()
0009b5f0 l     F .text	00000066              GetNonMajorAxes(Vector const&, Vector2D&)
001b34a0 l     F .text	00000047              GetObjectClassName(int)
000a6d30 l     F .text	0000000f              GetPowerInfo(int)
001c3390 l     F .text	0000015e              GetSpew(char*, unsigned int)
002c6820 l     O .data	00000080              GetStartBitMask(int)::g_StartMask
0012d2b0 l     F .text	00000067              GetSteamAppID()
0031a5c8 l     O .bss	00000001              GetSteamAppID()::bHaveValidSteamInterface
0031a5d0 l     O .bss	00000004              GetSteamAppID()::sunAppID
000aa600 l     F .text	000000ce              GetSteamCfgPath(char*, int)
001c4eb0 l     F .text	0000000a              GetSteamInfIDVersionInfo()
0012d320 l     F .text	00000028              GetSteamUniverse()
001bb9e0 l     F .text	0000005e              GetStringHelper(CUtlBuffer&, char*, int)
001bba40 l     F .text	00000057              GetStringHelper(CUtlBuffer&, char*, int) [clone .constprop.68]
000a4400 l     F .text	000000a1              GetSubNeighborIndex(CDispUtilsHelper*, int, CVertIndex const&)
001adac0 l     F .text	0000000a              GetSvPureMode()
00314320 l     O .bss	00000080              GetTimestampString()::string
000ca870 l     F .text	00000151              GetUserIDString(USERID_s const&)
002d56a0 l     O .bss	00000040              GetUserIDString(USERID_s const&)::idstr
000a9e00 l     F .text	00000050              GetVProjectCmdLineValue()
000bb060 l     F .text	00000060              GetZipItemA(HZIP__*, int, ZIPENTRY*)
000bb0c0 l     F .text	000000d2              GetZipItemW(HZIP__*, int, ZIPENTRYW*)
000de300 l     F .text	0000006c              g_exec_CompletionFunc(char const*, char (*) [64])
0030d198 l     O .bss	0000000c              g_exec_CompletionFunc(char const*, char (*) [64])::execComplete
0030cea0 l     O .bss	00000014              g_ExecutionMarkers
0030cec0 l     O .bss	00000094              g_ExecutionMarkerStream
0030a8e0 l     O .bss	00000024              g_ExtraClientCmdCanExecuteCvars
0037a0c0 l     O .bss	00000084              g_ExtraMasks
00204ad0 l     F .text	000000c9              gf_exp7(unsigned int, unsigned int) [clone .part.0]
0035d2f2 l     O .bss	00000001              gfExtendedError
00318b80 l     O .bss	00000004              g_fFramesPerSecond
002c6cb0 l     O .data	00000018              g_FileAssociations
002d32a0 l     O .bss	00000100              g_FileSystemError
002c6720 l     O .data	00000004              g_FileSystemErrorMode
003143a0 l     O .bss	00000001              g_fIsDebugPrint
0031ee68 l     O .bss	00000008              g_flAccumulatedModelLoadTime
0031ee50 l     O .bss	00000008              g_flAccumulatedModelLoadTimeBrush
0031ee10 l     O .bss	00000008              g_flAccumulatedModelLoadTimeMaterialNamesOnly
0031ee48 l     O .bss	00000008              g_flAccumulatedModelLoadTimeSprite
0031ee58 l     O .bss	00000008              g_flAccumulatedModelLoadTimeStaticMesh
0031ee60 l     O .bss	00000008              g_flAccumulatedModelLoadTimeStudio
0031ee30 l     O .bss	00000008              g_flAccumulatedModelLoadTimeVCollideAsync
0031ee40 l     O .bss	00000008              g_flAccumulatedModelLoadTimeVCollideSync
0031ee20 l     O .bss	00000008              g_flAccumulatedModelLoadTimeVirtualModel
002c7238 l     O .data	00000008              g_flLastPeriodicMemDump
0032c794 l     O .bss	00000001              g_FlushMemoryOnNextServer
0032c790 l     O .bss	00000004              g_FlushMemoryOnNextServerCounter
00325ae8 l     O .bss	00000004              g_fnReplayFactory
00327800 l     O .bss	00004084              g_FrameSnapshotManager
003254c0 l     O .bss	00000100              g_FreeEdicts
00317c00 l     O .bss	000000c0              g_Frustum
0031ea1c l     O .bss	00000004              g_FullFrameDepth
0031ea10 l     O .bss	00000004              g_FullFrameFBTexture0
0031ea14 l     O .bss	00000004              g_FullFrameFBTexture1
0031ea18 l     O .bss	00000004              g_FullFrameFBTexture2
00378450 l     O .bss	00000001              g_fVprofCacheMissOnByUI
00377dc8 l     O .bss	00000001              g_fVprofOnByUI
003751b4 l     O .bss	00000008              g_Game
0035d2e0 l     O .bss	00000004              g_GameDLL
0023d698 l     O .rodata	00000004              g_GameEventManager
0031ff40 l     O .bss	00000014              g_GameLumpDict
0031ff60 l     O .bss	00000080              g_GameLumpFilename
002c77e0 l     O .data	00000004              g_GameSystemFactory
002d5320 l     O .bss	00000014              g_GroupLRU
002c77f0 l     O .data	00000004              g_hfind
003197c4 l     O .bss	00000004              g_HostEndDemo
003197d0 l     O .bss	00000004              g_HostErrorCount
003197d4 l     O .bss	00000004              g_HostServerAbortCount
0031a384 l     O .bss	00000004              gHostSpawnCount
0031b860 l     O .bss	00000328              g_HostState
00319960 l     O .bss	000001ac              g_HostTimes
0037a090 l     O .bss	00000018              g_HunkMemoryStack
0030a910 l     O .bss	00000004              g_iFilterCommandsByClientCmdCanExecute
0030a920 l     O .bss	00000004              g_iFilterCommandsByServerCanExecute
00258b60 l     O .rodata	00000498              g_ImageFormatInfo
003763c0 l     O .bss	00000060              g_InitTracker
003274c0 l     O .bss	00000014              g_IPFilters
002c77d0 l     O .data	00000004              g_iQueryCvarCookie
0035d2c0 l     O .bss	00000004              g_iServerGameClientsVersion
0035d2d0 l     O .bss	00000004              g_iServerGameDLLVersion
003751b0 l     O .bss	00000004              g_iVCRPlaybackSleepInterval
0037b500 l     O .bss	0000010c              g_KeyValuesErrorStack
0037b1e0 l     O .bss	00000080              g_LittleBits
0011a110 l     F .text	00000062              GL_LoadMaterial(char const*, char const*)
002c2580 l     O *ABS*	00000000              _GLOBAL_OFFSET_TABLE_
0006d9d0 l     F .text	00000291              _GLOBAL__sub_I_cl_clock_correction
0006e320 l     F .text	00000038              _GLOBAL__sub_I_com_ignorecolons
0006e360 l     F .text	0000011a              _GLOBAL__sub_I_con_debuglog
0006e480 l     F .text	000001fd              _GLOBAL__sub_I_cv
0007bdc0 l     F .text	00000020              _GLOBAL__sub_I_cvar
0006e7e0 l     F .text	00000063              _GLOBAL__sub_I_dbg_demofile
0007a420 l     F .text	0000013b              _GLOBAL__sub_I_dedicated
0006f7e0 l     F .text	00000038              _GLOBAL__sub_I_dt_test.cpp
0007a560 l     F .text	000001f7              _GLOBAL__sub_I_engine_no_focus_sleep
000794c0 l     F .text	000000d9              _GLOBAL__sub_I_entitylist
0007bfd0 l     F .text	00000020              _GLOBAL__sub_I_Four_PointFives
0007a760 l     F .text	0000007e              _GLOBAL__sub_I_game
00070aa0 l     F .text	00000db7              _GLOBAL__sub_I_g_bDedicatedServerBenchmarkMode
0006f1e0 l     F .text	000000d1              _GLOBAL__sub_I_g_bDTIEnabled
0006d740 l     F .text	0000014f              _GLOBAL__sub_I_g_BenchmarkResults
0006f2c0 l     F .text	000000c5              _GLOBAL__sub_I_g_bServerDTIEnabled
0006e090 l     F .text	00000132              _GLOBAL__sub_I_g_BSPData
0006ee50 l     F .text	00000077              _GLOBAL__sub_I_g_ConstructorChecker
0006e990 l     F .text	000001f9              _GLOBAL__sub_I_g_CoreDispNeighborOrientationMap
0006fd70 l     F .text	000000c2              _GLOBAL__sub_I_g_CurrentViewOrigin
0006ef90 l     F .text	00000164              _GLOBAL__sub_I_g_CV_DTWatchEnt
0006e7a0 l     F .text	00000038              _GLOBAL__sub_I_g_DecalClipVerts
0006e680 l     F .text	00000111              _GLOBAL__sub_I_g_DecalDictionary
0006e210 l     F .text	00000101              _GLOBAL__sub_I_g_DispCollTreeCount
0006c1e0 l     F .text	000000e3              _GLOBAL__sub_I_g_DispCollTriCache
0006eed0 l     F .text	000000b9              _GLOBAL__sub_I_g_DownloadListGenerator
0006c2d0 l     F .text	00000114              _GLOBAL__sub_I_g_EdgeDims
0006fbf0 l     F .text	000000dd              _GLOBAL__sub_I_g_GameEventManager
0007bae0 l     F .text	0000004b              _GLOBAL__sub_I_g_HunkMemoryStack
0006dd00 l     F .text	0000038d              _GLOBAL__sub_I_g_iFilterCommandsByServerCanExecute
00077e90 l     F .text	00000405              _GLOBAL__sub_I_g_IPFilters
00078430 l     F .text	00000491              _GLOBAL__sub_I_g_Log
0006fe40 l     F .text	000002c1              _GLOBAL__sub_I_g_MaxLeavesVisible
0007a880 l     F .text	000000ee              _GLOBAL__sub_I_gMessageParms
000766b0 l     F .text	000001b9              _GLOBAL__sub_I_g_OverlayRenderFrameID
0006f9d0 l     F .text	00000089              _GLOBAL__sub_I_g_pEngineReplay
0006f940 l     F .text	00000081              _GLOBAL__sub_I_g_pEngineTraceServer
0006fa60 l     F .text	00000141              _GLOBAL__sub_I_g_pFileSystem
0007c0b0 l     F .text	00000038              _GLOBAL__sub_I_g_pFullFileSystem
000726e0 l     F .text	00000113              _GLOBAL__sub_I_g_PhoneHome
00072ba0 l     F .text	00000038              _GLOBAL__sub_I_g_pLocalNetworkBackdoor
000772e0 l     F .text	0000009f              _GLOBAL__sub_I_g_Points
00076d40 l     F .text	00000091              _GLOBAL__sub_I_g_pReplay
0006dc70 l     F .text	00000085              _GLOBAL__sub_I_g_pSoundServices
0007c110 l     F .text	00000038              _GLOBAL__sub_I_g_pStudioRender
0007a0c0 l     F .text	00000095              _GLOBAL__sub_I_g_pUploadGameStats
0007b760 l     F .text	00000335              _GLOBAL__sub_I_g_pVProfileForDisplay
0006f530 l     F .text	000001b2              _GLOBAL__sub_I_g_RecvTables
0006f6f0 l     F .text	00000092              _GLOBAL__sub_I_g_SendTables
0006ca40 l     F .text	000002f3              _GLOBAL__sub_I_g_Sentences
00079d60 l     F .text	0000012d              _GLOBAL__sub_I_g_ServerRemoteAccess
0007ab60 l     F .text	0000029d              _GLOBAL__sub_I_g_SharedEdictChangeInfo
0006f900 l     F .text	00000038              _GLOBAL__sub_I_g_StatTime
0006d160 l     F .text	000005b5              _GLOBAL__sub_I_g_svInstanceBaselineMutex
0007a7e0 l     F .text	00000093              _GLOBAL__sub_I_g_TestScriptMgr
00070440 l     F .text	00000615              _GLOBAL__sub_I_hltv
00070a60 l     F .text	00000038              _GLOBAL__sub_I_hltvtest
00071860 l     F .text	00000c19              _GLOBAL__sub_I_host_name
0007bf10 l     F .text	00000020              _GLOBAL__sub_I_lineartovertex
000748b0 l     F .text	00000658              _GLOBAL__sub_I_mat_loadtextures
0007a160 l     F .text	000002bf              _GLOBAL__sub_I_mem_min_heapsize
0006e8f0 l     F .text	00000091              _GLOBAL__sub_I_modelorg
00076300 l     F .text	00000101              _GLOBAL__sub_I_net_queued_packet_thread
000752a0 l     F .text	000004ca              _GLOBAL__sub_I_net_showudp
00075770 l     F .text	00000020              _GLOBAL__sub_I_net_synctags.cpp
00075790 l     F .text	00000b66              _GLOBAL__sub_I_net_usesocketsforloopback
00075120 l     F .text	00000095              _GLOBAL__sub_I_networkStringTableContainerClient
00075200 l     F .text	00000095              _GLOBAL__sub_I_networkStringTableContainerServer
0006e1d0 l     F .text	00000038              _GLOBAL__sub_I_physprop
00076c00 l     F .text	00000038              _GLOBAL__sub_I_quakedef.cpp
00076c40 l     F .text	0000003f              _GLOBAL__sub_I_randomstream.cpp
00076de0 l     F .text	000004f7              _GLOBAL__sub_I_r_decal_overlap_count
00072be0 l     F .text	00000d3f              _GLOBAL__sub_I_r_drawmodelstatsoverlay
00076c80 l     F .text	00000038              _GLOBAL__sub_I_render_pch.cpp
00076d00 l     F .text	00000038              _GLOBAL__sub_I_replay
000739e0 l     F .text	00000d41              _GLOBAL__sub_I_r_framecount
000777b0 l     F .text	00000289              _GLOBAL__sub_I_r_staticpropinfo
00074f10 l     F .text	0000015d              _GLOBAL__sub_I_r_visframecount
00076410 l     F .text	0000029f              _GLOBAL__sub_I_r_visocclusion
0007bf30 l     F .text	00000052              _GLOBAL__sub_I_s_bMathlibInitialized
0006c680 l     F .text	00000052              _GLOBAL__sub_I_s_ClientElementNames
0006c890 l     F .text	00000038              _GLOBAL__sub_I_scratchpad3d.cpp
0006c6e0 l     F .text	0000008e              _GLOBAL__sub_I_s_ElementNames
00077380 l     F .text	00000038              _GLOBAL__sub_I_server_pch.cpp
0006ca00 l     F .text	00000020              _GLOBAL__sub_I_snd_posix.cpp
00077420 l     F .text	000001a3              _GLOBAL__sub_I_snd_refdist
000795a0 l     F .text	000002c5              _GLOBAL__sub_I_s_ServerPlugin
0007bde0 l     F .text	00000085              _GLOBAL__sub_I_s_StringCharConversion
00075070 l     F .text	000000ab              _GLOBAL__sub_I_sv_dumpstringtables
00077a40 l     F .text	000002d9              _GLOBAL__sub_I_sv_maxupdaterate
0006cd60 l     F .text	00000171              _GLOBAL__sub_I_sv_namechange_cooldown_seconds
000788d0 l     F .text	00000bed              _GLOBAL__sub_I_sv_shutdown_timeout_minutes
00079e90 l     F .text	00000201              _GLOBAL__sub_I_sv_steamblockingcheck
0007a970 l     F .text	00000199              _GLOBAL__sub_I_toolframework
000702d0 l     F .text	00000129              _GLOBAL__sub_I_tv_snapshotrate
0007ae00 l     F .text	00000089              _GLOBAL__sub_I_voiceserver_impl.cpp
00079960 l     F .text	00000364              _GLOBAL__sub_I__Z10RCONServerv
0007a0a0 l     F .text	00000020              _GLOBAL__sub_I__Z10UploadDataPKcS0_P9KeyValues
0006f1a0 l     F .text	00000038              _GLOBAL__sub_I__Z11EncodeFloatPK8SendPropfP8bf_writei
00072840 l     F .text	000000c3              _GLOBAL__sub_I__Z11InitMathlibv
0006c180 l     F .text	00000020              _GLOBAL__sub_I__Z12GetNodeLeveli
00076890 l     F .text	00000038              _GLOBAL__sub_I__Z13GetFlagStringi
0007baa0 l     F .text	00000038              _GLOBAL__sub_I__Z13SV_ClearWorldv
00079870 l     F .text	000000e9              _GLOBAL__sub_I__Z13SV_ModelIndexPKc
00077d20 l     F .text	00000161              _GLOBAL__sub_I__Z14GetChangeTrackPKc
00072800 l     F .text	00000038              _GLOBAL__sub_I__Z14HostState_Initv
00072910 l     F .text	00000281              _GLOBAL__sub_I__Z14Key_SetBinding12ButtonCode_tPKc
00070110 l     F .text	00000038              _GLOBAL__sub_I__Z14Shader_Connectb
000768d0 l     F .text	00000178              _GLOBAL__sub_I__Z16ED_ClearFreeFlagP7edict_t
0006c850 l     F .text	00000035              _GLOBAL__sub_I__Z16InstanceRegistryPKc
000773e0 l     F .text	00000038              _GLOBAL__sub_I__Z16SocketWouldBlockv
00079cd0 l     F .text	0000008d              _GLOBAL__sub_I__Z16SV_RedirectFlushv
0006c160 l     F .text	00000020              _GLOBAL__sub_I__Z17CreateBSPTreeDatav
0006f860 l     F .text	00000093              _GLOBAL__sub_I__Z17EngineSoundServerv
0006c7f0 l     F .text	00000020              _GLOBAL__sub_I__Z17ParseFileInternalPKcPcPbP14characterset_tj
0006f390 l     F .text	00000172              _GLOBAL__sub_I__Z18AddPropOffsetToMapP17CSendTablePrecalcii
0006d8f0 l     F .text	00000071              _GLOBAL__sub_I__Z18ClearCheatCommandsv
0006c7d0 l     F .text	00000020              _GLOBAL__sub_I__Z19Editor_BeginSessionPKcib
0007bff0 l     F .text	00000038              _GLOBAL__sub_I__Z19SetupMatrixIdentityv
0006d8d0 l     F .text	00000020              _GLOBAL__sub_I__Z20AllocChangeFrameListii
0006c830 l     F .text	00000020              _GLOBAL__sub_I__Z20GenerateLumpFileNamePKcPcii
0006c770 l     F .text	00000020              _GLOBAL__sub_I__Z21AllocateStringHelper2PKcPc
0006cee0 l     F .text	00000279              _GLOBAL__sub_I__Z21UpdateNameFromSteamIDP7IConVarP8CSteamID
0006e850 l     F .text	0000009b              _GLOBAL__sub_I__Z22DevShotGenerator_Usagev
0006d970 l     F .text	00000038              _GLOBAL__sub_I__Z24COM_BlockSequenceCRCBytePhii
0006d720 l     F .text	00000020              _GLOBAL__sub_I__Z24EngineBitBufErrorHandler15BitBufErrorTypePKc
0006c1a0 l     F .text	00000038              _GLOBAL__sub_I__Z24IntersectRayWithTriangleRK5Ray_tRK6VectorS4_S4_b
0006eb90 l     F .text	00000038              _GLOBAL__sub_I__Z25CalcMaxNumVertsAndIndicesiPiS_
00073920 l     F .text	00000079              _GLOBAL__sub_I__Z25MapReslistGenerator_Usagev
0006c790 l     F .text	00000020              _GLOBAL__sub_I__Z25RecvProxy_UtlVectorLengthPK14CRecvProxyDataPvS2_
0006f100 l     F .text	00000091              _GLOBAL__sub_I__Z26DataTable_FindRenamedTablePKc
0007bb30 l     F .text	000000cf              _GLOBAL__sub_I__Z26InternalBitBufErrorHandler15BitBufErrorTypePKc
0006c7b0 l     F .text	00000020              _GLOBAL__sub_I__Z26SendProxy_UtlVectorElementPK8SendPropPKvS3_P8DVariantii
0007c070 l     F .text	00000038              _GLOBAL__sub_I__Z27InitializeStandardMaterialsv
0006c810 l     F .text	00000020              _GLOBAL__sub_I__Z28FileSystem_UseVProjectBinDirb
0006d890 l     F .text	00000038              _GLOBAL__sub_I__Z8CCS_Initv
0007bf90 l     F .text	0000003e              _GLOBAL__sub_I__Z9_SSE_Sqrtf
0007bda0 l     F .text	00000020              _GLOBAL__sub_I__Z9_V_memsetPKciPvii
0006fd30 l     F .text	00000038              _GLOBAL__sub_I__ZN10CGameTrace8SetEdictEP7edict_t
0007be70 l     F .text	00000020              _GLOBAL__sub_I__ZN10CUtlString11AllocMemoryEj
0007be90 l     F .text	0000003f              _GLOBAL__sub_I__ZN10CUtlSymbol14s_pSymbolTableE
000775d0 l     F .text	000001d3              _GLOBAL__sub_I__ZN10CVoxelHashC2Ev
0006c9d0 l     F .text	00000030              _GLOBAL__sub_I__ZN10TTreeStateC2Ev
00070150 l     F .text	00000171              _GLOBAL__sub_I__ZN11CHLTVClientC2EiP11CBaseServer
0007bef0 l     F .text	00000020              _GLOBAL__sub_I__ZN11ImageLoader15ImageFormatInfoE11ImageFormat
0006d9b0 l     F .text	00000020              _GLOBAL__sub_I__ZN12CClientFrameC2EP14CFrameSnapshot
0007ab10 l     F .text	0000004b              _GLOBAL__sub_I__ZN12CInitTrackerC2Ev
000783c0 l     F .text	0000006b              _GLOBAL__sub_I__ZN12CIPRateLimitC2EP6ConVarS1_S1_
00072480 l     F .text	00000259              _GLOBAL__sub_I__ZN12CMapListItemC2Ev
0007bd80 l     F .text	00000020              _GLOBAL__sub_I__ZN12CMemoryStackC2Ev
0006f510 l     F .text	00000020              _GLOBAL__sub_I__ZN12CRecvDecoderC2Ev
00076870 l     F .text	00000020              _GLOBAL__sub_I__ZN12PackedEntityC2Ev
0007ae90 l     F .text	000008c5              _GLOBAL__sub_I__ZN13ConsoleLogger7m_indexE
0007bc20 l     F .text	00000020              _GLOBAL__sub_I__ZN14CCommandBufferC2Ev
000782a0 l     F .text	00000111              _GLOBAL__sub_I__ZN14CFrameSnapshot11s_AllocatorE
0007bc40 l     F .text	00000077              _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
0006c3f0 l     F .text	00000286              _GLOBAL__sub_I__ZN14CTesselateVertC2ERK10CVertIndexi
0007bd60 l     F .text	00000020              _GLOBAL__sub_I__ZN14CUtlMemoryPool12g_ReportFuncE
0007bed0 l     F .text	00000020              _GLOBAL__sub_I__ZN15CAppSystemGroupC2EPS_
0006f790 l     F .text	00000041              _GLOBAL__sub_I__ZN15CDatatableStackC2EP17CSendTablePrecalcPhi
0006c8d0 l     F .text	00000020              _GLOBAL__sub_I__ZN15CEmphasisSample11SetSelectedEb
0007bcc0 l     F .text	00000020              _GLOBAL__sub_I__ZN16CDataManagerBaseC2Ej
0006fbb0 l     F .text	00000038              _GLOBAL__sub_I__ZN16CFileTransferMgrC2Ev
000773c0 l     F .text	00000020              _GLOBAL__sub_I__ZN16COM_IOReadBinary4openEPKc
0007c0f0 l     F .text	00000020              _GLOBAL__sub_I__ZN16CUtlStreamBufferC2Ev
00070400 l     F .text	00000038              _GLOBAL__sub_I__ZN17CHLTVDemoRecorderC2Ev
0007c030 l     F .text	00000038              _GLOBAL__sub_I__ZN18CMaterialReferenceC2EPKcS1_b
00076cc0 l     F .text	00000038              _GLOBAL__sub_I__ZN19CReplayDemoRecorderC2EP13CReplayServer
0006fcd0 l     F .text	0000005b              _GLOBAL__sub_I__ZN20CGameEventManagerOld11AddListenerEP18IGameEventListenerPKcb
00076a50 l     F .text	000001a8              _GLOBAL__sub_I__ZN20CPureServerWhitelist8CCommandC2Ev
000739a0 l     F .text	00000038              _GLOBAL__sub_I__ZN21CMaterialProxyFactory11CreateProxyEPKc
0006f820 l     F .text	00000038              _GLOBAL__sub_I__ZN22CEngineRecipientFilterC2Ev
000751c0 l     F .text	00000038              _GLOBAL__sub_I__ZN23CNetworkStringTableItemC2Ev
0006cd40 l     F .text	00000020              _GLOBAL__sub_I__ZN25CBaseAutoCompleteFileList18AutoCompletionFuncEPKcPA64_c
0007bd40 l     F .text	00000020              _GLOBAL__sub_I__ZN5CLZSS12IsCompressedEPKh
0006ca20 l     F .text	00000020              _GLOBAL__sub_I__ZN9CAutoGainC2Ev
0007bc00 l     F .text	00000020              _GLOBAL__sub_I__ZN9CByteswap23SwapFieldToTargetEndianEPvS0_P17typedescription_t
0006ebd0 l     F .text	00000279              _GLOBAL__sub_I__ZN9CDispInfo23GetIntersectingSurfacesEP30GetIntersectingSurfaces_Struct
0007bce0 l     F .text	00000020              _GLOBAL__sub_I__ZN9ILocalize20ConvertANSIToUnicodeEPKcPwi
0007bd00 l     F .text	0000003e              _GLOBAL__sub_I__ZN9KeyValues22s_pfGetSymbolForStringE
00074730 l     F .text	00000178              _GLOBAL__sub_I__ZNK10CModelInfo13GetModelIndexEPKc
0006c8f0 l     F .text	000000d9              _GLOBAL__sub_I__ZNK11studiohdr_t9pAnimdescEi
0006c140 l     F .text	00000020              _GLOBAL__sub_I__ZNK13CLC_VoiceData8ToStringEv
0032b9a0 l     O .bss	00000030              g_Log
0031e0ac l     O .bss	00000001              g_LostVideoMemory
0011a0f0 l     F .text	0000001a              GL_UnloadMaterial(IMaterial*)
00317b40 l     O .bss	0000000c              g_MainViewForward
00317b50 l     O .bss	0000000c              g_MainViewOrigin
00317b30 l     O .bss	0000000c              g_MainViewRight
00317b20 l     O .bss	0000000c              g_MainViewUp
00326794 l     O .bss	00000001              g_MakingDevShots
0031b600 l     O .bss	0000002c              g_MapListMgr
0031d480 l     O .bss	000001c0              g_MapReslistGenerator
00374e00 l     O .bss	0000009c              g_mark
0031e0a8 l     O .bss	00000004              g_materialEmpty
00385720 l     O .bss	00000400              g_Mathlib_GammaToLinear
00385320 l     O .bss	00000400              g_Mathlib_LinearToGamma
002c6f70 l     O .data	00000004              g_MaxLeavesVisible
00376120 l     O .bss	00000040              gMessageParms
00376110 l     O .bss	00000004              gMessageTable
00376100 l     O .bss	00000004              gMessageTableCount
002dab00 l     O .bss	00001000              g_minidumpinfo
003575c0 l     O .bss	00000050              g_ModDirPermissions
0031ed60 l     O .bss	0000004c              g_ModelInfoServer
0031fcc0 l     O .bss	00000224              g_ModelLoader
0035d500 l     O .bss	0000022c              gmodinfo
002c25e0 l     O .data	00000008              g_MostCommonPathIDs
002c25d0 l     O .data	00000010              g_MostCommonPrefixes
00323040 l     O .bss	00000008              g_NetScratchBuffers
002c79e0 l     O .data	00000018              gNetworkMessageNames
002c7860 l     O .data	00000180              gNetworkTextMessage
00375500 l     O .bss	00000c00              gNetworkTextMessageBuffer
0031ee00 l     O .bss	00000004              g_nMapLoadCount
00317760 l     O .bss	00000004              g_nMaterialSystemThread
00325c30 l     O .bss	00000004              g_nMaxDecals
002c8920 l     O .bss	00000040              g_NodeChildLookup
002c88c0 l     O .bss	00000048              g_NodeTriWinding
00317420 l     O .bss	00000004              g_nPropsDecoded
00257460 l     O .rodata	00000400              g_nRandomValues
002c6f58 l     O .data	00000004              g_nServerThread
002c77f4 l     O .data	00000004              g_nSpewLines
003172d4 l     O .bss	00000004              g_nTotalEntChanges
003172d0 l     O .bss	00000004              g_nTotalPropChanges
002c88a0 l     O .bss	00000004              g_nTrees
00000000 l    d  .gnu_debuglink	00000000              .gnu_debuglink
00003e0a l    d  .gnu.version	00000000              .gnu.version
0000414c l    d  .gnu.version_r	00000000              .gnu.version_r
00323f40 l     O .bss	000002c4              g_OcclusionSystem
002c26e0 l     O .data	00000040              g_OrientationRotations
002c2570 l    d  .got	00000000              .got
002c2580 l    d  .got.plt	00000000              .got.plt
00324fe0 l     O .bss	00000080              g_OverlayMgr
00324fc0 l     O .bss	00000004              g_OverlayRenderFrameID
00376450 l     O .bss	00000004              g_pAchievementMgr
002daae0 l     O .bss	00000008              g_pagedpoolinfo
003172e0 l     O .bss	00000014              g_PartialChangeEnts
0035d1f0 l     O .bss	00000004              g_pAsyncUploader
00238e2c l     O .rodata	00000008              g_pBlacklistedCommands
00376260 l     O .bss	00000040              g_pchSkipName
0030a7e0 l     O .bss	00000004              g_pClientClassHead
0037d9e0 l     O .bss	00000004              g_pCVar
0038b2c0 l     O .bss	00000004              g_pDataCache
0032c700 l     O .bss	00000004              g_pDeferredServerWork
0030f730 l     O .bss	00000004              g_pDispBounds
0030f740 l     O .bss	00000004              g_pDispCollTrees
0038b280 l     O .bss	00000004              g_pDmeMakefileUtils
003171c8 l     O .bss	00000004              g_pDTIFilename
002c6f60 l     O .data	00000004              g_pEngineReplay
002c6f5c l     O .data	00000004              g_pEngineTraceServer
00317840 l     O .bss	00000004              g_pFileSystem
00377bf0 l     O .bss	00000004              g_pfnDeferredOp
0038b1e0 l     O .bss	00000004              g_pFullFileSystem
00376440 l     O .bss	00000004              g_pGamestatsData
0035da70 l     O .bss	00000004              g_pHammer
0031b7e0 l     O .bss	00000040              g_PhoneHome
0038b1b0 l     O .bss	00000004              g_pInputSystem
0031c3d0 l     O .bss	00000004              g_pLocalNetworkBackdoor
0038b1c0 l     O .bss	00000004              g_pMaterialSystem
0031e0b0 l     O .bss	00000004              g_pMaterialSystemConfig
0038b180 l     O .bss	00000004              g_pMaterialSystemDebugTextureInfo
0038b190 l     O .bss	00000004              g_pMaterialSystemHardwareConfig
0038b340 l     O .bss	00000004              g_pMatSystemSurface
0038b2b0 l     O .bss	00000004              g_pMDLCache
0038b1a0 l     O .bss	00000004              g_pNetworkSystem
00326130 l     O .bss	00000014              g_Points
002c8be0 l     O .bss	000000f8              g_PowerInfo_17x17
002c89e0 l     O .bss	000000f8              g_PowerInfo_5x5
002c8ae0 l     O .bss	000000f8              g_PowerInfo_9x9
002c26a0 l     O .data	00000014              g_PowerInfos
0031e9e8 l     O .bss	00000004              g_PowerOfTwoFBTexture
0035da6c l     O .bss	00000004              g_pPhysics
0038b270 l     O .bss	00000004              g_pPhysicsCollision
0037d9d0 l     O .bss	00000004              g_pProcessUtils
0038b130 l     O .bss	00000004              g_pQueuedLoader
002c7620 l     O .data	00000004              g_pQueuedPackedSender
00325af0 l     O .bss	00000004              g_pReplay
002c6e40 l     O .data	000000fc              g_PropTypeFns
002d5340 l     O .bss	00000004              g_pSentenceFileList
00317210 l     O .bss	00000004              g_pServerDTIFilename
002c77c0 l     O .data	00000004              g_pServerPluginHandler
00325aec l     O .bss	00000004              g_pServerReplayContext
002c7a08 l     O .data	00000004              g_pSharedChangeInfo
002c7784 l     O .data	00000004              g_pSndIO
0038b260 l     O .bss	00000004              g_pSoundEmitterSystem
0030a874 l     O .bss	00000004              g_pSoundServices
0035da68 l     O .bss	00000004              g_pSourceVR
0038b360 l     O .bss	00000004              g_pStudioRender
002c6f6c l     O .data	00000004              g_pToolBSPTree
002c77d4 l     O .data	00000004              g_pUploadGameStats
00325720 l     O .bss	00000080              g_PureFileTracker
0037d9c0 l     O .bss	00000004              g_pUtlSortVectorQSortContext
002c7a04 l     O .data	00000004              g_pVEngineServer
0038b300 l     O .bss	00000004              g_pVGui
0038b330 l     O .bss	00000004              g_pVGuiInput
0038b2f0 l     O .bss	00000004              g_pVGuiLocalize
0038b310 l     O .bss	00000004              g_pVGuiPanel
0038b2e0 l     O .bss	00000004              g_pVGuiSchemeManager
0038b320 l     O .bss	00000004              g_pVGuiSurface
0038b2d0 l     O .bss	00000004              g_pVGuiSystem
0038b290 l     O .bss	00000004              g_pVideo
002c7a20 l     O .data	00000004              g_pVProfExport
002c7a30 l     O .data	00000004              g_pVProfileForDisplay
0038b250 l     O .bss	00000004              g_pVTex
0031e9fc l     O .bss	00000004              g_QuarterSizedFBTexture0
0031ea00 l     O .bss	00000004              g_QuarterSizedFBTexture1
00323b60 l     O .bss	0000019c              g_QueuedPacketSender
00357de0 l     O .bss	00000054              g_RCONServer
00206550 l     F .text	00000047              GreatestCommonDivisor(int, int)
00317450 l     O .bss	0000001c              g_RecvDecoders
00317470 l     O .bss	0000001c              g_RecvTables
002d33e8 l     O .bss	00000008              g_Registry
0031ea20 l     O .bss	00000004              g_ResolvedFullFrameDepth
002d52a0 l     O .bss	00000060              g_rgmapnames
003235c0 l     O .bss	00000020              g_SendQueue
003174e0 l     O .bss	00000004              g_SendTableCRC
003174f0 l     O .bss	00000014              g_SendTables
002d5304 l     O .bss	00000014              g_SentenceFile
002d5260 l     O .bss	00000014              g_SentenceGroups
002d5280 l     O .bss	00000014              g_Sentences
0031724c l     O .bss	00000008              g_ServerDTITimer
0035d240 l     O .bss	00000004              g_ServerFactory
0032cda0 l     O .bss	00000058              g_ServerGlobalVariables
00358f40 l     O .bss	00000068              g_ServerRemoteAccess
00376460 l     O .bss	00000fa4              g_SharedEdictChangeInfo
002c2620 l     O .data	0000006c              g_ShiftInfos
00325b00 l     O .bss	00000004              gs_hReplayModule
00230780 l     O .rodata	00000020              g_SideVertCorners
002d0c60 l     O .bss	00001210              g_SideVertCorners_17x17
002c94a0 l     O .bss	00000190              g_SideVertCorners_5x5
002caf20 l     O .bss	00000510              g_SideVertCorners_9x9
00230760 l     O .rodata	00000010              g_SideVertMul
002ce820 l     O .bss	00001210              g_SideVerts_17x17
002c9160 l     O .bss	00000190              g_SideVerts_5x5
002ca4e0 l     O .bss	00000510              g_SideVerts_9x9
002595a0 l     O .rodata	00000010              g_SIMD_0123
00259550 l     O .rodata	00000010              g_SIMD_AllOnesMask
00259590 l     O .rodata	00000010              g_SIMD_clear_signmask
00259560 l     O .rodata	00000010              g_SIMD_clear_wmask
00259500 l     O .rodata	00000040              g_SIMD_ComponentMask
00259540 l     O .rodata	00000010              g_SIMD_Low16BitsMask
00259570 l     O .rodata	00000010              g_SIMD_lsbmask
00259580 l     O .rodata	00000010              g_SIMD_signmask
002594c0 l     O .rodata	00000040              g_SIMD_SkipTailMask
002305e4 l     O .rodata	0000000c              g_SpanFlip
003264a0 l     O .bss	00000140              g_SpatialPartition
0035d860 l     O .bss	0000001c              g_SpewHistory
0035d84c l     O .bss	00000008              g_SpewMutex
00258980 l     O .rodata	00000024              g_StageLookup
002d2f20 l     O .bss	00000014              g_StandardRecvProxies
002d2f60 l     O .bss	0000002c              g_StandardSendProxies
002c6f54 l     O .data	00000004              g_StatTime
002c67c4 l     O .data	00000004              g_StdAllocator
0035da80 l     O .bss	00000050              g_SteamInfIDVersionInfo
002d5d08 l     O .bss	00000008              g_svInstanceBaselineMutex
003570b0 l     O .bss	00000004              g_sv_pure_mode
00357328 l     O .bss	00000001              g_sv_pure_waiting_on_reload
002c6f98 l     O .data	0000001f              g_szDefaultLogoFileName
00377e40 l     O .bss	00000080              g_szDefferedArg1
00377ec0 l     O .bss	00000080              g_szDefferedArg2
0035d400 l     O .bss	00000100              gszDisconnectReason
0035d300 l     O .bss	00000100              gszExtendedDisconnectReason
0031ea04 l     O .bss	00000004              g_TeenyFBTexture0
0031ea08 l     O .bss	00000004              g_TeenyFBTexture1
0031ea0c l     O .bss	00000004              g_TeenyFBTexture2
0030f760 l     O .bss	00000014              g_TerrainList
002c89a0 l     O .bss	00000036              g_TesselateVerts
00375260 l     O .bss	0000007c              g_TestScriptMgr
00319c90 l     O .bss	00000004              g_TimeLastMemTest
00376320 l     O .bss	00000048              g_ToolFrameworkInternal
00317220 l     O .bss	00000008              g_TotalServerDTICycles
0030d3c0 l     O .bss	00000008              g_TraceInfoPool
00327360 l     O .bss	00000028              g_Tracks
002d2320 l     O .bss	00000c00              g_TriInfos_17x17
002c96c0 l     O .bss	000000c0              g_TriInfos_5x5
002cb5a0 l     O .bss	00000300              g_TriInfos_9x9
002c26c0 l     O .data	00000008              g_TWinding
003269c0 l     O .bss	00000008              guard variable for AllocTempVector()::s_nIndex
003269b0 l     O .bss	00000008              guard variable for AllocTempVector()::s_vecTemp
002da0c0 l     O .bss	00000008              guard variable for CBaseServer::UpdateMasterServer()::bUpdateMasterServers
00315780 l     O .bss	00000008              guard variable for CDispInfo::SetupDecalNodeIntersect(CVertIndex const&, int, CDispDecalBase*, ShadowInfo_t const*)::cache
003750f0 l     O .bss	00000008              guard variable for CEngine::Frame()::pSyncReportConVar
003177a0 l     O .bss	00000008              guard variable for CEngineTrace::TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*)::_counter
00357120 l     O .bss	00000008              guard variable for CGameServer::SetHibernating(bool)::s_flPlatFloatTimeBeginUptime
0037d620 l     O .bss	00000008              guard variable for CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)::r_developer
00322e90 l     O .bss	00000008              guard variable for CNetChan::HandleUpload(CNetChan::dataFragments_s*, INetChannelHandler*)::s_pAllowUpload
00324ea0 l     O .bss	00000008              guard variable for COcclusionSystem::IsOccluded(Vector const&, Vector const&)::mutex
002d3530 l     O .bss	00000008              guard variable for CStudioHdr::pSeqdesc(int)::s_nil_seq
002d5480 l     O .bss	00000008              guard variable for CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >::Links(int) const::s_Sentinel
002da3b0 l     O .bss	00000008              guard variable for CUtlRBTree<CEventInfo*, unsigned short, bool (*)(CEventInfo* const&, CEventInfo* const&), CUtlMemory<UtlRBTreeNode_t<CEventInfo*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0032b980 l     O .bss	00000008              guard variable for CUtlRBTree<CIPRateLimit::iprate_s, int, bool (*)(CIPRateLimit::iprate_s const&, CIPRateLimit::iprate_s const&), CUtlMemory<UtlRBTreeNode_t<CIPRateLimit::iprate_s, int>, int> >::Links(int) const::s_Sentinel
00314550 l     O .bss	00000008              guard variable for CUtlRBTree<ConCommandBase const*, unsigned short, bool (*)(ConCommandBase const* const&, ConCommandBase const* const&), CUtlMemory<UtlRBTreeNode_t<ConCommandBase const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0031b7d0 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<char const*, CMapListItem, int>::Node_t, int, CUtlMap<char const*, CMapListItem, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CMapListItem, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
003257d0 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int, CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPureServerWhitelist::CCommand*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
002d5470 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
00325700 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0031d470 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int, CUtlMap<char const*, memhandle_t__*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, memhandle_t__*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
0031b5f0 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlString, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlString, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
003170e0 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned short, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00320430 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CModelLoader::ModelEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00322910 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short, CUtlMap<void*, CNetworkStringTableItem, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CNetworkStringTableItem, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
003145d0 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short, CUtlMap<void*, DecalEntry, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, DecalEntry, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0031d670 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlString, int, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, int>, int> >::Links(int) const::s_Sentinel
0037edc0 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0031d680 l     O .bss	00000008              guard variable for CUtlRBTree<CUtlSymbol, unsigned short, bool (*)(CUtlSymbol const&, CUtlSymbol const&), CUtlMemory<UtlRBTreeNode_t<CUtlSymbol, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
003257f0 l     O .bss	00000008              guard variable for CUtlRBTree<MasterFileHash_t, int, bool (*)(MasterFileHash_t const&, MasterFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<MasterFileHash_t, int>, int> >::Links(int) const::s_Sentinel
003174c0 l     O .bss	00000008              guard variable for CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
003257e0 l     O .bss	00000008              guard variable for CUtlRBTree<UserReportedFileHash_t, int, bool (*)(UserReportedFileHash_t const&, UserReportedFileHash_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFileHash_t, int>, int> >::Links(int) const::s_Sentinel
00325800 l     O .bss	00000008              guard variable for CUtlRBTree<UserReportedFile_t, int, bool (*)(UserReportedFile_t const&, UserReportedFile_t const&), CUtlMemory<UtlRBTreeNode_t<UserReportedFile_t, int>, int> >::Links(int) const::s_Sentinel
0037ed70 l     O .bss	00000008              guard variable for CUtlString::GetEmptyString()::s_emptyString
0031f020 l     O .bss	00000008              guard variable for datamap_t* DataMapInit<dheader_t>(dheader_t*)::nameHolder
0031eff0 l     O .bss	00000008              guard variable for datamap_t* DataMapInit<lump_t>(lump_t*)::nameHolder
003197e0 l     O .bss	00000008              guard variable for datamap_t* DataMapInit<player_info_s>(player_info_s*)::nameHolder
002da3c0 l     O .bss	00000008              guard variable for EngineBitBufErrorHandler(BitBufErrorType, char const*)::errorNames
00327530 l     O .bss	00000008              guard variable for Filter_StringToUserID(char const*)::id
003142a0 l     O .bss	00000008              guard variable for GetConsoleLogManager()::object
0030d190 l     O .bss	00000008              guard variable for g_exec_CompletionFunc(char const*, char (*) [64])::execComplete
0031a5d8 l     O .bss	00000008              guard variable for Host_Map_Helper(CCommand const&, bool, bool, bool)::dev_loadtime_map_start
00319d00 l     O .bss	00000008              guard variable for _Host_RunFrame_Server(bool)::_counter
00319db0 l     O .bss	00000008              guard variable for Host_ShowIPCCallCount()::s_nLastFrame
00319d90 l     O .bss	00000008              guard variable for Host_ShowIPCCallCount()::s_nLastTick
003173b0 l     O .bss	00000008              guard variable for MapPropOffsetsToIndices(CBaseEdict const*, CSendTablePrecalc*, unsigned short const*, unsigned short, unsigned short*)::testDict
0037d740 l     O .bss	00000008              guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
0037d720 l     O .bss	00000008              guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszPathMatchEnabled
0031b5e0 l     O .bss	00000008              guard variable for status(CCommand const&)::sv_tags
003227d0 l     O .bss	00000008              guard variable for VisCache_Build(VisCacheEntry&, worldbrushdata_t const&)::_counter
0035d1d0 l     O .bss	00000018              g_UploadGameStats
003274a0 l     O .bss	00000014              g_UserFilters
0038b170 l     O .bss	00000004              g_VBAllocTracker
002c8880 l     O .bss	0000000c              g_Vec3DispCollEpsilons
002c7a0c l     O .data	00000004              g_VEngineServer
002c7a10 l     O .data	00000004              g_VEngineServer22
002cb8a0 l     O .bss	00002f6a              g_VertInfo_17x17
002c8d40 l     O .bss	0000041a              g_VertInfo_5x5
002c9780 l     O .bss	00000d4a              g_VertInfo_9x9
0031e8e0 l     O .bss	00000024              g_VideoConfigMutex
0030f780 l     O .bss	0000001c              g_VirtualTerrain
002c67e0 l     O .data	00000004              g_vox_isector
002d5410 l     O .bss	00000004              g_vox_lastsectorupdate
00377bc0 l     O .bss	00000024              g_VProfExport
00378460 l     O .bss	00001a10              g_VProfRecorder
0031e9ec l     O .bss	00000004              g_WaterReflectionTexture
0031e9f0 l     O .bss	00000004              g_WaterRefractionTexture
00376160 l     O .bss	00000100              g_WhiteSpace
0021d810 g     F .text	00000046              gzbuffer
0021dec0 g     F .text	0000003c              gzclearerr
0021d490 g     F .text	0000002b              gzclose
0021f690 g     F .text	0000008b              gzclose_r
00220060 g     F .text	000000bb              gzclose_w
0021f820 l     F .text	000001b2              gz_comp
0021e290 l     F .text	00000233              gz_decomp
0021f640 g     F .text	00000041              gzdirect
0021d790 g     F .text	00000079              gzdopen
0021de20 g     F .text	0000004b              gzeof
0021de70 g     F .text	00000044              gzerror
0021df00 l     F .text	000000e0              gz_error
0021d4c0 l     F .text	0000002e              gz_error.constprop.1
0021ff20 g     F .text	00000068              gzflush
0021f0e0 g     F .text	00000204              gzgetc
0021f4a0 g     F .text	0000019c              gzgets
0021e4d0 l     F .text	0000095d              gz_head
0021f720 l     F .text	000000fd              gz_init
001ab5f0 l     F .text	0000018e              gzip_file_compress(CUtlString const&)
0024e4e4 l     O .rodata	00000013              gzip_file_compress(CUtlString const&)::__FUNCTION__
0021dfe0 l     F .text	00000085              gz_load
0021ee30 l     F .text	00000095              gz_make
0021e070 l     F .text	00000217              gz_next4
0021dd90 g     F .text	0000008f              gzoffset
0021dd10 g     F .text	00000080              gzoffset64
0021d750 g     F .text	00000012              gzopen
0021d4f0 l     F .text	0000025d              gz_open
0021d770 g     F .text	00000012              gzopen64
0021fdf0 g     F .text	0000012f              gzprintf
0021fc40 g     F .text	000000d6              gzputc
0021fd20 g     F .text	000000d0              gzputs
0021eed0 g     F .text	00000201              gzread
0021d860 g     F .text	0000009e              gzrewind
0021dbe0 g     F .text	00000041              gzseek
0021d900 g     F .text	000002d6              gzseek64
0021ff90 g     F .text	000000c5              gzsetparams
0021dca0 g     F .text	00000066              gztell
0021dc30 g     F .text	00000070              gztell64
0021f2f0 g     F .text	000001a6              gzungetc
0021fbb0 g     F .text	00000086              gzwrite
0021fab0 l     F .text	000000f2              gzwrite.part.0
0021f9e0 l     F .text	000000cd              gz_zero
0030cf90 l     O .bss	00000004              HandleExecutionMarker(char const*, char const*)::cnt
000ec320 l     F .text	00000058              HandleRedirectAndDebugLog(char const*)
00144860 l     F .text	00000005              HandleServerAllowColorCorrection()
000a5520 l     F .text	0000008d              HasEdgeNeighbor(CCoreDispInfo const*, int)
00000118 l    d  .hash	00000000              .hash
001e3c90 l     F .text	000000bb              Hash12(void const*)
001e3d50 l     F .text	000000ee              Hash16(void const*)
001e3bb0 l     F .text	0000004c              Hash4(void const*)
001e3c00 l     F .text	00000086              Hash8(void const*)
001e3e40 l     F .text	00000062              HashBlock(void const*, unsigned int)
001e3b60 l     F .text	0000004a              HashInt(int)
001e3ab0 l     F .text	0000005b              HashStringCaseless(char const*)
001e3b10 l     F .text	0000004a              HashStringCaselessConventional(char const*)
001e3a50 l     F .text	00000059              HashString(char const*)
000bedc0 l     F .text	00000125              HasZipSuffix(char const*)
0035d140 l     O .bss	00000024              heartbeat
001bd820 l     F .text	0000001c              Heartbeat_f()
000ece80 l     F .text	0000001c              help(CCommand const&)
003144a0 l     O .bss	00000024              help_command
0020a6a0 l     F .text	00000068              Hermite_SplineBasis(float, float*)
0020a7b0 l     F .text	00000044              Hermite_Spline(float, float, float, float)
0020a610 l     F .text	00000085              Hermite_Spline(float, float, float, float, float)
0020a800 l     F .text	000000ce              Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
0020a710 l     F .text	00000096              Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
0020a4f0 l     F .text	00000119              Hermite_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
003185b0 l     O .bss	00000004              hltv
0011d200 l     F .text	00000009              HLTV_Callback_InstanceBaseline(void*, INetworkStringTable*, int, char const*, void const*)
0012a0e0 l     F .text	00000005              HLTV_Init()
00323820 l     O .bss	00000048              hltvport
0012a0f0 l     F .text	0000005d              HLTV_Shutdown()
00318b30 l     O .bss	00000004              hltvtest
00319060 l     O .bss	0000009c              host_abortserver
00126d30 l     F .text	00000021              Host_AbortServer()
00127010 l     F .text	00000202              Host_AccumulateTime(float)
0012a160 l     F .text	0000000a              Host_AllowLoadModule(char const*, char const*, bool, bool)
0012bb50 l     F .text	00000007              Host_AllowQueuedMaterialSystem(bool)
0012bd00 l     F .text	0000019c              Host_BuildConVarUpdateMessage(NET_SetConVar*, int, bool)
0012f930 l     F .text	0000016b              Host_Changelevel2_f(CCommand const&)
001332b0 l     F .text	00000022              Host_Changelevel2_f_CompletionFunc(char const*, char (*) [64])
0012a8f0 l     F .text	000002fc              Host_Changelevel(bool, char const*, char const*)
0012f7a0 l     F .text	00000189              Host_Changelevel_f(CCommand const&)
001332e0 l     F .text	00000022              Host_Changelevel_f_CompletionFunc(char const*, char (*) [64])
00127b70 l     F .text	000000ed              Host_CheckDumpMemoryStats()
00129c80 l     F .text	00000028              Host_CheckGore()
00319ee4 l     O .bss	00000001              host_checkheap
001272e0 l     F .text	00000202              Host_CleanupConVarStringValue(char const*)
00319840 l     O .bss	00000100              Host_CleanupConVarStringValue(char const*)::clean
003190fc l     O .bss	00000004              host_client
0012c840 l     F .text	00000050              Host_Client_Printf(char const*, ...)
001274f0 l     F .text	000000ec              Host_CountVariablesWithFlags(int, bool)
003197a0 l     O .bss	00000004              host_currentframetick
00126c70 l     F .text	00000029              Host_DefaultMapFileName(char const*, char*, unsigned int)
0012faa0 l     F .text	00000018              Host_Disconnect(bool, char const*)
00318fc0 l     O .bss	0000009c              host_enddemo
00126d60 l     F .text	000000dd              Host_EndGame(bool, char const*, ...)
00126e40 l     F .text	000000c6              Host_Error(char const*, ...)
00319820 l     O .bss	00000001              Host_Error(char const*, ...)::inerror
00318de0 l     O .bss	00000048              host_flush_threshold
00319100 l     O .bss	00000004              host_framecount
00318f00 l     O .bss	00000048              host_framerate
003197c0 l     O .bss	00000004              host_frameticks
00319360 l     O .bss	00000004              host_frametime
00319348 l     O .bss	00000004              host_frametime_stddeviation
00319350 l     O .bss	00000004              host_frametime_unbounded
0012b6f0 l     F .text	000000b2              Host_FreeStateAndWorld(bool)
0012b7b0 l     F .text	00000037              Host_FreeToLowMark(bool)
00127270 l     F .text	00000069              Host_GetHostInfo(float*, int*, int*, char*, int)
0012a090 l     F .text	00000026              Host_GetServerCount()
001287a0 l     F .text	00000007              Host_GetSoundDuration(char const*)
00319ee0 l     O .bss	00000004              host_hunklevel
00319330 l     O .bss	00000008              host_idealtime
0012a1b0 l     F .text	00000725              Host_Init(bool)
00319364 l     O .bss	00000001              host_initialized
00129cb0 l     F .text	000003dd              Host_InitProcessor()
00323880 l     O .bss	00000048              hostip
0012a170 l     F .text	00000039              Host_IsSecureServerAllowed()
00126cf0 l     F .text	0000002c              Host_IsSinglePlayerGame()
0012a150 l     F .text	0000000a              Host_IsValidSignature(char const*, bool)
00319120 l     O .bss	00000200              host_jitterhistory
00319110 l     O .bss	00000004              host_jitterhistorypos
00318f60 l     O .bss	00000048              host_limitlocal
0031a520 l     O .bss	00000048              host_map
00130050 l     F .text	0000002b              Host_Map_Background_f(CCommand const&)
00130020 l     F .text	0000002b              Host_Map_Commentary_f(CCommand const&)
00133310 l     F .text	00000022              Host_Map_Commentary_f_CompletionFunc(char const*, char (*) [64])
00130080 l     F .text	0000002b              Host_Map_f(CCommand const&)
00133340 l     F .text	00000022              Host_Map_f_CompletionFunc(char const*, char (*) [64])
001331a0 l     F .text	00000105              _Host_Map_f_CompletionFunc(char const*, char const*, char (*) [64])
0012fbd0 l     F .text	00000447              Host_Map_Helper(CCommand const&, bool, bool, bool)
0031a5e0 l     O .bss	00000008              Host_Map_Helper(CCommand const&, bool, bool, bool)::dev_loadtime_map_start
00133100 l     F .text	0000009d              Host_Maps_f(CCommand const&)
0031a580 l     O .bss	00000048              host_name
0012c820 l     F .text	00000014              host_name_changed_f(IConVar*, char const*, float)
0012abf0 l     F .text	00000af2              Host_NewGame(char*, bool, bool, char const*, char const*, bool)
00319ee8 l     O .bss	0000000c              Host_NewGame(char*, bool, bool, char const*, char const*, bool)::tm_fmt
00319ef4 l     O .bss	0000000c              Host_NewGame(char*, bool, bool, char const*, char const*, bool)::tm_fmt
00319f00 l     O .bss	0000000c              Host_NewGame(char*, bool, bool, char const*, char const*, bool)::tm_fmt
00319320 l     O .bss	00000004              host_nexttick
00319370 l     O .bss	00000010              host_parms
00323760 l     O .bss	00000048              hostport
00127220 l     F .text	0000004d              Host_PostFrameRate(float)
0012a0c0 l     F .text	00000019              Host_PostInit()
00319e80 l     O .bss	00000048              host_profile
0012c890 l     F .text	0000003f              Host_Quit_f(CCommand const&)
00126f10 l     F .text	000000ff              Host_ReadPreStartupConfiguration()
002411d0 l     O .rodata	00000010              Host_ReadPreStartupConfiguration()::s_PreStartupConfigConVars
001266d0 l     F .text	00000041              Host_RecomputeSpeed_f()
001284b0 l     F .text	00000005              _Host_RunFrame_Client(bool)
001289a0 l     F .text	00000d45              _Host_RunFrame(float)
001296f0 l     F .text	0000032e              Host_RunFrame(float)
00319e30 l     O .bss	00000008              _Host_RunFrame(float)::host_remainder
00319ed0 l     O .bss	00000004              Host_RunFrame(float)::timecount
00319ed8 l     O .bss	00000008              Host_RunFrame(float)::timestart
00319ec8 l     O .bss	00000008              Host_RunFrame(float)::timetotal
00319dc8 l     O .bss	0000000c              _Host_RunFrame(float)::tm_fmt
00319e38 l     O .bss	0000000c              _Host_RunFrame(float)::tm_fmt
00319e44 l     O .bss	0000000c              _Host_RunFrame(float)::tm_fmt
00319e50 l     O .bss	0000000c              _Host_RunFrame(float)::tm_fmt
00319e5c l     O .bss	0000000c              _Host_RunFrame(float)::tm_fmt
00319e68 l     O .bss	0000000c              Host_RunFrame(float)::tm_fmt
00127cc0 l     F .text	00000299              _Host_RunFrame_Input(float, bool)
002c7240 l     O .data	00000001              _Host_RunFrame_Input(float, bool)::bFirstFrame
00319ce8 l     O .bss	0000000c              _Host_RunFrame_Input(float, bool)::tm_fmt
00128600 l     F .text	00000005              _Host_RunFrame_Render()
00128350 l     F .text	00000157              _Host_RunFrame_Server_Async(int)
002411f6 l     O .rodata	0000001c              _Host_RunFrame_Server_Async(int)::__FUNCTION__
00319d18 l     O .bss	0000000c              _Host_RunFrame_Server_Async(int)::tm_fmt
00127f60 l     F .text	000003e9              _Host_RunFrame_Server(bool)
00319d08 l     O .bss	00000004              _Host_RunFrame_Server(bool)::_counter
002411e0 l     O .rodata	00000016              _Host_RunFrame_Server(bool)::__FUNCTION__
00319cf4 l     O .bss	0000000c              _Host_RunFrame_Server(bool)::tm_fmt
00319d0c l     O .bss	0000000c              _Host_RunFrame_Server(bool)::tm_fmt
00128790 l     F .text	00000005              _Host_RunFrame_Sound()
001267e0 l     F .text	000000d5              host_runofftime(CCommand const&)
0031a320 l     O .bss	00000024              host_runofftime_command
00126ca0 l     F .text	00000045              Host_SetAudioState(AudioState_t const&)
00128990 l     F .text	00000005              Host_SetClientInSimulation(bool)
00127c60 l     F .text	0000005d              _Host_SetGlobalTime()
00127b10 l     F .text	0000005e              Host_ShouldRun()
002c7230 l     O .data	00000004              Host_ShouldRun()::current_tick
003196e0 l     O .bss	00000048              host_showcachemiss
00319d40 l     O .bss	00000048              host_ShowIPCCallCount
001287b0 l     F .text	000001d2              Host_ShowIPCCallCount()
00319dc4 l     O .bss	00000004              Host_ShowIPCCallCount()::s_flLastTime
00319dc0 l     O .bss	00000004              Host_ShowIPCCallCount()::s_nLastFrame
00319da0 l     O .bss	00000004              Host_ShowIPCCallCount()::s_nLastTick
0012b8a0 l     F .text	000002ae              Host_Shutdown()
0012b7f0 l     F .text	000000a9              Host_ShutdownServer()
00319f0c l     O .bss	00000001              Host_Shutdown()::shutting_down
00319de0 l     O .bss	00000048              host_Sleep
00318e40 l     O .bss	00000048              host_speeds
00127af0 l     F .text	00000014              Host_Speeds()
00319430 l     O .bss	0000000c              host_state
00136270 l     F .text	00000055              HostState_ChangeLevelMP(char const*, char const*)
00136220 l     F .text	00000048              HostState_ChangeLevelSP(char const*, char const*)
00136bb0 l     F .text	0000001b              HostState_Frame(float)
001362d0 l     F .text	0000002c              HostState_GameShutdown()
00136490 l     F .text	00000014              HostState_Init()
00136360 l     F .text	0000001d              HostState_IsGameShuttingDown()
00136380 l     F .text	00000013              HostState_IsShuttingDown()
00136210 l     F .text	00000005              HostState_LoadGame(char const*, bool)
001361b0 l     F .text	0000005c              HostState_NewGame(char const*, bool, bool)
00136cc0 l     F .text	00000014              HostState_OnClientConnected()
001363a0 l     F .text	00000005              HostState_OnClientDisconnected()
00136350 l     F .text	0000000f              HostState_Restart()
00136180 l     F .text	00000027              HostState_RunGameInit()
001363b0 l     F .text	00000045              HostState_SetSpawnPoint(Vector&, QAngle&)
00136300 l     F .text	0000004c              HostState_Shutdown()
001bae20 l     F .text	00000041              Host_Stats_f()
0012d350 l     F .text	00000e54              Host_Status_PrintClient(IClient*, bool, void (*)(char const*, ...))
003193e0 l     O .bss	00000048              host_thread_mode
003197b0 l     O .bss	00000004              host_tickcount
00319790 l     O .bss	00000004              host_time
00126770 l     F .text	00000065              host_timer_report(CCommand const&)
0031a260 l     O .bss	00000024              host_timer_report_command
00318d80 l     O .bss	00000048              host_timer_spin_ms
00126ae0 l     F .text	00000084              HostTimerSpinMsChangedCallback(IConVar*, char const*, float)
00318ea0 l     O .bss	00000048              host_timescale
00132610 l     F .text	00000005              Host_UpdateMapList()
001275e0 l     F .text	00000005              Host_UpdateScreen()
001275f0 l     F .text	00000005              Host_UpdateSounds()
00136120 l     F .text	00000038              Host_ValidGame()
0020e6d0 l     F .text	00000110              HSVtoRGB(Vector const&, Vector&)
000b5db0 l     F .text	000006cd              huft_build(unsigned int*, unsigned int, unsigned int, unsigned int const*, unsigned int const*, inflate_huft_s**, unsigned int*, inflate_huft_s*, unsigned int*, unsigned int*)
001da210 l     F .text	00000023              Hunk_Alloc(int, bool)
0014ab10 l     F .text	00000059              Hunk_AllocNameAlignedClear_(int, int, char const*)
001da160 l     F .text	000000a6              Hunk_AllocName(int, char const*, bool)
001da250 l     F .text	00000023              Hunk_FreeToLowMark(int)
001da240 l     F .text	00000010              Hunk_LowMark()
001da280 l     F .text	00000014              Hunk_MallocSize()
001da2b0 l     F .text	00000038              Hunk_Print()
001da2a0 l     F .text	00000010              Hunk_Size()
0007c2a6 l     F .text	00000000              __i686.get_pc_thunk.bx
0022c12f l     F .text	00000000              __i686.get_pc_thunk.cx
00116720 l     F .text	0000000e              IBaseInterface::~IBaseInterface()
00116720 l     F .text	0000000e              IBaseInterface::~IBaseInterface()
001168d0 l     F .text	00000012              IBaseInterface::~IBaseInterface()
0008ede0 l     F .text	0000000e              IBSPTreeData::~IBSPTreeData()
0008ede0 l     F .text	0000000e              IBSPTreeData::~IBSPTreeData()
0008edf0 l     F .text	00000012              IBSPTreeData::~IBSPTreeData()
00204a50 l     F .text	00000074              ice_f(unsigned long, IceSubkey const*)
002051f0 l     F .text	0000000a              IceKey::blockSize() const
00204ef0 l     F .text	000000b3              IceKey::decrypt(unsigned char const*, unsigned char*) const
00204e40 l     F .text	000000ad              IceKey::encrypt(unsigned char const*, unsigned char*) const
00204dd0 l     F .text	0000006b              IceKey::~IceKey()
00204dd0 l     F .text	0000006b              IceKey::~IceKey()
00204ba0 l     F .text	00000221              IceKey::IceKey(int)
00204ba0 l     F .text	00000221              IceKey::IceKey(int)
002051e0 l     F .text	0000000d              IceKey::keySize() const
00259280 l     O .rodata	00000040              ice_keyrot
00204fb0 l     F .text	00000102              IceKey::scheduleBuild(unsigned short*, int, int const*)
002050c0 l     F .text	00000112              IceKey::set(unsigned char const*)
00259200 l     O .rodata	00000080              ice_pbox
00386b60 l     O .bss	00004000              ice_sbox
00386b40 l     O .bss	00000004              ice_sboxes_initialised
00259180 l     O .rodata	00000040              ice_smod
002591c0 l     O .rodata	00000040              ice_sxor
000db730 l     F .text	0000000e              IChangeFrameList::~IChangeFrameList()
000db730 l     F .text	0000000e              IChangeFrameList::~IChangeFrameList()
000db800 l     F .text	00000012              IChangeFrameList::~IChangeFrameList()
001caeb0 l     F .text	0000000e              IClientEngineTools::~IClientEngineTools()
001caeb0 l     F .text	0000000e              IClientEngineTools::~IClientEngineTools()
001caf50 l     F .text	00000012              IClientEngineTools::~IClientEngineTools()
000cc2d0 l     F .text	0000000e              IClient::~IClient()
000cc2d0 l     F .text	0000000e              IClient::~IClient()
000cc4c0 l     F .text	00000012              IClient::~IClient()
000cc2b0 l     F .text	0000000e              IClientMessageHandler::~IClientMessageHandler()
000cc2b0 l     F .text	0000000e              IClientMessageHandler::~IClientMessageHandler()
000cc500 l     F .text	00000012              IClientMessageHandler::~IClientMessageHandler()
0019b4b0 l     F .text	0000000e              IClientUnknown::~IClientUnknown()
0019b4b0 l     F .text	0000000e              IClientUnknown::~IClientUnknown()
0019b8e0 l     F .text	00000012              IClientUnknown::~IClientUnknown()
000d2d30 l     F .text	0000000e              IConnectionlessPacketHandler::~IConnectionlessPacketHandler()
000d2d30 l     F .text	0000000e              IConnectionlessPacketHandler::~IConnectionlessPacketHandler()
000d2da0 l     F .text	00000012              IConnectionlessPacketHandler::~IConnectionlessPacketHandler()
00125eb0 l     F .text	0000000e              IDemoPlayer::~IDemoPlayer()
00125eb0 l     F .text	0000000e              IDemoPlayer::~IDemoPlayer()
00126100 l     F .text	00000012              IDemoPlayer::~IDemoPlayer()
000fdc80 l     F .text	0000000e              IDispInfo::~IDispInfo()
000fdc80 l     F .text	0000000e              IDispInfo::~IDispInfo()
000fdca0 l     F .text	00000012              IDispInfo::~IDispInfo()
001c7ad0 l     F .text	0000000e              IEngine::~IEngine()
001c7ad0 l     F .text	0000000e              IEngine::~IEngine()
001c7ae0 l     F .text	00000012              IEngine::~IEngine()
00116870 l     F .text	0000000e              IEngineReplay::~IEngineReplay()
00116870 l     F .text	0000000e              IEngineReplay::~IEngineReplay()
001168b0 l     F .text	00000012              IEngineReplay::~IEngineReplay()
001198b0 l     F .text	0000000e              IGameEvent::~IGameEvent()
001198b0 l     F .text	0000000e              IGameEvent::~IGameEvent()
001198f0 l     F .text	00000012              IGameEvent::~IGameEvent()
000cc2c0 l     F .text	0000000e              IGameEventListener2::~IGameEventListener2()
000cc2c0 l     F .text	0000000e              IGameEventListener2::~IGameEventListener2()
000cc4e0 l     F .text	00000012              IGameEventListener2::~IGameEventListener2()
001198c0 l     F .text	0000000e              IGameEventManager2::~IGameEventManager2()
001198c0 l     F .text	0000000e              IGameEventManager2::~IGameEventManager2()
001198d0 l     F .text	00000012              IGameEventManager2::~IGameEventManager2()
0011a000 l     F .text	0000000e              IGameEventManager::~IGameEventManager()
0011a000 l     F .text	0000000e              IGameEventManager::~IGameEventManager()
0011a080 l     F .text	00000012              IGameEventManager::~IGameEventManager()
001c7cb0 l     F .text	0000000e              IGame::~IGame()
001c7cb0 l     F .text	0000000e              IGame::~IGame()
001c7cd0 l     F .text	00000012              IGame::~IGame()
001bcf50 l     F .text	0000000e              IGameServerData::~IGameServerData()
001bcf50 l     F .text	0000000e              IGameServerData::~IGameServerData()
001bcf60 l     F .text	00000012              IGameServerData::~IGameServerData()
0019b480 l     F .text	0000000e              IHandleEntity::~IHandleEntity()
0019b480 l     F .text	0000000e              IHandleEntity::~IHandleEntity()
0019b900 l     F .text	00000012              IHandleEntity::~IHandleEntity()
001f2380 l     F .text	00000025              iHexCharToInt(char)
00125ec0 l     F .text	0000000e              IHLTVServer::~IHLTVServer()
00125ec0 l     F .text	0000000e              IHLTVServer::~IHLTVServer()
001260e0 l     F .text	00000012              IHLTVServer::~IHLTVServer()
001e5000 l     F .text	00000092              IKeyValuesDumpContextAsText::KvBeginKey(KeyValues*, int)
001e4ea0 l     F .text	0000005d              IKeyValuesDumpContextAsText::KvEndKey(KeyValues*, int)
001e4f00 l     F .text	0000005b              IKeyValuesDumpContextAsText::KvWriteIndent(int)
001e7850 l     F .text	000002a8              IKeyValuesDumpContextAsText::KvWriteValue(KeyValues*, int)
001e41e0 l     F .text	00000009              ILocalize::ConstructStringKeyValuesInternal(char*, int, char const*, KeyValues*)
001e41f0 l     F .text	00000009              ILocalize::ConstructStringKeyValuesInternal(wchar_t*, int, wchar_t const*, KeyValues*)
001e41c0 l     F .text	00000009              ILocalize::ConstructStringVArgsInternal(char*, int, char const*, int, char*)
001e41d0 l     F .text	00000009              ILocalize::ConstructStringVArgsInternal(wchar_t*, int, wchar_t const*, int, char*)
001e4100 l     F .text	0000002c              ILocalize::ConvertANSIToUnicode(char const*, wchar_t*, int)
001e4130 l     F .text	00000029              ILocalize::ConvertUnicodeToANSI(wchar_t const*, char*, int)
00203da0 l     F .text	00000178              ImageLoader::D3DFormatToImageFormat(_D3DFORMAT)
00203b30 l     F .text	00000122              ImageLoader::GetMemRequired(int, int, int, ImageFormat, bool)
00203c60 l     F .text	00000082              ImageLoader::GetMipMapLevelByteOffset(int, int, ImageFormat, int)
00203cf0 l     F .text	0000004d              ImageLoader::GetMipMapLevelDimensions(int*, int*, int)
00203d40 l     F .text	0000005e              ImageLoader::GetNumMipMapLevels(int, int, int)
00203b10 l     F .text	00000013              ImageLoader::ImageFormatInfo(ImageFormat)
00203f20 l     F .text	0000001c              ImageLoader::ImageFormatToD3DFormat(ImageFormat)
0012cab0 l     F .text	000001e5              incrementvar(CCommand const&)
0031aa20 l     O .bss	00000024              incrementvar_command
000cc290 l     F .text	0000000e              INetChannelHandler::~INetChannelHandler()
000cc290 l     F .text	0000000e              INetChannelHandler::~INetChannelHandler()
000cc540 l     F .text	00000012              INetChannelHandler::~INetChannelHandler()
00165790 l     F .text	0000000e              INetChannel::~INetChannel()
00165790 l     F .text	0000000e              INetChannel::~INetChannel()
001657a0 l     F .text	00000012              INetChannel::~INetChannel()
000cc2a0 l     F .text	0000000e              INetMessageHandler::~INetMessageHandler()
000cc2a0 l     F .text	0000000e              INetMessageHandler::~INetMessageHandler()
000cc520 l     F .text	00000012              INetMessageHandler::~INetMessageHandler()
0008afb0 l     F .text	0000000e              INetMessage::~INetMessage()
0008afb0 l     F .text	0000000e              INetMessage::~INetMessage()
0008c400 l     F .text	00000012              INetMessage::~INetMessage()
0015a9d0 l     F .text	0000000e              INetworkStringDict::~INetworkStringDict()
0015a9d0 l     F .text	0000000e              INetworkStringDict::~INetworkStringDict()
0015ab20 l     F .text	00000012              INetworkStringDict::~INetworkStringDict()
0015a9c0 l     F .text	0000000e              INetworkStringTableContainer::~INetworkStringTableContainer()
0015a9c0 l     F .text	0000000e              INetworkStringTableContainer::~INetworkStringTableContainer()
0015ab40 l     F .text	00000012              INetworkStringTableContainer::~INetworkStringTableContainer()
0015a9b0 l     F .text	0000000e              INetworkStringTable::~INetworkStringTable()
0015a9b0 l     F .text	0000000e              INetworkStringTable::~INetworkStringTable()
0015ab60 l     F .text	00000012              INetworkStringTable::~INetworkStringTable()
00220760 g     F .text	00002168              inflate
000b5d50 l     F .text	00000058              inflate_blocks_free(inflate_blocks_state*, z_stream_s*)
000b7570 l     F .text	00000cad              inflate_blocks(inflate_blocks_state*, z_stream_s*, int)
000b5c80 l     F .text	000000c9              inflate_blocks_new(z_stream_s*, unsigned long (*)(unsigned long, unsigned char const*, unsigned int), unsigned int)
000b5bd0 l     F .text	000000a4              inflate_blocks_reset(inflate_blocks_state*, z_stream_s*, unsigned long*)
000b5bb0 l     F .text	00000018              inflate_codes_free(inflate_codes_state*, z_stream_s*)
000b6ca0 l     F .text	000008d0              inflate_codes(inflate_blocks_state*, z_stream_s*, int)
000b5b60 l     F .text	00000046              inflate_codes_new(unsigned int, unsigned int, inflate_huft_s const*, inflate_huft_s const*, z_stream_s*)
00222d50 g     F .text	00000273              inflateCopy
0025a920 g     O .rodata	0000002f              inflate_copyright
002328e0 l     O .rodata	0000002f              inflate_copyright_XUnzip
002228d0 g     F .text	00000057              inflateEnd
000b8410 l     F .text	00000057              inflateEnd(z_stream_s*)
00227950 l     F .text	00000943              inflate_fast
000b6750 l     F .text	0000054e              inflate_fast(unsigned int, unsigned int, inflate_huft_s const*, inflate_huft_s const*, inflate_blocks_state*, z_stream_s*)
000b59f0 l     F .text	0000016d              inflate_flush(inflate_blocks_state*, z_stream_s*, int)
00222a50 g     F .text	00000038              inflateGetHeader
00220590 g     F .text	0000015e              inflateInit_
002204a0 g     F .text	000000e6              inflateInit2_
000b8470 l     F .text	00000106              inflateInit2(z_stream_s*)
00223000 g     F .text	0000004f              inflateMark
00232920 l     O .rodata	00000044              inflate_mask
002206f0 g     F .text	0000006f              inflatePrime
00220280 g     F .text	000000b1              inflateReset
00220340 g     F .text	00000157              inflateReset2
000b83b0 l     F .text	0000005f              inflateReset(z_stream_s*)
00222930 g     F .text	0000011a              inflateSetDictionary
00222a90 g     F .text	0000028e              inflateSync
00222d20 g     F .text	0000002f              inflateSyncPoint
00223050 l     F .text	0000089a              inflate_table
000b6480 l     F .text	000000e7              inflate_trees_bits(unsigned int*, unsigned int*, inflate_huft_s**, inflate_huft_s*, z_stream_s*)
000b6570 l     F .text	000001ab              inflate_trees_dynamic(unsigned int, unsigned int, unsigned int*, unsigned int*, unsigned int*, inflate_huft_s**, inflate_huft_s**, inflate_huft_s*, z_stream_s*)
000b6720 l     F .text	0000002b              inflate_trees_fixed(unsigned int*, unsigned int*, inflate_huft_s const**, inflate_huft_s const**, z_stream_s*)
00222fd0 g     F .text	00000022              inflateUndermine
000b8580 l     F .text	00000440              inflate(z_stream_s*, int)
0006c05c g     F .init	00000000              _init
0006c05c l    d  .init	00000000              .init
000bb5d0 l     F .text	0000009d              init_block(TState&)
0009eaa0 l     F .text	00000005              InitCRTMemDebug()
0022a6e6 l     F .text	00000080              init_dwarf_reg_size_table
002d3040 l     O .bss	00000001              InitializeCharacterSets()::s_CharacterSetInitialized
0017a2b0 l     F .text	0000000f              InitializeEntityDLLFields(edict_t*)
00214dc0 l     F .text	00000279              InitializeStandardMaterials()
00145090 l     F .text	0000006e              InitMaterialSystem()
00144910 l     F .text	0000051c              InitMaterialSystemConfig(bool)
00136cf0 l     F .text	0000004f              InitMathlib()
000a6a20 l     F .text	00000307              InitPowerInfo(CPowerInfo*, int)
000a6640 l     F .text	00000315              InitPowerInfo_R(CPowerInfo*, int, CVertIndex const&, CVertIndex const&, CVertIndex const&, CVertIndex const&, CVertIndex const&, CVertIndex const&, int)
000a6330 l     F .text	00000140              InitPowerInfoTriInfos_R(CPowerInfo*, CVertIndex const&, CTriInfo*&, int, int)
002053a0 l     F .text	00000054              InitSinCosTable()
00145080 l     F .text	00000005              InitStartupScreen()
0014d8d0 l     F .text	000000e1              InitStudioModelState(model_t*)
00139530 l     F .text	00000019              InitStudioRender()
00145060 l     F .text	00000005              InitWellKnownRenderTargets()
000db380 l     F .text	00000014              InstallBitBufErrorHandler()
000aca60 l     F .text	00000036              InstanceRegistry(char const*)
00000000       F *UND*	00000000              CThreadEvent::Wait(unsigned int)
00000000       F *UND*	00000000              CThread::Join(unsigned int)
00000000       F *UND*	00000000              CThreadSpinRWLock::SpinLockForWrite(unsigned int)
00000000       F *UND*	00000000              CThread::Start(unsigned int)
00000000       F *UND*	00000000              CUniformRandomStream::RandomInt(int, int)
00104e00 l     F .text	00000275              Int64_CompareDeltas(SendProp const*, bf_read*, bf_read*)
00104df0 l     F .text	00000005              Int64_Decode(DecodeInfo*)
001050a0 l     F .text	00000005              Int64_DecodeZero(DecodeInfo*)
00104de0 l     F .text	00000005              Int64_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
00105080 l     F .text	0000000a              Int64_GetTypeNameString()
001050b0 l     F .text	00000154              Int64_IsEncodedZero(SendProp const*, bf_read*)
00105090 l     F .text	00000007              Int64_IsZero(unsigned char const*, DVariant*, SendProp const*)
00105210 l     F .text	00000064              Int64_SkipProp(SendProp const*, bf_read*)
001fc030 l     F .text	00000278              int (anonymous namespace)::Q_UnicodeConvertT<wchar_t, wchar_t, true, (anonymous namespace)::Q_UTF32ToUChar32(wchar_t const*, wchar_t&, bool&), (anonymous namespace)::Q_UChar32ToUTF32Len(wchar_t), (anonymous namespace)::Q_UChar32ToUTF32(wchar_t, wchar_t*)>(wchar_t const*, int, wchar_t*, int, EStringConvertErrorPolicy) [clone .isra.1]
00000000       F *UND*	00000000              std::string::resize(unsigned int, char)@@GLIBCXX_3.4
00103c70 l     F .text	00000166              Int_CompareDeltas(SendProp const*, bf_read*, bf_read*)
00000000       F *UND*	00000000              CVProfile::GetCounterNameAndValue(int, int&) const
001523f0 l     F .text	0000017b              int CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoRemove<model_t*>(model_t*, unsigned int)
001522c0 l     F .text	00000129              int CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::DoRemove<unsigned int>(unsigned int, unsigned int)
001811b0 l     F .text	0000010e              int CUtlSortVector<FindFileIndex_t, CStupidLess, CUtlVector<FindFileIndex_t, CUtlMemory<FindFileIndex_t, int> > >::Find<FindFileIndex_t>(FindFileIndex_t const&) const
001818a0 l     F .text	0000010e              int CUtlSortVector<FindFileIndex_t, CStupidLess, CUtlVector<FindFileIndex_t, CUtlMemory<FindFileIndex_t, int> > >::FindLessOrEqual<FindFileIndex_t>(FindFileIndex_t const&, bool*) const
00173610 l     F .text	00000225              int CUtlSortVector<int, WingedEdgeLessFunc, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual<int>(int const&, bool*) const
001528e0 l     F .text	00000119              int CUtlSortVector<modelsize_t, CModelsize_Less, CUtlVector<modelsize_t, CUtlMemory<modelsize_t, int> > >::FindLessOrEqual<modelsize_t>(modelsize_t const&, bool*) const
00173370 l     F .text	00000169              int CUtlSortVector<unsigned short, CEdgeList::EdgeLess, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> > >::FindLessOrEqual<unsigned short>(unsigned short const&, bool*) const
00103600 l     F .text	00000149              Int_Decode(DecodeInfo*)
001027c0 l     F .text	0000002c              Int_DecodeZero(DecodeInfo*)
00103750 l     F .text	00000157              Int_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
001e48f0 l     F .text	00000021              InterfaceReg::InterfaceReg(void* (*)(), char const*)
001e48f0 l     F .text	00000021              InterfaceReg::InterfaceReg(void* (*)(), char const*)
0037b4f0 l     O .bss	00000004              InterfaceReg::s_pInterfaceRegs
001da3f0 l     F .text	00000012              InternalBitBufErrorHandler(BitBufErrorType, char const*)
000a7390 l     F .text	0000005d              InternalRecvPropArray(int, int, char const*, void (*)(void*, int, int))
000a83c0 l     F .text	0000006f              InternalSendPropArray(int, int, char const*, int (*)(void const*, int))
00098e60 l     F .text	00000142              IntersectInfiniteRayWithSphere(Vector const&, Vector const&, Vector const&, float, float*, float*)
00099de0 l     F .text	00000049              IntersectRayWithAAPlane(Vector const&, Vector const&, int, float, float)
000e1400 l     F .text	0000037d              IntersectRayWithBoxBrush(TraceInfo_t*, cbrush_t const*, cboxbrush_t*)
00239100 l     O .rodata	0000000c              IntersectRayWithBoxBrush(TraceInfo_t*, cbrush_t const*, cboxbrush_t*)::signbits
000e1780 l     F .text	0000040d              IntersectRayWithBox(Ray_t const&, VectorAligned const&, VectorAligned const&, VectorAligned const&, CGameTrace*)
0023910c l     O .rodata	0000000c              IntersectRayWithBox(Ray_t const&, VectorAligned const&, VectorAligned const&, VectorAligned const&, CGameTrace*)::signbits
0009a1b0 l     F .text	00000143              IntersectRayWithBox(Ray_t const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
00099e30 l     F .text	00000117              IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, BoxTraceInfo_t*)
00099f50 l     F .text	00000252              IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
0009a990 l     F .text	00000ad8              IntersectRayWithOBB(Ray_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
0009b470 l     F .text	0000017e              IntersectRayWithOBB(Ray_t const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, CBaseTrace*)
0009a300 l     F .text	00000073              IntersectRayWithOBB(Vector const&, Vector const&, matrix3x4_t const&, Vector const&, Vector const&, float, BoxTraceInfo_t*)
0009a380 l     F .text	000004c3              IntersectRayWithOBB(Vector const&, Vector const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
0009a850 l     F .text	00000139              IntersectRayWithOBB(Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, CBaseTrace*)
00099c60 l     F .text	00000072              IntersectRayWithPlane(Ray_t const&, cplane_t const&)
00099ce0 l     F .text	00000074              IntersectRayWithPlane(Vector const&, Vector const&, cplane_t const&)
00099d60 l     F .text	00000074              IntersectRayWithPlane(Vector const&, Vector const&, Vector const&, float)
000999a0 l     F .text	000002c0              IntersectRayWithRay(Ray_t const&, Ray_t const&, float&, float&)
00098fb0 l     F .text	0000009a              IntersectRayWithSphere(Vector const&, Vector const&, Vector const&, float, float*, float*)
00098310 l     F .text	000003be              IntersectRayWithTriangle(Ray_t const&, Vector const&, Vector const&, Vector const&, bool)
00098950 l     F .text	0000015a              IntersectTriangleWithPlaneBarycentric(Vector const&, Vector const&, Vector const&, Vector4D const&, Vector2D*)
001027a0 l     F .text	0000000a              Int_GetTypeNameString()
00000000       F *UND*	00000000              CVProfile::GetBudgetGroupColor(int, int&, int&, int&, int&)
00103b90 l     F .text	000000dd              Int_IsEncodedZero(SendProp const*, bf_read*)
001027b0 l     F .text	0000000f              Int_IsZero(unsigned char const*, DVariant*, SendProp const*)
001044a0 l     F .text	00000064              Int_SkipProp(SendProp const*, bf_read*)
00000000       F *UND*	00000000              CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
001ace00 l     F .text	00000029              int V_sprintf_safe<1100u>(char (&) [1100u], char const*, ...)
0008c500 l     F .text	00000029              int V_sprintf_safe<260u>(char (&) [260u], char const*, ...)
001bfe50 l     F .text	00000029              int V_sprintf_safe<32u>(char (&) [32u], char const*, ...)
000ff370 l     F .text	00000029              int V_sprintf_safe<4096u>(char (&) [4096u], char const*, ...)
000e01b0 l     F .text	00000029              int V_sprintf_safe<512u>(char (&) [512u], char const*, ...)
000cc560 l     F .text	00000029              int V_sprintf_safe<64u>(char (&) [64u], char const*, ...)
001cbb80 l     F .text	00000083              InvalidateSharedEdictChangeInfos()
00205200 l     F .text	00000046              _InvRSquared(float const*)
002c7788 l     O .data	00000004              io
003232a0 l     O .bss	00000048              ipname
0013c670 l     F .text	0000000e              IPooledVBAllocator::~IPooledVBAllocator()
0013c670 l     F .text	0000000e              IPooledVBAllocator::~IPooledVBAllocator()
0013c7e0 l     F .text	00000012              IPooledVBAllocator::~IPooledVBAllocator()
000ddf70 l     F .text	0000000e              IRecipientFilter::~IRecipientFilter()
000ddf70 l     F .text	0000000e              IRecipientFilter::~IRecipientFilter()
000ddf80 l     F .text	00000012              IRecipientFilter::~IRecipientFilter()
000acaf0 l     F .text	0000000e              IRegistry::~IRegistry()
000acaf0 l     F .text	0000000e              IRegistry::~IRegistry()
000acb00 l     F .text	00000012              IRegistry::~IRegistry()
0018df80 l     F .text	0000000e              IReplayServer::~IReplayServer()
0018df80 l     F .text	0000000e              IReplayServer::~IReplayServer()
0018e020 l     F .text	00000012              IReplayServer::~IReplayServer()
0020b9b0 l     F .text	00000176              IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00099360 l     F .text	000000a6              IsBoxIntersectingBoxExtents(Vector const&, Vector const&, Vector const&, Vector const&)
000992e0 l     F .text	00000077              IsBoxIntersectingBox(Vector const&, Vector const&, Vector const&, Vector const&)
000997d0 l     F .text	000000c5              IsBoxIntersectingRay(float __vector(4) const&, float __vector(4) const&, float __vector(4) const&, float __vector(4) const&, float __vector(4) const&, float __vector(4) const&)
000998a0 l     F .text	000000fb              IsBoxIntersectingRay(float __vector(4) const&, float __vector(4) const&, Ray_t const&, float)
000997d0 l     F .text	000000c5              IsBoxIntersectingRay(float __vector const&, float __vector const&, float __vector const&, float __vector const&, float __vector const&, float __vector const&)
000998a0 l     F .text	000000fb              IsBoxIntersectingRay(float __vector const&, float __vector const&, Ray_t const&, float)
000e32c0 l     F .text	00000104              IsBoxIntersectingRayNoLowest(float __vector(4), float __vector(4), float __vector(4) const&, float __vector(4) const&, float __vector(4) const&, float __vector(4) const&)
000e32c0 l     F .text	00000104              IsBoxIntersectingRayNoLowest(float __vector, float __vector, float __vector const&, float __vector const&, float __vector const&, float __vector const&)
00099650 l     F .text	00000172              IsBoxIntersectingRay(Vector const&, Vector const&, Ray_t const&, float)
00099410 l     F .text	0000012a              IsBoxIntersectingRay(Vector const&, Vector const&, Vector const&, Vector const&, float)
00099540 l     F .text	00000105              IsBoxIntersectingRay(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, float)
00098bf0 l     F .text	00000095              IsBoxIntersectingSphereExtents(Vector const&, Vector const&, Vector const&, float)
00098b00 l     F .text	000000e8              IsBoxIntersectingSphere(Vector const&, Vector const&, Vector const&, float)
0009d2c0 l     F .text	00000917              IsBoxIntersectingTriangle(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, cplane_t const&, float)
00098c90 l     F .text	000000a5              IsCircleIntersectingRectangle(Vector2D const&, Vector2D const&, Vector2D const&, float)
001c8990 l     F .text	0000004f              IsComment(char*)
000a5ae0 l     F .text	00000053              IsCorner(CVertIndex const&, int)
002065a0 l     F .text	0000001e              IsDenormal(float const&)
001c8a00 l     F .text	00000016              IsEndOfText(char*)
001caed0 l     F .text	0000000e              IServerEngineTools::~IServerEngineTools()
001caed0 l     F .text	0000000e              IServerEngineTools::~IServerEngineTools()
001caf10 l     F .text	00000012              IServerEngineTools::~IServerEngineTools()
000d9160 l     F .text	0000000e              IServer::~IServer()
000d9160 l     F .text	0000000e              IServer::~IServer()
000d9300 l     F .text	00000012              IServer::~IServer()
000d2d20 l     F .text	0000000e              IServerMessageHandler::~IServerMessageHandler()
000d2d20 l     F .text	0000000e              IServerMessageHandler::~IServerMessageHandler()
000d2dc0 l     F .text	00000012              IServerMessageHandler::~IServerMessageHandler()
001c3130 l     F .text	0000000c              IsInErrorExit()
00129a30 l     F .text	00000246              IsLowViolence_Registry()
00129a20 l     F .text	00000007              IsLowViolence_Secure()
0009ca20 l     F .text	00000055              IsOBBIntersectingOBB(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float)
001965c0 l     F .text	0000000e              ISpatialPartitionInternal::~ISpatialPartitionInternal()
001965c0 l     F .text	0000000e              ISpatialPartitionInternal::~ISpatialPartitionInternal()
001965d0 l     F .text	00000012              ISpatialPartitionInternal::~ISpatialPartitionInternal()
00196530 l     F .text	0000000e              ISpatialPartition::~ISpatialPartition()
00196530 l     F .text	0000000e              ISpatialPartition::~ISpatialPartition()
001965f0 l     F .text	00000012              ISpatialPartition::~ISpatialPartition()
000991d0 l     F .text	00000046              IsPointInBox(Vector const&, Vector const&, Vector const&)
00099220 l     F .text	000000b9              IsPointInCone(Vector const&, Vector const&, Vector const&, float, float)
0009ca80 l     F .text	0000083f              IsRayIntersectingOBB(Ray_t const&, Vector const&, QAngle const&, Vector const&, Vector const&)
00098d40 l     F .text	0000011b              IsRayIntersectingSphere(Vector const&, Vector const&, Vector const&, float, float)
001c45c0 l     F .text	000000a5              IsSourceModLoaded()
00253fc0 l     O .rodata	00000010              IsSourceModLoaded()::s_pFileNames
00099050 l     F .text	00000172              IsSphereIntersectingCone(Vector const&, float, Vector const&, Vector const&, float, float)
00098ab0 l     F .text	0000004f              IsSphereIntersectingSphere(Vector const&, float, Vector const&, float)
001c89e0 l     F .text	00000016              IsStartOfText(char*)
001c8c60 l     F .text	00000059              IsToken(char const*, char const*)
000dee80 l     F .text	000000e8              IsValidFileExtension(char const*)
000a5b40 l     F .text	0000019a              IsVertAllowed(CDispUtilsHelper*, CVertIndex const&, int)
000bb3f0 l     F .text	00000017              IsZipHandleU(HZIP__*)
000c04f0 l     F .text	00000017              IsZipHandleZ(HZIP__*)
000f5310 l     F .text	0000044b              IterateLightmapSamples(CDispInfo*, ProcessLightmapSampleData_t const&)
0020b6b0 l     F .text	00000176              ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00146bb0 l     F .text	00000010              IVModelInfo::AddDynamicModel(char const*, int)
00146b80 l     F .text	00000010              IVModelInfo::CleanupDynamicModels(bool)
00146b20 l     F .text	0000000e              IVModelInfoClient::~IVModelInfoClient()
00146b20 l     F .text	0000000e              IVModelInfoClient::~IVModelInfoClient()
00146b30 l     F .text	00000012              IVModelInfoClient::~IVModelInfoClient()
00146be0 l     F .text	00000016              IVModelInfo::FindOrLoadModel(char const*)
00146bd0 l     F .text	00000010              IVModelInfo::InitDynamicModels()
00146a90 l     F .text	0000000e              IVModelInfo::~IVModelInfo()
00146a90 l     F .text	0000000e              IVModelInfo::~IVModelInfo()
00146b50 l     F .text	00000012              IVModelInfo::~IVModelInfo()
00146ba0 l     F .text	00000010              IVModelInfo::ReferenceModel(int)
00146bc0 l     F .text	00000010              IVModelInfo::ShutdownDynamicModels()
00146b90 l     F .text	00000010              IVModelInfo::UnreferenceModel(int)
001ceeb0 l     F .text	0000000e              IVoiceServer::~IVoiceServer()
001ceeb0 l     F .text	0000000e              IVoiceServer::~IVoiceServer()
001cf050 l     F .text	00000012              IVoiceServer::~IVoiceServer()
002c2464 l    d  .jcr	00000000              .jcr
002c2464 l     O .jcr	00000000              __JCR_END__
002c2464 l     O .jcr	00000000              __JCR_LIST__
00137470 l     F .text	00000019              Key_BindingForKey(ButtonCode_t)
00137530 l     F .text	0000003a              Key_CheckDoneTrapping(ButtonCode_t&)
001372a0 l     F .text	0000002e              Key_CountBindings()
00137570 l     F .text	00000005              Key_Event(InputEvent_t const&)
00136ed0 l     F .text	00000093              key_findbinding(CCommand const&)
0031c3a0 l     O .bss	00000024              key_findbinding_command
00137490 l     F .text	00000020              Key_Init()
00136e60 l     F .text	00000062              key_listboundkeys(CCommand const&)
0031c360 l     O .bss	00000024              key_listboundkeys_command
00137340 l     F .text	000000bf              Key_NameForBinding(char const*)
00137400 l     F .text	00000061              Key_NameForBindingExact(char const*)
00136f70 l     F .text	00000091              Key_SetBinding(ButtonCode_t, char const*)
001374b0 l     F .text	00000043              Key_Shutdown()
00137500 l     F .text	00000026              Key_StartTrapMode()
001e5920 l     F .text	0000002b              KeyValues::AddSubKey(KeyValues*)
001e5900 l     F .text	00000020              KeyValues::AddSubkeyUsingKnownLastChild(KeyValues*, KeyValues*)
001e5ca0 l     F .text	0000004c              KeyValues::AppendIncludedKeys(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
001e5400 l     F .text	0000000e              KeyValues::ChainKeyValue(KeyValues*)
001e8530 l     F .text	0000003b              KeyValues::Clear()
001e5b40 l     F .text	00000151              KeyValues::CopyKeyValue(KeyValues const&, unsigned int, char*)
001e66d0 l     F .text	000001b3              KeyValues::CopyKeyValuesFromRecursive(KeyValues const&)
001e6670 l     F .text	00000058              KeyValues::CopySubkeys(KeyValues*) const
001e6920 l     F .text	00000036              KeyValues::CreateKey(char const*)
001e6890 l     F .text	00000084              KeyValues::CreateKeyUsingKnownLastChild(char const*, KeyValues*)
001e6960 l     F .text	00000093              KeyValues::CreateNewKey()
001e7ca0 l     F .text	0000002e              KeyValues::deleteThis()
001e9200 l     F .text	000000fa              KeyValues::Dump(IKeyValuesDumpContext*, int)
001e6a00 l     F .text	000001e0              KeyValues::FindKey(char const*, bool)
001e58d0 l     F .text	00000025              KeyValues::FindKey(int) const
001e59b0 l     F .text	0000001b              KeyValues::FindLastSubKey()
001e7b00 l     F .text	00000086              KeyValues::GetBool(char const*, bool, bool*)
001e7130 l     F .text	00000129              KeyValues::GetColor(char const*)
001e6be0 l     F .text	0000002e              KeyValues::GetDataType(char const*)
001e59e0 l     F .text	00000022              KeyValues::GetFirstTrueSubKey()
001e5a30 l     F .text	00000022              KeyValues::GetFirstValue()
001e75a0 l     F .text	000000db              KeyValues::GetFloat(char const*, float)
001e77a0 l     F .text	000000ae              KeyValues::GetInt(char const*, int)
001e5410 l     F .text	00000013              KeyValues::GetName() const
001e5a10 l     F .text	0000001f              KeyValues::GetNextTrueSubKey()
001e5a60 l     F .text	0000001f              KeyValues::GetNextValue()
001e7680 l     F .text	0000003b              KeyValues::GetPtr(char const*, void*)
001e7420 l     F .text	0000017d              KeyValues::GetString(char const*, char const*)
001e4f60 l     F .text	0000001c              KeyValues::GetStringForSymbolClassic(int)
001e4e80 l     F .text	00000011              KeyValues::GetStringForSymbolGrowable(int)
001e4f80 l     F .text	0000002c              KeyValues::GetSymbolForStringClassic(char const*, bool)
001eaa10 l     F .text	00000398              KeyValues::GetSymbolForStringGrowable(char const*, bool)
001e76c0 l     F .text	000000d8              KeyValues::GetUint64(char const*, unsigned long long)
001e7260 l     F .text	000001bd              KeyValues::GetWString(char const*, wchar_t const*)
001e5380 l     F .text	00000048              KeyValues::Init()
001e5720 l     F .text	00000065              KeyValues::InternalWrite(IBaseFileSystem*, void*, CUtlBuffer*, void const*, int)
001e6c10 l     F .text	0000003d              KeyValues::IsEmpty(char const*)
001e7c90 l     F .text	00000009              KeyValues::~KeyValues()
001e7c90 l     F .text	00000009              KeyValues::~KeyValues()
001e53d0 l     F .text	0000002e              KeyValues::KeyValues(char const*)
001e53d0 l     F .text	0000002e              KeyValues::KeyValues(char const*)
001e7080 l     F .text	00000056              KeyValues::KeyValues(char const*, char const*, char const*)
001e7080 l     F .text	00000056              KeyValues::KeyValues(char const*, char const*, char const*)
001e7000 l     F .text	00000078              KeyValues::KeyValues(char const*, char const*, char const*, char const*, char const*)
001e7000 l     F .text	00000078              KeyValues::KeyValues(char const*, char const*, char const*, char const*, char const*)
001e6de0 l     F .text	00000056              KeyValues::KeyValues(char const*, char const*, int)
001e6de0 l     F .text	00000056              KeyValues::KeyValues(char const*, char const*, int)
001e6d60 l     F .text	00000078              KeyValues::KeyValues(char const*, char const*, int, char const*, int)
001e6d60 l     F .text	00000078              KeyValues::KeyValues(char const*, char const*, int, char const*, int)
001e6ee0 l     F .text	00000056              KeyValues::KeyValues(char const*, char const*, wchar_t const*)
001e6ee0 l     F .text	00000056              KeyValues::KeyValues(char const*, char const*, wchar_t const*)
001e9ab0 l     F .text	0000021f              KeyValues::LoadFromBuffer(char const*, char const*, IBaseFileSystem*, char const*)
001e94b0 l     F .text	000005fc              KeyValues::LoadFromBuffer(char const*, CUtlBuffer&, IBaseFileSystem*, char const*)
001e9cd0 l     F .text	00000274              KeyValues::LoadFromFile(IBaseFileSystem*, char const*, char const*, bool)
001e6620 l     F .text	0000004e              KeyValues::MakeCopy(bool) const
001e63b0 l     F .text	0000017b              KeyValues::MakeCopy() const
001e65e0 l     F .text	0000003b              KeyValues::MergeBaseKeys(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
001e6390 l     F .text	0000001c              KeyValues::operator delete(void*)
001e8da0 l     F .text	00000021              KeyValues::operator delete(void*, int, char const*, int)
001e7c50 l     F .text	00000031              KeyValues::operator=(KeyValues const&)
001e6340 l     F .text	0000001c              KeyValues::operator new(unsigned int)
001e6360 l     F .text	00000021              KeyValues::operator new(unsigned int, int, char const*, int)
001e9300 l     F .text	000001a5              KeyValues::ParseIncludedKeys(char const*, char const*, IBaseFileSystem*, char const*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
001e90f0 l     F .text	0000010f              KeyValues::ProcessResolutionKeys(char const*)
001e8570 l     F .text	0000082e              KeyValues::ReadAsBinary(CUtlBuffer&, int)
001e5430 l     F .text	000002c5              KeyValues::ReadToken(CUtlBuffer&, bool&, bool&)
001e7cd0 l     F .text	00000852              KeyValues::RecursiveLoadFromBuffer(char const*, CUtlBuffer&)
001e6530 l     F .text	000000a6              KeyValues::RecursiveMergeKeyValues(KeyValues*)
001ea9c0 l     F .text	00000041              KeyValues::RecursiveSaveToFile(CUtlBuffer&, int, bool, bool)
001e9f50 l     F .text	00000318              KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)
001e7b90 l     F .text	000000b4              KeyValues::RemoveEverything()
001e5950 l     F .text	0000005e              KeyValues::RemoveSubKey(KeyValues*)
001ea270 l     F .text	00000615              KeyValues::SaveKeyToFile(KeyValues*, IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)
0037c620 l     O .bss	00001000              KeyValues::SaveKeyToFile(KeyValues*, IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)::buf
001ea890 l     F .text	0000012a              KeyValues::SaveToFile(IBaseFileSystem*, char const*, char const*, bool, bool, bool)
001e70e0 l     F .text	00000049              KeyValues::SetColor(char const*, Color)
001e6c80 l     F .text	00000030              KeyValues::SetFloat(char const*, float)
001e6d30 l     F .text	00000030              KeyValues::SetInt(char const*, int)
001e5b10 l     F .text	00000021              KeyValues::SetName(char const*)
001e59d0 l     F .text	0000000e              KeyValues::SetNextKey(KeyValues*)
001e6c50 l     F .text	00000030              KeyValues::SetPtr(char const*, void*)
001e6f40 l     F .text	000000bc              KeyValues::SetString(char const*, char const*)
001e5a80 l     F .text	00000084              KeyValues::SetStringValue(char const*)
001e6cb0 l     F .text	0000007f              KeyValues::SetUint64(char const*, unsigned long long)
001eadb0 l     F .text	000001d6              KeyValues::SetUseGrowableStringTable(bool)
001e6e40 l     F .text	0000009c              KeyValues::SetWString(char const*, wchar_t const*)
002c7a50 l     O .data	00000004              KeyValues::s_pfGetStringForSymbol
002c7a60 l     O .data	00000004              KeyValues::s_pfGetSymbolForString
0037b610 l     O .bss	00000004              KeyValues::s_pGrowableStringTable
001e8dd0 l     F .text	00000311              KeyValues::UnpackIntoStructure(KeyValuesUnpackStructure const*, void*, unsigned int)
001e5710 l     F .text	0000000e              KeyValues::UsesConditionals(bool)
001e5700 l     F .text	0000000e              KeyValues::UsesEscapeSequences(bool)
001e5dc0 l     F .text	0000057d              KeyValues::WriteAsBinary(CUtlBuffer&)
001e5790 l     F .text	000000e0              KeyValues::WriteConvertedString(IBaseFileSystem*, void*, CUtlBuffer*, char const*)
001e5870 l     F .text	00000054              KeyValues::WriteIndents(IBaseFileSystem*, void*, CUtlBuffer*, int)
001372d0 l     F .text	00000067              Key_WriteBindings(CUtlBuffer&)
0012c320 l     F .text	000001ad              kickall(CCommand const&)
0031a920 l     O .bss	00000024              kickall_command
0012c4d0 l     F .text	000001e5              kick(CCommand const&)
0031a8e0 l     O .bss	00000024              kick_command
0012cd50 l     F .text	000003fe              kickid(CCommand const&)
0031a8a0 l     O .bss	00000024              kickid_command
0012fac0 l     F .text	00000035              killserver(CCommand const&)
0031a9a0 l     O .bss	00000024              killserver_command
0020a8d0 l     F .text	000003a6              Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0020ac80 l     F .text	00000087              Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
002d3650 l     O .bss	00000004              lasterrorU
002d3654 l     O .bss	00000004              lasterrorZ
00377d10 l     O .bss	00000004              LastSpikeFrame
00377d08 l     O .bss	00000008              LastSpikeTime
000a9df0 l     F .text	00000005              LaunchVConfig()
0025a960 l     O .rodata	0000003e              lbase.3452
0025a060 l     O .rodata	00000800              lenfix.3535
0025cb80 l     O .rodata	00000100              _length_code
0025a9e0 l     O .rodata	0000003e              lext.3453
0022c7cb l     F .text	000000ff              linear_search_fdes
002044e0 l     F .text	00000046              LinearToGamma(float)
00203f80 l     F .text	0000003c              LinearToGammaFullRange(float)
0037ee20 l     O .bss	00001000              lineartolightmap
00383f20 l     O .bss	00001000              lineartoscreen
00204910 l     F .text	0000003b              LinearToScreenGamma(float)
00385b20 l     O .bss	00001000              lineartotexture
002048d0 l     F .text	0000003b              LinearToTexture(float)
0037fe20 l     O .bss	00004000              lineartovertex
0018eb30 l     F .text	00000050              Linefile_Draw()
0018eb80 l     F .text	00000178              Linefile_Read_f()
0030a868 l     O .bss	0000000c              listener_origin
001a3830 l     F .text	00000103              listid(CCommand const&)
00327740 l     O .bss	00000024              listid_command
001a36f0 l     F .text	00000133              listip(CCommand const&)
00327640 l     O .bss	00000024              listip_command
0012bf50 l     F .text	00000013              listmodels(CCommand const&)
0031a9e0 l     O .bss	00000024              listmodels_command
000bd780 l     F .text	00000162              lm_init(TState&, int, unsigned short*)
0030f7f0 l     O .bss	00000004              loadbuf
0030f7f4 l     O .bss	00000004              loadcache
001c38e0 l     F .text	000004a3              LoadEntityDLLs(char const*, bool)
000aaf30 l     F .text	00000132              LoadGameInfoFile(char const*, KeyValues*&, KeyValues*&, KeyValues*&)
0030f7e0 l     O .bss	00000004              loadsize
00107380 l     F .text	00000313              LocalTransfer_InitFastCopy(SendTable const*, CStandardSendProxies const*, RecvTable*, CStandardRecvProxies const*, int&, int&)
001076a0 l     F .text	00000eeb              LocalTransfer_TransferEntity(CBaseEdict const*, SendTable const*, void const*, RecvTable*, void*, bool, bool, int)
000aa1f0 l     F .text	000002b6              LocateGameInfoFile(CFSSteamSetupInfo const&, char*, int)
001acc30 l     F .text	000001c4              logaddress_add(CCommand const&)
0032c600 l     O .bss	00000024              logaddress_add_command
001abca0 l     F .text	00000010              logaddress_delall(CCommand const&)
0032c640 l     O .bss	00000024              logaddress_delall_command
001ab9c0 l     F .text	000001c4              logaddress_del(CCommand const&)
0032c680 l     O .bss	00000024              logaddress_del_command
001abc30 l     F .text	00000010              logaddress_list(CCommand const&)
0032c6c0 l     O .bss	00000024              logaddress_list_command
001ac810 l     F .text	00000244              log(CCommand const&)
0032c5c0 l     O .bss	00000024              log_command
000dba10 l     F .text	00000059              LogKeyPress(ButtonCode_t)
00224270 l     F .text	000002bd              longest_match
000bd390 l     F .text	00000250              longest_match(TState&, unsigned int)
001c4690 l     F .text	0000019f              LongTickWatcherThread(void*)
00323120 l     O .bss	00000030              loopback_t::s_Allocator
0022d710 l     F .text	00000030              lstat
0022d710 l     F .text	00000030              __lstat
000b8b20 l     F .text	0000003c              lufclose(LUFILE*)
000b8b60 l     F .text	00000013              luferror(LUFILE*)
000b89c0 l     F .text	0000015b              lufopen(void*, unsigned int, unsigned int, unsigned int*)
000b8cb0 l     F .text	00000080              lufread(void*, unsigned int, unsigned int, LUFILE*)
000b8be0 l     F .text	000000ca              lufseek(LUFILE*, long, int)
000b8b80 l     F .text	00000054              luftell(LUFILE*)
0031ee08 l     O .bss	00000004              lump_t_DataDescInit::g_DataMapHolder
00148610 l     F .text	00000007              lump_t::GetBaseMap()
002c72f0 l     O .data	00000018              lump_t::m_DataMap
00201d70 l     F .text	0000011b              LzmaDec_Allocate
00201cb0 l     F .text	000000b7              LzmaDec_AllocateProbs
001ffb10 l     F .text	00001a54              LzmaDec_DecodeReal2(CLzmaDec*, unsigned int, unsigned char const*)
00201a90 l     F .text	000000de              LzmaDec_DecodeToBuf
00201600 l     F .text	00000483              LzmaDec_DecodeToDic
00201ba0 l     F .text	00000044              LzmaDec_Free
00201b70 l     F .text	00000027              LzmaDec_FreeProbs
002015c0 l     F .text	00000039              LzmaDec_Init
00201570 l     F .text	00000047              LzmaDec_InitDicAndState(CLzmaDec*, int, int)
00201e90 l     F .text	0000013a              LzmaDecode
001ff2c0 l     F .text	00000784              LzmaDec_TryDummy(CLzmaDec const*, unsigned char const*, unsigned int)
001ffa50 l     F .text	000000ba              LzmaDec_WriteRem(CLzmaDec*, unsigned int) [clone .part.0]
00201bf0 l     F .text	000000b2              LzmaProps_Decode
0031b6a0 l     O .bss	00000024              map
001558c0 l     F .text	00000062              Map_AreAnyLeavesVisible(worldbrushdata_t const&, int*, int)
0031b6e0 l     O .bss	00000024              map_background
00149230 l     F .text	0000007a              Map_CheckFeatureFlags()
001492b0 l     F .text	000000a6              Map_CheckForHDR(model_t*, char const*)
0031b720 l     O .bss	00000024              map_commentary
00132410 l     F .text	0000009d              MapList_CheckPrintMap(char const*, char const*, int, bool, bool) [clone .constprop.21]
00132ca0 l     F .text	00000197              MapList_CountMaps(char const*, bool, int&)
00132e40 l     F .text	000002ba              MapList_ListMaps(char const*, bool, bool, int, int, char (*) [64])
0030f620 l     O .bss	00000048              map_noareas
003173c0 l     O .bss	00000024              MapPropOffsetsToIndices(CBaseEdict const*, CSendTablePrecalc*, unsigned short const*, unsigned short, unsigned short*)::testDict
0013dfd0 l     F .text	0000000a              MapReslistGenerator()
0013f160 l     F .text	00000014              MapReslistGenerator_BuildMapList()
001403c0 l     F .text	000000a6              MapReslistGenerator_Init()
0013e830 l     F .text	00000014              MapReslistGenerator_Shutdown()
0013df40 l     F .text	0000008c              MapReslistGenerator_Usage()
0031b660 l     O .bss	00000024              maps
001559a0 l     F .text	00000071              Map_VisClear()
00155930 l     F .text	0000000a              Map_VisCurrent()
00155940 l     F .text	0000003f              Map_VisCurrentCluster()
003227e0 l     O .bss	00000004              Map_VisCurrentCluster()::visclusterwarningcount
00155990 l     F .text	0000000c              Map_VisForceFullSky()
00155a20 l     F .text	00000ade              Map_VisMark(bool, model_t*)
003226ec l     O .bss	0000000c              Map_VisMark(bool, model_t*)::tm_fmt
00156500 l     F .text	000000f4              Map_VisSetup(model_t*, int, Vector const*, bool, unsigned int&)
00155980 l     F .text	0000000c              Map_VisSkyVisible()
0038b4bc l     O .bss	00000004              marker.7234
00147320 l     F .text	0000002d              MarkSmallNode(mnode_t*)
0014db20 l     F .text	000000dd              MarkWaterSurfaces_r(mnode_t*)
00180220 l     F .text	00000012              MasterFileHash_t::Less(MasterFileHash_t const&, MasterFileHash_t const&)
0031dc40 l     O .bss	00000048              mat_bumpbasis
0010cc90 l     F .text	00000012              MatchingProp_t::LessFunc(MatchingProp_t const&, MatchingProp_t const&)
00323920 l     O .bss	00000048              matchmakingport
0010c750 l     F .text	000001b7              MatchRecvPropsToSendProps_R(CUtlRBTree<MatchingProp_t, unsigned short, bool (*)(MatchingProp_t const&, MatchingProp_t const&), CUtlMemory<UtlRBTreeNode_t<MatchingProp_t, unsigned short>, unsigned short> >&, char const*, SendTable*, RecvTable*, bool, bool*)
00145040 l     F .text	0000001c              mat_configcurrent(CCommand const&)
0031ec20 l     O .bss	00000024              mat_configcurrent_command
0031e060 l     O .bss	00000048              mat_debugalttab
0031d7c0 l     O .bss	00000048              mat_depthbias_normal
001445c0 l     F .text	00000084              mat_enable_vrmode(CCommand const&)
0031ec60 l     O .bss	00000024              mat_enable_vrmode_command
0031dbe0 l     O .bss	00000048              mat_envmapsize
0031db80 l     O .bss	00000048              mat_envmaptgasize
00144650 l     F .text	0000000c              MaterialConfigLightingChanged()
0038b1d0 l     O .bss	00000004              materials
0031d6e0 l     O .bss	00000004              materialSortInfoArray
00145480 l     F .text	00000023              MaterialSystem_DestroySortinfo()
0031ef40 l     O .bss	00000048              mat_excludetextures
0031dac0 l     O .bss	00000048              mat_fastspecular
00317d60 l     O .bss	00000048              mat_forcedynamic
0031da60 l     O .bss	00000048              mat_fullbright
0031d700 l     O .bss	00000048              mat_hdr_level
001444d0 l     F .text	00000005              mat_hdr_level_Callback(IConVar*, char const*, float)
0020c870 l     F .text	0000000c              MathLib_3DNowEnabled()
0020c6f0 l     F .text	0000017c              MathLib_Init(float, float, float, int, bool, bool, bool, bool)
0020c880 l     F .text	0000000c              MathLib_MMXEnabled()
0020c8a0 l     F .text	0000000c              MathLib_SSE2Enabled()
0020c890 l     F .text	0000000c              MathLib_SSEEnabled()
001444f0 l     F .text	00000013              mat_info(CCommand const&)
0031ed20 l     O .bss	00000024              mat_info_command
0031db20 l     O .bss	00000048              mat_levelflush
0031efa0 l     O .bss	00000048              mat_loadtextures
0031dd00 l     O .bss	00000048              mat_luxels
0031e9a0 l     O .bss	00000048              mat_maxframelatency
0031ea40 l     O .bss	00000048              mat_monitorgamma
0031ebc0 l     O .bss	00000048              mat_monitorgamma_tv_enabled
0031eb60 l     O .bss	00000048              mat_monitorgamma_tv_exp
0031eb00 l     O .bss	00000048              mat_monitorgamma_tv_range_max
0031eaa0 l     O .bss	00000048              mat_monitorgamma_tv_range_min
0031d820 l     O .bss	00000048              mat_motion_blur_enabled
0031ddc0 l     O .bss	00000048              mat_norendering
0031dca0 l     O .bss	00000048              mat_normals
00375160 l     O .bss	00000048              mat_powersavingsmode
001c6e50 l     F .text	0000006e              mat_powersavingsmode_callback(IConVar*, char const*, float)
001444e0 l     F .text	00000005              mat_reset_rendertargets(CCommand const&)
0031ece0 l     O .bss	00000024              mat_reset_rendertargets_command
00205950 l     F .text	00000067              MatricesAreEqual(matrix3x4_t const&, matrix3x4_t const&, float)
00205440 l     F .text	0000017e              MatrixAngles(matrix3x4_t const&, float*)
00208a70 l     F .text	00000172              MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
002055c0 l     F .text	0000005f              MatrixAngles(matrix3x4_t const&, RadianEuler&, Vector&)
002132c0 l     F .text	000000f8              MatrixBuildOrtho(VMatrix&, double, double, double, double, double, double)
00213500 l     F .text	000001f2              MatrixBuildPerspectiveOffCenterX(VMatrix&, double, double, double, double, double, double, double, double)
00211e90 l     F .text	00000350              MatrixBuildPerspective(VMatrix&, float, float, float, float)
00213410 l     F .text	000000e7              MatrixBuildPerspectiveX(VMatrix&, double, double, double, double)
002133c0 l     F .text	0000004c              MatrixBuildPerspectiveZRange(VMatrix&, double, double)
00211d60 l     F .text	0000008d              MatrixBuildRotateZ(VMatrix&, float)
00207030 l     F .text	00000171              MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
00211a40 l     F .text	00000038              MatrixBuildRotationAboutAxis(VMatrix&, Vector const&, float)
00211a80 l     F .text	000002d5              MatrixBuildRotation(VMatrix&, Vector const&, Vector const&)
00211df0 l     F .text	00000046              MatrixBuildScale(VMatrix&, float, float, float)
00211e40 l     F .text	0000004a              MatrixBuildScale(VMatrix&, Vector const&)
00211990 l     F .text	00000047              MatrixBuildTranslation(VMatrix&, float, float, float)
002119e0 l     F .text	00000054              MatrixBuildTranslation(VMatrix&, Vector const&)
002058f0 l     F .text	00000051              MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
00210bb0 l     F .text	0000006d              MatrixCopy(VMatrix const&, VMatrix&)
00210800 l     F .text	00000022              MatrixFromAngles(QAngle const&, VMatrix&)
00205b20 l     F .text	0000002a              MatrixGetColumn(matrix3x4_t const&, int, Vector&)
00205880 l     F .text	0000006e              MatrixInitialize(matrix3x4_t&, Vector const&, Vector const&, Vector const&, Vector const&)
0020fd10 l     F .text	00000283              MatrixInverseGeneral(VMatrix const&, VMatrix&)
00210ad0 l     F .text	000000d4              MatrixInverseTranspose(matrix3x4_t const&, matrix3x4_t&)
00210aa0 l     F .text	00000029              MatrixInverseTranspose(VMatrix const&, VMatrix&)
00211320 l     F .text	000000b0              MatrixInverseTR(VMatrix const&, VMatrix&)
002059c0 l     F .text	0000015d              MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
00210c20 l     F .text	00000405              MatrixMultiply(VMatrix const&, VMatrix const&, VMatrix&)
00209680 l     F .text	0000002e              MatrixQuaternion(matrix3x4_t const&, Quaternion&)
00205b90 l     F .text	00000085              MatrixScaleBy(float, matrix3x4_t&)
00205c20 l     F .text	00000024              MatrixScaleByZero(matrix3x4_t&)
00205b50 l     F .text	00000039              MatrixSetColumn(Vector const&, int, matrix3x4_t&)
002107b0 l     F .text	00000044              MatrixSetIdentity(VMatrix&)
00210860 l     F .text	0000017e              MatrixToAngles(VMatrix const&, QAngle&)
00211870 l     F .text	0000008a              MatrixTransformPlane(VMatrix const&, cplane_t const&, cplane_t&)
002071b0 l     F .text	0000002c              MatrixTranspose(matrix3x4_t&)
002071e0 l     F .text	0000004c              MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
002109e0 l     F .text	000000ba              MatrixTranspose(VMatrix const&, VMatrix&)
00205d00 l     F .text	00000074              MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
001448d0 l     F .text	00000037              mat_savechanges(CCommand const&)
0031eca0 l     O .bss	00000024              mat_savechanges_command
0031e940 l     O .bss	00000048              mat_shadowstate
0031d760 l     O .bss	00000048              mat_show_ab_hdr
0031c940 l     O .bss	00000048              mat_softwareskin
0031dd60 l     O .bss	00000048              mat_wireframe
001add60 l     F .text	00000057              maxplayers(CCommand const&)
00357580 l     O .bss	00000024              maxplayers_command
001dee80 l     F .text	00000026              MD5_Compare(MD5Value_t const&, MD5Value_t const&)
001dec60 l     F .text	0000017e              MD5Final(unsigned char*, MD5Context_t*)
000dc850 l     F .text	000000c9              MD5_Hash_Buffer(unsigned char*, unsigned char const*, int, bool, unsigned int*)
000dc680 l     F .text	000001cc              MD5_Hash_File(unsigned char*, char const*, bool, unsigned int*)
001deaa0 l     F .text	00000031              MD5Init(MD5Context_t*)
000dc3d0 l     F .text	000002a6              MD5_MapFile(MD5Value_t*, char const*)
001dede0 l     F .text	0000002f              MD5_Print(unsigned char*, int)
0037b2c0 l     O .bss	00000040              MD5_Print(unsigned char*, int)::szReturn
001def20 l     F .text	0000005f              MD5_ProcessSingleBuffer(void const*, int, MD5Value_t&)
001dee10 l     F .text	0000006c              MD5_PseudoRandom(unsigned int)
001de3b0 l     F .text	000006e3              MD5Transform(unsigned int*, unsigned int const*)
001deae0 l     F .text	0000017b              MD5Update(MD5Context_t*, unsigned char const*, unsigned int)
001deee0 l     F .text	00000034              MD5Value_t::IsZero() const
001deeb0 l     F .text	00000023              MD5Value_t::Zero()
0038b2a0 l     O .bss	00000004              mdlcache
0038b140 l     O .bss	00000004              mdllib
00126610 l     F .text	00000005              mem_compact(CCommand const&)
0031a140 l     O .bss	00000024              mem_compact_command
00126690 l     F .text	00000010              mem_dump(CCommand const&)
0031a100 l     O .bss	00000024              mem_dump_command
0031a200 l     O .bss	00000048              mem_dumpstats
001266a0 l     F .text	00000010              mem_eat(CCommand const&)
0031a180 l     O .bss	00000024              mem_eat_command
001454c0 l     F .text	0000009c              memfgets(unsigned char*, int, int*, char*, int)
0035d7a0 l     O .bss	00000048              mem_max_heapsize
0035d740 l     O .bss	00000048              mem_max_heapsize_dedicated
0035d800 l     O .bss	00000048              mem_min_heapsize
0012c200 l     F .text	00000115              memory(CCommand const&)
0031a960 l     O .bss	00000024              memory_command
0012c0e0 l     F .text	00000005              memory_diff(CCommand const&)
0031ad60 l     O .bss	00000024              memory_diff_command
001da2f0 l     F .text	000000bb              Memory_Init()
0012c0b0 l     F .text	00000005              memory_list(CCommand const&)
0031aca0 l     O .bss	00000024              memory_list_command
0012c0d0 l     F .text	00000005              memory_mark(CCommand const&)
0031ad20 l     O .bss	00000024              memory_mark_command
001da3b0 l     F .text	00000031              Memory_Shutdown()
0012c0c0 l     F .text	00000005              memory_status(CCommand const&)
0031ace0 l     O .bss	00000024              memory_status_command
00319ca0 l     O .bss	00000048              mem_periodicdumps
00126620 l     F .text	00000005              mem_test(CCommand const&)
0031a1c0 l     O .bss	00000024              mem_test_command
00319be0 l     O .bss	00000048              mem_test_each_frame
00319c40 l     O .bss	00000048              mem_test_every_n_seconds
0014f860 l     F .text	00000010              mem_vcollide(CCommand const&)
003203c0 l     O .bss	00000024              mem_vcollide_command
0022d740 l     F .text	00000048              mknod
0022d740 l     F .text	00000048              __mknod
0008bbd0 l     F .text	0000000a              MM_Checkpoint::GetName() const
0008bbc0 l     F .text	0000000a              MM_Checkpoint::GetType() const
0008bce0 l     F .text	0000000e              MM_Checkpoint::~MM_Checkpoint()
0008bce0 l     F .text	0000000e              MM_Checkpoint::~MM_Checkpoint()
0008c380 l     F .text	00000012              MM_Checkpoint::~MM_Checkpoint()
0008bbe0 l     F .text	0000001a              MM_Checkpoint::Process()
0007de10 l     F .text	0000007f              MM_Checkpoint::ReadFromBuffer(bf_read&)
0007cb00 l     F .text	00000034              MM_Checkpoint::ToString() const
0007e100 l     F .text	000000c9              MM_Checkpoint::WriteToBuffer(bf_write&)
0008bb10 l     F .text	0000000a              MM_ClientInfo::GetName() const
0008bb00 l     F .text	0000000a              MM_ClientInfo::GetType() const
0008bd00 l     F .text	0000000e              MM_ClientInfo::~MM_ClientInfo()
0008bd00 l     F .text	0000000e              MM_ClientInfo::~MM_ClientInfo()
0008c340 l     F .text	00000012              MM_ClientInfo::~MM_ClientInfo()
0008bb20 l     F .text	0000001a              MM_ClientInfo::Process()
0007de90 l     F .text	00000262              MM_ClientInfo::ReadFromBuffer(bf_read&)
0007cba0 l     F .text	00000042              MM_ClientInfo::ToString() const
0007e670 l     F .text	00000189              MM_ClientInfo::WriteToBuffer(bf_write&)
0008bad0 l     F .text	0000000a              MM_Heartbeat::GetName() const
0008bac0 l     F .text	0000000a              MM_Heartbeat::GetType() const
0008bd10 l     F .text	0000000e              MM_Heartbeat::~MM_Heartbeat()
0008bd10 l     F .text	0000000e              MM_Heartbeat::~MM_Heartbeat()
0008c320 l     F .text	00000012              MM_Heartbeat::~MM_Heartbeat()
0008bae0 l     F .text	0000001a              MM_Heartbeat::Process()
0007c940 l     F .text	0000000a              MM_Heartbeat::ReadFromBuffer(bf_read&)
0007cbf0 l     F .text	00000029              MM_Heartbeat::ToString() const
0007c890 l     F .text	000000a9              MM_Heartbeat::WriteToBuffer(bf_write&)
0008bc10 l     F .text	0000000a              MM_JoinResponse::GetName() const
0008bc00 l     F .text	0000000a              MM_JoinResponse::GetType() const
0008c770 l     F .text	00000065              MM_JoinResponse::~MM_JoinResponse()
0008c770 l     F .text	00000065              MM_JoinResponse::~MM_JoinResponse()
0008c7e0 l     F .text	00000065              MM_JoinResponse::~MM_JoinResponse()
0008bc20 l     F .text	0000001a              MM_JoinResponse::Process()
0008ac20 l     F .text	00000382              MM_JoinResponse::ReadFromBuffer(bf_read&)
0007caa0 l     F .text	00000054              MM_JoinResponse::ToString() const
0007ec20 l     F .text	000001a1              MM_JoinResponse::WriteToBuffer(bf_write&)
0008bc50 l     F .text	0000000a              MM_Migrate::GetName() const
0008bc40 l     F .text	0000000a              MM_Migrate::GetType() const
0008bcd0 l     F .text	0000000e              MM_Migrate::~MM_Migrate()
0008bcd0 l     F .text	0000000e              MM_Migrate::~MM_Migrate()
0008c3a0 l     F .text	00000012              MM_Migrate::~MM_Migrate()
0008bc60 l     F .text	0000001a              MM_Migrate::Process()
0007dd40 l     F .text	000000cf              MM_Migrate::ReadFromBuffer(bf_read&)
0007ca70 l     F .text	00000029              MM_Migrate::ToString() const
0007e550 l     F .text	0000011c              MM_Migrate::WriteToBuffer(bf_write&)
0008bb90 l     F .text	0000000a              MM_Mutelist::GetName() const
0008bb80 l     F .text	0000000a              MM_Mutelist::GetType() const
0008cff0 l     F .text	00000066              MM_Mutelist::~MM_Mutelist()
0008cff0 l     F .text	00000066              MM_Mutelist::~MM_Mutelist()
0008d060 l     F .text	0000006d              MM_Mutelist::~MM_Mutelist()
0008bba0 l     F .text	0000001a              MM_Mutelist::Process()
0008aa40 l     F .text	000001da              MM_Mutelist::ReadFromBuffer(bf_read&)
0007cb40 l     F .text	00000029              MM_Mutelist::ToString() const
0007e3c0 l     F .text	00000185              MM_Mutelist::WriteToBuffer(bf_write&)
0008bb50 l     F .text	0000000a              MM_RegisterResponse::GetName() const
0008bb40 l     F .text	0000000a              MM_RegisterResponse::GetType() const
0008bcf0 l     F .text	0000000e              MM_RegisterResponse::~MM_RegisterResponse()
0008bcf0 l     F .text	0000000e              MM_RegisterResponse::~MM_RegisterResponse()
0008c360 l     F .text	00000012              MM_RegisterResponse::~MM_RegisterResponse()
0008bb60 l     F .text	0000001a              MM_RegisterResponse::Process()
0007ca00 l     F .text	0000000a              MM_RegisterResponse::ReadFromBuffer(bf_read&)
0007cb70 l     F .text	00000029              MM_RegisterResponse::ToString() const
0007c950 l     F .text	000000a9              MM_RegisterResponse::WriteToBuffer(bf_write&)
0022a2bc l     F .text	00000188              __moddi3
00320220 l     O .bss	00000048              mod_dynamicloadpause
003201c0 l     O .bss	00000048              mod_dynamicloadspew
00320280 l     O .bss	00000048              mod_dynamicloadthrottle
0014ecb0 l     F .text	00000011              mod_dynamicmodeldebug(CCommand const&)
00320400 l     O .bss	00000024              mod_dynamicmodeldebug_command
00320340 l     O .bss	00000048              mod_dynamicunloadtextures
003202e0 l     O .bss	00000048              mod_dynamicunloadtime
002c72b4 l     O .data	00000004              modelinfo
00147300 l     F .text	00000012              Model_LessFunc(void* const&, void* const&)
002c72c0 l     O .data	00000004              modelloader
00315768 l     O .bss	0000000c              modelorg
002c7284 l     O .data	00000004              modelrender
0031ffe0 l     O .bss	00000048              mod_forcetouchdata
0014ca70 l     F .text	00000046              Mod_GameLumpSize(int)
0014ca20 l     F .text	00000046              Mod_GameLumpVersion(int)
0014fad0 l     F .text	0000010a              Mod_GetMaterialCount(model_t*)
0014d4c0 l     F .text	0000014e              Mod_GetModelMaterials(model_t*, int, IMaterial**)
0014e730 l     F .text	000002fb              Mod_LeafAmbientColorAtPos(Vector*, Vector const&, int)
0014bf20 l     F .text	00000579              Mod_LoadCubemapSamples()
00149810 l     F .text	0000013c              Mod_LoadEdges()
0014ab70 l     F .text	000006a6              Mod_LoadFaces()
0014f870 l     F .text	000001dd              Mod_LoadGameLumpDict()
0014cac0 l     F .text	000002a3              Mod_LoadGameLump(int, void*, int)
0014c4a0 l     F .text	00000143              Mod_LoadLeafMinDistToWater()
0014bba0 l     F .text	000001f5              Mod_LoadLeafs()
0014b5a0 l     F .text	00000273              Mod_LoadLeafs_Version_0(CMapLoadHelper&)
0014b820 l     F .text	00000380              Mod_LoadLeafs_Version_1(CMapLoadHelper&, CMapLoadHelper&, CMapLoadHelper&)
0014bda0 l     F .text	0000017b              Mod_LoadLeafWaterData()
00149360 l     F .text	000000c1              Mod_LoadLighting(CMapLoadHelper&)
0014a9b0 l     F .text	000000c4              Mod_LoadLump(model_t*, int, char*, int, void**, int*)
0014c5f0 l     F .text	00000294              Mod_LoadMarksurfaces()
0014b270 l     F .text	00000324              Mod_LoadNodes()
00149950 l     F .text	0000074d              Mod_LoadOcclusion()
0014ca00 l     F .text	0000001c              Mod_LoadPlanes()
0014a880 l     F .text	00000121              Mod_LoadPrimIndices()
0014a5b0 l     F .text	00000167              Mod_LoadPrimitives()
0014a720 l     F .text	00000157              Mod_LoadPrimVerts()
002d34c0 l     O .bss	00000048              mod_load_showstall
0014fe10 l     F .text	0000023e              Mod_LoadSubmodels(CUtlVector<mmodel_t, CUtlMemory<mmodel_t, int> >&)
0014aa80 l     F .text	00000089              Mod_LoadSurfaceLightingV1(msurfacelighting_t*, dface_t*, ColorRGBExp32*)
0014c890 l     F .text	0000016b              Mod_LoadSurfedges(medge_t*)
0014a0a0 l     F .text	0000001c              Mod_LoadTexdata()
0014a0c0 l     F .text	000002af              Mod_LoadTexinfo()
00149620 l     F .text	000001eb              Mod_LoadVertices()
0014a4a0 l     F .text	00000106              Mod_LoadVertNormalIndices()
0014a370 l     F .text	00000121              Mod_LoadVertNormals()
00149430 l     F .text	000001ec              Mod_LoadWorldlights(CMapLoadHelper&, bool)
0014dc00 l     F .text	0000019f              Mod_MarkWaterSurfaces(model_t*)
0014d290 l     F .text	00000225              Mod_RecomputeTranslucency(model_t*, int, int, void*, float)
0014da90 l     F .text	00000082              Mod_SetMaterialVarFlag(model_t*, unsigned int, bool)
0014b220 l     F .text	00000043              Mod_SetParent(mnode_t*, mnode_t*)
00320040 l     O .bss	00000048              mod_touchalldata
0014cd70 l     F .text	0000015a              Mod_TouchAllData(model_t*, int)
00178b40 l     F .text	00000038              moverlayfragment_t::~moverlayfragment_t()
00178b40 l     F .text	00000038              moverlayfragment_t::~moverlayfragment_t()
0031df40 l     O .bss	00000048              mp_decals
001bd8d0 l     F .text	0000003e              MsgAndLog(char const*, ...)
001cc920 l     F .text	0000001c              MsgData::~MsgData()
001cc920 l     F .text	0000001c              MsgData::~MsgData()
000b1ad0 l     F .text	00000051              mstudioanimdesc_t::pAnimBlock(int, int) const
000b1f40 l     F .text	00000021              mstudioanimdesc_t::pAnim(int*) const
000b1b30 l     F .text	00000405              mstudioanimdesc_t::pAnim(int*, float&) const
000b1ff0 l     F .text	0000006e              mstudioanimdesc_t::pHierarchy(int) const
000b1f70 l     F .text	00000076              mstudioanimdesc_t::pIKRule(int) const
0013ba80 l     F .text	00000023              mstudiomodel_t::CacheVertexData(void*)
0012c8d0 l     F .text	000001d5              multvar(CCommand const&)
0031aa60 l     O .bss	00000024              multvar_command
001e3f60 l     F .text	00000071              MurmurHash2LowerCase(char const*, unsigned int)
001e3eb0 l     F .text	000000a7              MurmurHash2(void const*, int, unsigned int)
001e3fe0 l     F .text	00000117              MurmurHash64(void const*, int, unsigned int)
0012c0f0 l     F .text	000000f5              namelockid(CCommand const&)
0031ada0 l     O .bss	00000024              namelockid_command
002592f8 l     O .rodata	00000004              nanmask
000a5120 l     F .text	0000001b              NeighborSpanFlip(int, NeighborSpan)
0016d150 l     F .text	000002be              NET_AddExtraSocket(int)
001671a0 l     F .text	00000111              NET_AddToLagged(netpacket_s**, netpacket_s*)
001672d0 l     F .text	000000b6              NET_AdjustLag()
003232f8 l     O .bss	00000008              NET_AdjustLag()::s_LastTime
001ecbb0 l     F .text	00000024              netadr_s::Clear()
001ec8c0 l     F .text	00000061              netadr_s::CompareAdr(netadr_s const&, bool) const
001ec930 l     F .text	00000036              netadr_s::CompareClassBAdr(netadr_s const&) const
001ec970 l     F .text	00000041              netadr_s::CompareClassCAdr(netadr_s const&) const
001ecc50 l     F .text	0000000d              netadr_s::GetIPHostByteOrder() const
001ecc40 l     F .text	0000000b              netadr_s::GetIPNetworkByteOrder() const
001ecc30 l     F .text	00000010              netadr_s::GetPort() const
001ecc20 l     F .text	0000000a              netadr_s::GetType() const
001ecb80 l     F .text	00000012              netadr_s::IsLocalhost() const
001ecba0 l     F .text	0000000e              netadr_s::IsLoopback() const
001ec9c0 l     F .text	00000061              netadr_s::IsReservedAdr() const
001ecd50 l     F .text	0000001f              netadr_s::IsValid() const
001c2570 l     F .text	00000040              netadr_s::netadr_s()
001c2570 l     F .text	00000040              netadr_s::netadr_s()
001ecf20 l     F .text	0000002c              netadr_s::operator<(netadr_s const&) const
001ecd00 l     F .text	0000004b              netadr_s::SetFromSockadr(sockaddr const*)
001ecf50 l     F .text	00000092              netadr_s::SetFromSocket(int)
001ecd90 l     F .text	00000187              netadr_s::SetFromString(char const*, bool)
001ecbe0 l     F .text	00000020              netadr_s::SetIP(unsigned char, unsigned char, unsigned char, unsigned char)
001ecc00 l     F .text	00000010              netadr_s::SetIP(unsigned int)
001ecd70 l     F .text	00000014              netadr_s::SetPort(unsigned short)
001ecc10 l     F .text	0000000d              netadr_s::SetType(netadrtype_t)
001ecc60 l     F .text	00000095              netadr_s::ToSockadr(sockaddr*) const
001eca30 l     F .text	00000149              netadr_s::ToString(bool) const
0037d6e0 l     O .bss	00000040              netadr_s::ToString(bool) const::s
00322de0 l     O .bss	00000048              net_blockmsg
00322a20 l     O .bss	00000048              net_blocksize
00168b10 l     F .text	0000010b              net_channels(CCommand const&)
003239e0 l     O .bss	00000024              net_channels_command
00322c00 l     O .bss	00000048              net_chokeloopback
00165ea0 l     F .text	00000032              NET_ClearLagData(int)
00165e50 l     F .text	0000004d              NET_ClearLaggedList(netpacket_s**)
00165e00 l     F .text	0000000f              NET_ClearLastError()
001682a0 l     F .text	0000013d              NET_ClearLoopbackBuffers()
00169770 l     F .text	00000052              NET_ClearQueuedPacketsForChannel(INetChannel*)
00167c80 l     F .text	000001a3              NET_CloseAllSockets()
001660e0 l     F .text	000000ac              NET_CloseSocket(int, int)
00322cc0 l     O .bss	00000048              net_compresspackets
00322b40 l     O .bss	00000048              net_compresspackets_minsize
003236a0 l     O .bss	00000048              net_compressvoice
001683f0 l     F .text	00000152              NET_Config()
001683e0 l     F .text	00000009              NET_ConfigLoopbackBuffers(bool)
00166c60 l     F .text	00000186              NET_ConnectSocket(int, netadr_s const&)
00167180 l     F .text	0000001c              NET_CountLaggedList(netpacket_s*)
00169970 l     F .text	00000174              NET_CreateNetChannel(int, netadr_s*, char const*, INetChannelHandler*, bool, int)
003238c8 l     O .bss	00000001              net_dedicated
00168c20 l     F .text	000000f0              NET_DiscardStaleSplitpackets(int)
00322fc0 l     O .bss	00000048              net_drawslider
003231b0 l     O .bss	00000004              net_error
00165cb0 l     F .text	00000009              NET_ErrorString(int)
00165fa0 l     F .text	00000140              NET_FindNetChannel(int, netadr_s&)
00169af0 l     F .text	0000019d              NET_FindOrCreateSplitPacketEntry(int, netadr_s*)
00167e30 l     F .text	000000a7              NET_FlushAllSockets()
001672c0 l     F .text	0000000b              NET_GetFakeLag()
00165e10 l     F .text	00000038              NET_GetLastError()
00168120 l     F .text	00000107              NET_GetLocalAddress()
00169c90 l     F .text	00000433              NET_GetLong(int, netpacket_s*)
00167610 l     F .text	000001c6              NET_GetLoopPacket(netpacket_s*)
0016aa40 l     F .text	00000313              NET_GetPacket(int, unsigned char*)
00323548 l     O .bss	0000000c              NET_GetPacket(int, unsigned char*)::tm_fmt
001680f0 l     F .text	0000002e              NET_GetUDPPort(int)
00165c90 l     F .text	0000000d              NET_HostToNetShort(unsigned short)
0016cd50 l     F .text	000003fd              NET_Init(bool)
00168240 l     F .text	0000000c              NET_IsDedicated()
00168230 l     F .text	0000000c              NET_IsMultiplayer()
00167390 l     F .text	0000027b              NET_LagPacket(bool, netpacket_s*)
00323408 l     O .bss	00000018              NET_LagPacket(bool, netpacket_s*)::losscount
00168590 l     F .text	0000021b              NET_ListenSocket(int, bool)
003230a8 l     O .bss	0000000c              net_local_adr
001677e0 l     F .text	00000144              NET_LogBadPacket(netpacket_s*)
00322d20 l     O .bss	00000048              net_maxcleartime
00322c60 l     O .bss	00000048              net_maxfilesize
00322f20 l     O .bss	00000048              net_maxpacketdrop
003230c0 l     O .bss	00000048              net_maxroutable
00323574 l     O .bss	00000001              net_multiplayer
00165ca0 l     F .text	0000000d              NET_NetToHostShort(unsigned short)
003231a8 l     O .bss	00000001              net_nodns
00323808 l     O .bss	00000001              net_nohltv
00323868 l     O .bss	00000001              net_noip
002c7619 l     O .data	00000001              net_notcp
00166190 l     F .text	0000097a              NET_OpenSocket(char const*, int&, int)
002c7618 l     O .data	00000001              NET_OpenSocket(char const*, int&, int)::bFirst
00167ee0 l     F .text	0000017a              NET_OpenSockets()
002496d0 l     O .rodata	00000010              NET_OpenSockets()::__FUNCTION__
002496a0 l     O .rodata	00000030              NET_OpenSockets()::s_ports
0016cca0 l     F .text	000000ae              NET_OutOfBandPrintf(int, netadr_s const&, char const*, ...)
00323560 l     O .bss	00000014              net_packets
001688a0 l     F .text	0000026d              NET_PrintChannelStatus(INetChannel*)
0016b260 l     F .text	00000289              NET_ProcessListen(int)
00168d10 l     F .text	0000049e              NET_ProcessPending()
0016ad60 l     F .text	000004f1              NET_ProcessSocket(int, IConnectionlessPacketHandler*)
003235a4 l     O .bss	0000000c              NET_ProcessSocket(int, IConnectionlessPacketHandler*)::tm_fmt
00323b00 l     O .bss	00000048              net_queued_packet_thread
0016b580 l     F .text	000000f9              NET_QueuePacketForSend(CNetChan*, bool, int, char const*, int, sockaddr const*, int, unsigned int)
00323aa0 l     O .bss	00000048              net_queue_trace
0016a0d0 l     F .text	000008f9              NET_ReceiveDatagram(int, netpacket_s*)
003234e8 l     O .bss	0000000c              NET_ReceiveDatagram(int, netpacket_s*)::tm_fmt
003234f4 l     O .bss	0000000c              NET_ReceiveDatagram(int, netpacket_s*)::tm_fmt
00166e70 l     F .text	0000007f              NET_ReceiveStream(int, char*, int, int)
0016a9d0 l     F .text	0000006a              NET_ReceiveValidDatagram(int, netpacket_s*)
00168060 l     F .text	00000083              NET_RemoveAllExtraSockets()
001697d0 l     F .text	00000193              NET_RemoveNetChannel(INetChannel*, bool)
0016b4f0 l     F .text	00000085              NET_RunFrame(double)
0016b680 l     F .text	000005e5              NET_SendLong(INetChannel*, int, int, char const*, int, sockaddr const*, int, int)
00323628 l     O .bss	0000000c              NET_SendLong(INetChannel*, int, int, char const*, int, sockaddr const*, int, int)::tm_fmt
00166ef0 l     F .text	00000288              NET_SendLoopPacket(int, int, unsigned char const*, netadr_s const&)
0016bc70 l     F .text	00001026              NET_SendPacket(INetChannel*, int, netadr_s const&, unsigned char const*, int, bf_write*, bool)
00323688 l     O .bss	0000000c              NET_SendPacket(INetChannel*, int, netadr_s const&, unsigned char const*, int, bf_write*, bool)::tm_fmt
00323694 l     O .bss	0000000c              NET_SendPacket(INetChannel*, int, netadr_s const&, unsigned char const*, int, bf_write*, bool)::tm_fmt
003236e8 l     O .bss	0000000c              NET_SendPacket(INetChannel*, int, netadr_s const&, unsigned char const*, int, bf_write*, bool)::tm_fmt
001696e0 l     F .text	0000008c              NET_SendQueuedPackets()
00167c30 l     F .text	00000050              NET_SendQueuedPacket(SendQueueItem_t*)
00166df0 l     F .text	00000074              NET_SendStream(int, char const*, int, int)
00167950 l     F .text	000002e0              NET_SendTo(bool, int, char const*, int, sockaddr const*, int, int)
003235b0 l     O .bss	0000000c              NET_SendTo(bool, int, char const*, int, sockaddr const*, int, int)::tm_fmt
00167930 l     F .text	0000001c              NET_SendToImpl(int, char const*, int, sockaddr const*, int, int)
0008b070 l     F .text	0000000a              NET_SetConVar::GetGroup() const
0008b040 l     F .text	0000000a              NET_SetConVar::GetName() const
0008b030 l     F .text	0000000a              NET_SetConVar::GetType() const
0008c570 l     F .text	00000045              NET_SetConVar::~NET_SetConVar()
0008c570 l     F .text	00000045              NET_SetConVar::~NET_SetConVar()
0008c5c0 l     F .text	0000004c              NET_SetConVar::~NET_SetConVar()
000ee800 l     F .text	000000d6              NET_SetConVar::NET_SetConVar(char const*, char const*)
000ee800 l     F .text	000000d6              NET_SetConVar::NET_SetConVar(char const*, char const*)
0008b050 l     F .text	0000001a              NET_SetConVar::Process()
0008a2a0 l     F .text	00000349              NET_SetConVar::ReadFromBuffer(bf_read&)
002c85a8 l     O .bss	0000000c              NET_SetConVar::ReadFromBuffer(bf_read&)::tm_fmt
0007d960 l     F .text	0000005e              NET_SetConVar::ToString() const
0007e2b0 l     F .text	00000105              NET_SetConVar::WriteToBuffer(bf_write&)
00168560 l     F .text	0000002e              NET_SetDedicated()
001687b0 l     F .text	00000081              NET_SetMutiplayer(bool)
00168250 l     F .text	0000004f              NET_SetTime(double)
003238d0 l     O .bss	00000008              NET_SetTime(double)::s_last_realtime
00322ec0 l     O .bss	00000048              net_showdrop
00317a20 l     O .bss	00000048              net_showevents
00322ba0 l     O .bss	00000048              net_showfragments
00322d80 l     O .bss	00000048              net_showmsg
00322e40 l     O .bss	00000048              net_showpeaks
003234a0 l     O .bss	00000048              net_showsplits
00322a80 l     O .bss	00000048              net_showtcp
00322ae0 l     O .bss	00000048              net_showudp
00323500 l     O .bss	00000048              net_showudp_wire
00168840 l     F .text	00000051              NET_Shutdown()
0008b150 l     F .text	0000000a              NET_SignonState::GetGroup() const
0008b120 l     F .text	0000000a              NET_SignonState::GetName() const
0008b110 l     F .text	0000000a              NET_SignonState::GetType() const
0008be50 l     F .text	0000000e              NET_SignonState::~NET_SignonState()
0008be50 l     F .text	0000000e              NET_SignonState::~NET_SignonState()
0008c0a0 l     F .text	00000012              NET_SignonState::~NET_SignonState()
0008b130 l     F .text	0000001a              NET_SignonState::Process()
00084c10 l     F .text	000002cd              NET_SignonState::ReadFromBuffer(bf_read&)
002c8530 l     O .bss	0000000c              NET_SignonState::ReadFromBuffer(bf_read&)::tm_fmt
0007d380 l     F .text	00000054              NET_SignonState::ToString() const
0007e800 l     F .text	000000d9              NET_SignonState::WriteToBuffer(bf_write&)
00323210 l     O .bss	00000014              net_sockets
00323640 l     O .bss	00000048              net_splitpacket_maxrate
00323470 l     O .bss	00000014              net_splitpackets
003235e0 l     O .bss	00000048              net_splitrate
00168550 l     F .text	00000010              net_start(CCommand const&)
00323a20 l     O .bss	00000024              net_start_command
001691b0 l     F .text	0000052c              net_status(CCommand const&)
00323a60 l     O .bss	00000024              net_status_command
0008b0c0 l     F .text	0000000a              NET_StringCmd::GetGroup() const
0008b090 l     F .text	0000000a              NET_StringCmd::GetName() const
0008b080 l     F .text	0000000a              NET_StringCmd::GetType() const
0008be70 l     F .text	0000000e              NET_StringCmd::~NET_StringCmd()
0008be70 l     F .text	0000000e              NET_StringCmd::~NET_StringCmd()
0008c060 l     F .text	00000012              NET_StringCmd::~NET_StringCmd()
0008b0a0 l     F .text	0000001a              NET_StringCmd::Process()
00084310 l     F .text	0000022d              NET_StringCmd::ReadFromBuffer(bf_read&)
002c8518 l     O .bss	0000000c              NET_StringCmd::ReadFromBuffer(bf_read&)::tm_fmt
0007d450 l     F .text	00000044              NET_StringCmd::ToString() const
0007daa0 l     F .text	000000c9              NET_StringCmd::WriteToBuffer(bf_write&)
00165ee0 l     F .text	000000b6              NET_StringToAdr(char const*, netadr_s*)
00165cc0 l     F .text	00000139              NET_StringToSockaddr(char const*, sockaddr*)
0008b0e0 l     F .text	0000000a              NET_Tick::GetName() const
0008b0d0 l     F .text	0000000a              NET_Tick::GetType() const
0008bde0 l     F .text	0000000e              NET_Tick::~NET_Tick()
0008bde0 l     F .text	0000000e              NET_Tick::~NET_Tick()
0008c180 l     F .text	00000012              NET_Tick::~NET_Tick()
0008b0f0 l     F .text	0000001a              NET_Tick::Process()
00086060 l     F .text	00000382              NET_Tick::ReadFromBuffer(bf_read&)
002c8584 l     O .bss	0000000c              NET_Tick::ReadFromBuffer(bf_read&)::tm_fmt
0007d1b0 l     F .text	00000044              NET_Tick::ToString() const
0007ea00 l     F .text	00000216              NET_Tick::WriteToBuffer(bf_write&)
003230a0 l     O .bss	00000008              net_time
00323240 l     O .bss	00000048              net_udp_rcvbuf
00323160 l     O .bss	00000048              net_usesocketsforloopback
002c7570 l     O .data	00000004              networkStringTableContainerClient
002c7574 l     O .data	00000004              networkStringTableContainerServer
00000000       F *UND*	00000000              operator new(unsigned int)@@GLIBCXX_3.4
00000000       F *UND*	00000000              operator new[](unsigned int)@@GLIBCXX_3.4
00319b80 l     O .bss	00000048              next
000cae10 l     F .text	00000007              non-virtual thunk to CBaseClient::~CBaseClient()
000cae20 l     F .text	00000007              non-virtual thunk to CBaseClient::~CBaseClient()
000caed0 l     F .text	00000007              non-virtual thunk to CBaseClient::~CBaseClient()
000caee0 l     F .text	00000007              non-virtual thunk to CBaseClient::~CBaseClient()
000c90e0 l     F .text	00000007              non-virtual thunk to CBaseClient::Clear()
000c7ac0 l     F .text	00000007              non-virtual thunk to CBaseClient::ClientPrintf(char const*, ...)
000c82f0 l     F .text	00000007              non-virtual thunk to CBaseClient::Connect(char const*, int, INetChannel*, bool, int)
000c8be0 l     F .text	00000007              non-virtual thunk to CBaseClient::ConnectionStart(INetChannel*)
000c81e0 l     F .text	00000007              non-virtual thunk to CBaseClient::Disconnect(char const*, ...)
000c8540 l     F .text	00000007              non-virtual thunk to CBaseClient::ExecuteStringCommand(char const*)
000cc320 l     F .text	00000007              non-virtual thunk to CBaseClient::GetClientName() const
000c7a30 l     F .text	00000007              non-virtual thunk to CBaseClient::GetMaxAckTickCount() const
000cc340 l     F .text	00000007              non-virtual thunk to CBaseClient::GetNetChannel()
000c79b0 l     F .text	00000007              non-virtual thunk to CBaseClient::GetNetworkID() const
000ca9d0 l     F .text	00000007              non-virtual thunk to CBaseClient::GetNetworkIDString() const
000cc2e0 l     F .text	00000007              non-virtual thunk to CBaseClient::GetPlayerSlot() const
000c7810 l     F .text	00000007              non-virtual thunk to CBaseClient::GetRate() const
000cc360 l     F .text	00000007              non-virtual thunk to CBaseClient::GetServer()
000c78a0 l     F .text	00000007              non-virtual thunk to CBaseClient::GetUpdateRate() const
000cc300 l     F .text	00000007              non-virtual thunk to CBaseClient::GetUserID() const
000c85a0 l     F .text	00000007              non-virtual thunk to CBaseClient::GetUserSetting(char const*) const
000c8fd0 l     F .text	00000007              non-virtual thunk to CBaseClient::Inactivate()
000cc3e0 l     F .text	00000007              non-virtual thunk to CBaseClient::IsActive() const
000cc380 l     F .text	00000007              non-virtual thunk to CBaseClient::IsConnected() const
000cc410 l     F .text	00000007              non-virtual thunk to CBaseClient::IsFakeClient() const
000cc470 l     F .text	00000007              non-virtual thunk to CBaseClient::IsHearingClient(int) const
000cc430 l     F .text	00000007              non-virtual thunk to CBaseClient::IsHLTV() const
000cc490 l     F .text	00000007              non-virtual thunk to CBaseClient::IsProximityHearingClient(int) const
000cc450 l     F .text	00000007              non-virtual thunk to CBaseClient::IsReplay() const
000cc3b0 l     F .text	00000007              non-virtual thunk to CBaseClient::IsSpawned() const
000c92a0 l     F .text	00000007              non-virtual thunk to CBaseClient::ProcessBaselineAck(CLC_BaselineAck*)
000c7dc0 l     F .text	00000007              non-virtual thunk to CBaseClient::ProcessClientInfo(CLC_ClientInfo*)
000c7a70 l     F .text	00000007              non-virtual thunk to CBaseClient::ProcessCmdKeyValues(CLC_CmdKeyValues*)
000c7cf0 l     F .text	00000007              non-virtual thunk to CBaseClient::ProcessListenEvents(CLC_ListenEvents*)
000ca2a0 l     F .text	00000007              non-virtual thunk to CBaseClient::ProcessSetConVar(NET_SetConVar*)
000c8480 l     F .text	00000007              non-virtual thunk to CBaseClient::ProcessSignonState(NET_SignonState*)
000c7960 l     F .text	00000007              non-virtual thunk to CBaseClient::ProcessStringCmd(NET_StringCmd*)
000c7900 l     F .text	00000007              non-virtual thunk to CBaseClient::ProcessTick(NET_Tick*)
000c7c50 l     F .text	00000007              non-virtual thunk to CBaseClient::Reconnect()
000cb1d0 l     F .text	00000007              non-virtual thunk to CBaseClient::SendNetMsg(INetMessage&, bool)
000c79f0 l     F .text	00000007              non-virtual thunk to CBaseClient::SetMaxRoutablePayloadSize(int)
000c77c0 l     F .text	00000007              non-virtual thunk to CBaseClient::SetRate(int, bool)
000c7850 l     F .text	00000007              non-virtual thunk to CBaseClient::SetUpdateRate(int, bool)
000cd2c0 l     F .text	00000007              non-virtual thunk to CBaseClientState::~CBaseClientState()
000cd2d0 l     F .text	00000007              non-virtual thunk to CBaseClientState::~CBaseClientState()
000cd350 l     F .text	00000007              non-virtual thunk to CBaseClientState::~CBaseClientState()
000cd360 l     F .text	00000007              non-virtual thunk to CBaseClientState::~CBaseClientState()
000cc750 l     F .text	00000007              non-virtual thunk to CBaseClientState::GetDemoProtocolVersion() const
000d0e60 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessClassInfo(SVC_ClassInfo*)
000cc770 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessCmdKeyValues(SVC_CmdKeyValues*)
000ceb40 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessConnectionlessPacket(netpacket_s*)
000cf8e0 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessCreateStringTable(SVC_CreateStringTable*)
000ce000 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessGameEventList(SVC_GameEventList*)
000d0280 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessGetCvarValue(SVC_GetCvarValue*)
000cde10 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessMenu(SVC_Menu*)
000cf610 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessPacketEntities(SVC_PacketEntities*)
000ce470 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessPrint(SVC_Print*)
000ce220 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessSendTable(SVC_SendTable*)
000d2010 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessServerInfo(SVC_ServerInfo*)
000d06a0 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessSetConVar(NET_SetConVar*)
000cdc00 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessSetPause(SVC_SetPause*)
000cd9f0 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessSetView(SVC_SetView*)
000ce690 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessSignonState(NET_SignonState*)
000d0010 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessStringCmd(NET_StringCmd*)
000cfdb0 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessTick(NET_Tick*)
000ce8c0 l     F .text	00000007              non-virtual thunk to CBaseClientState::ProcessUpdateStringTable(SVC_UpdateStringTable*)
0008eae0 l     F .text	00000007              non-virtual thunk to CBSPTreeData::EnumerateLeaf(int, int)
000ddaf0 l     F .text	0000000a              non-virtual thunk to CClientState::~CClientState()
000ddb00 l     F .text	00000007              non-virtual thunk to CClientState::~CClientState()
000ddb10 l     F .text	00000007              non-virtual thunk to CClientState::~CClientState()
000ddc60 l     F .text	0000000a              non-virtual thunk to CClientState::~CClientState()
000ddc70 l     F .text	00000007              non-virtual thunk to CClientState::~CClientState()
000ddc80 l     F .text	00000007              non-virtual thunk to CClientState::~CClientState()
000dd6d0 l     F .text	00000007              non-virtual thunk to CClientState::ProcessBSPDecal(SVC_BSPDecal*)
000dd790 l     F .text	00000007              non-virtual thunk to CClientState::ProcessClassInfo(SVC_ClassInfo*)
000dd540 l     F .text	00000007              non-virtual thunk to CClientState::ProcessConnectionlessPacket(netpacket_s*)
000dd6f0 l     F .text	00000007              non-virtual thunk to CClientState::ProcessCrosshairAngle(SVC_CrosshairAngle*)
000dd6b0 l     F .text	00000007              non-virtual thunk to CClientState::ProcessEntityMessage(SVC_EntityMessage*)
000dd710 l     F .text	00000007              non-virtual thunk to CClientState::ProcessFixAngle(SVC_FixAngle*)
000dd670 l     F .text	00000007              non-virtual thunk to CClientState::ProcessGameEvent(SVC_GameEvent*)
000dd830 l     F .text	00000007              non-virtual thunk to CClientState::ProcessPacketEntities(SVC_PacketEntities*)
000dd870 l     F .text	00000007              non-virtual thunk to CClientState::ProcessPrefetch(SVC_Prefetch*)
000dd7d0 l     F .text	00000007              non-virtual thunk to CClientState::ProcessServerInfo(SVC_ServerInfo*)
000dd770 l     F .text	00000007              non-virtual thunk to CClientState::ProcessSetPause(SVC_SetPause*)
000dd850 l     F .text	00000007              non-virtual thunk to CClientState::ProcessSounds(SVC_Sounds*)
000dd7b0 l     F .text	00000007              non-virtual thunk to CClientState::ProcessStringCmd(NET_StringCmd*)
000dd810 l     F .text	00000007              non-virtual thunk to CClientState::ProcessTempEntities(SVC_TempEntities*)
000dd7f0 l     F .text	00000007              non-virtual thunk to CClientState::ProcessTick(NET_Tick*)
000dd690 l     F .text	00000007              non-virtual thunk to CClientState::ProcessUserMessage(SVC_UserMessage*)
000dd730 l     F .text	00000007              non-virtual thunk to CClientState::ProcessVoiceData(SVC_VoiceData*)
000dd750 l     F .text	00000007              non-virtual thunk to CClientState::ProcessVoiceInit(SVC_VoiceInit*)
000f6270 l     F .text	00000007              non-virtual thunk to CDispInfo::GetCornerNeighbors(int)
000f62a0 l     F .text	00000007              non-virtual thunk to CDispInfo::GetDispUtilsByIndex(int)
000f6240 l     F .text	00000007              non-virtual thunk to CDispInfo::GetEdgeNeighbor(int)
000f6220 l     F .text	00000007              non-virtual thunk to CDispInfo::GetPowerInfo() const
001e1b80 l     F .text	00000007              non-virtual thunk to CEmptyConVar::GetName() const
001e1ba0 l     F .text	00000007              non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
001e1b20 l     F .text	00000007              non-virtual thunk to CEmptyConVar::SetValue(char const*)
001e1b40 l     F .text	00000007              non-virtual thunk to CEmptyConVar::SetValue(float)
001e1b60 l     F .text	00000007              non-virtual thunk to CEmptyConVar::SetValue(int)
001b2010 l     F .text	0000000a              non-virtual thunk to CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
001b2080 l     F .text	00000007              non-virtual thunk to CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
0019e990 l     F .text	0000000a              non-virtual thunk to CGameClient::~CGameClient()
0019e9a0 l     F .text	00000007              non-virtual thunk to CGameClient::~CGameClient()
0019e9b0 l     F .text	00000007              non-virtual thunk to CGameClient::~CGameClient()
0019ea50 l     F .text	0000000a              non-virtual thunk to CGameClient::~CGameClient()
0019ea60 l     F .text	00000007              non-virtual thunk to CGameClient::~CGameClient()
0019ea70 l     F .text	00000007              non-virtual thunk to CGameClient::~CGameClient()
0019e5f0 l     F .text	00000007              non-virtual thunk to CGameClient::Clear()
0019c980 l     F .text	00000007              non-virtual thunk to CGameClient::Connect(char const*, int, INetChannel*, bool, int)
0019c220 l     F .text	00000007              non-virtual thunk to CGameClient::ConnectionClosing(char const*)
0019ccb0 l     F .text	00000007              non-virtual thunk to CGameClient::ConnectionCrashed(char const*)
0019c620 l     F .text	00000007              non-virtual thunk to CGameClient::Disconnect(char const*, ...)
0019e490 l     F .text	00000007              non-virtual thunk to CGameClient::ExecuteStringCommand(char const*)
0019c2d0 l     F .text	00000007              non-virtual thunk to CGameClient::FileDenied(char const*, unsigned int)
0019cd50 l     F .text	00000007              non-virtual thunk to CGameClient::FileReceived(char const*, unsigned int)
0019ce40 l     F .text	00000007              non-virtual thunk to CGameClient::FileRequested(char const*, unsigned int)
0019c290 l     F .text	00000007              non-virtual thunk to CGameClient::FileSent(char const*, unsigned int)
0019e7b0 l     F .text	00000007              non-virtual thunk to CGameClient::Inactivate()
0019d290 l     F .text	00000007              non-virtual thunk to CGameClient::IsHearingClient(int) const
0019c0d0 l     F .text	00000007              non-virtual thunk to CGameClient::IsProximityHearingClient(int) const
0019c160 l     F .text	00000007              non-virtual thunk to CGameClient::PacketEnd()
0019c120 l     F .text	00000007              non-virtual thunk to CGameClient::PacketStart(int, int)
0019d500 l     F .text	00000007              non-virtual thunk to CGameClient::ProcessClientInfo(CLC_ClientInfo*)
0019c060 l     F .text	00000007              non-virtual thunk to CGameClient::ProcessCmdKeyValues(CLC_CmdKeyValues*)
0019d0c0 l     F .text	00000007              non-virtual thunk to CGameClient::ProcessFileCRCCheck(CLC_FileCRCCheck*)
0019c0b0 l     F .text	00000007              non-virtual thunk to CGameClient::ProcessFileMD5Check(CLC_FileMD5Check*)
0019d140 l     F .text	00000007              non-virtual thunk to CGameClient::ProcessMove(CLC_Move*)
0019cc20 l     F .text	00000007              non-virtual thunk to CGameClient::ProcessRespondCvarValue(CLC_RespondCvarValue*)
0019d100 l     F .text	00000007              non-virtual thunk to CGameClient::ProcessSaveReplay(CLC_SaveReplay*)
0019cba0 l     F .text	00000007              non-virtual thunk to CGameClient::ProcessVoiceData(CLC_VoiceData*)
0019c7b0 l     F .text	00000007              non-virtual thunk to CGameClient::Reconnect()
0019cdc0 l     F .text	00000007              non-virtual thunk to CGameClient::SendNetMsg(INetMessage&, bool)
0019d3d0 l     F .text	00000007              non-virtual thunk to CGameClient::SetRate(int, bool)
0019c8e0 l     F .text	00000007              non-virtual thunk to CGameClient::SetUpdateRate(int, bool)
0011b460 l     F .text	00000007              non-virtual thunk to CHLTVClient::~CHLTVClient()
0011b470 l     F .text	00000007              non-virtual thunk to CHLTVClient::~CHLTVClient()
0011b4a0 l     F .text	00000007              non-virtual thunk to CHLTVClient::~CHLTVClient()
0011b4b0 l     F .text	00000007              non-virtual thunk to CHLTVClient::~CHLTVClient()
0011b140 l     F .text	00000007              non-virtual thunk to CHLTVClient::ConnectionClosing(char const*)
0011b170 l     F .text	00000007              non-virtual thunk to CHLTVClient::ConnectionCrashed(char const*)
0011ba80 l     F .text	00000007              non-virtual thunk to CHLTVClient::ExecuteStringCommand(char const*)
0011b3a0 l     F .text	00000007              non-virtual thunk to CHLTVClient::FileDenied(char const*, unsigned int)
0011b380 l     F .text	00000007              non-virtual thunk to CHLTVClient::FileReceived(char const*, unsigned int)
0011b3c0 l     F .text	00000007              non-virtual thunk to CHLTVClient::FileRequested(char const*, unsigned int)
0011b1e0 l     F .text	00000007              non-virtual thunk to CHLTVClient::FileSent(char const*, unsigned int)
0011b1c0 l     F .text	00000007              non-virtual thunk to CHLTVClient::PacketEnd()
0011b1a0 l     F .text	00000007              non-virtual thunk to CHLTVClient::PacketStart(int, int)
0011b440 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessClientInfo(CLC_ClientInfo*)
0011b0e0 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessFileCRCCheck(CLC_FileCRCCheck*)
0011c500 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessFileMD5Check(CLC_FileMD5Check*)
0011b0a0 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessListenEvents(CLC_ListenEvents*)
0011b080 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessMove(CLC_Move*)
0011b0c0 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessRespondCvarValue(CLC_RespondCvarValue*)
0011b100 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessSaveReplay(CLC_SaveReplay*)
0011baf0 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessSetConVar(NET_SetConVar*)
0011b120 l     F .text	00000007              non-virtual thunk to CHLTVClient::ProcessVoiceData(CLC_VoiceData*)
0011b270 l     F .text	00000007              non-virtual thunk to CHLTVClient::SetRate(int, bool)
0011b200 l     F .text	00000007              non-virtual thunk to CHLTVClient::SetUpdateRate(int, bool)
0011d460 l     F .text	00000007              non-virtual thunk to CHLTVClientState::~CHLTVClientState()
0011d470 l     F .text	00000007              non-virtual thunk to CHLTVClientState::~CHLTVClientState()
0011d4a0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::~CHLTVClientState()
0011d4b0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::~CHLTVClientState()
0011c860 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessBSPDecal(SVC_BSPDecal*)
0011d540 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessClassInfo(SVC_ClassInfo*)
0011c8a0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessCrosshairAngle(SVC_CrosshairAngle*)
0011c700 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessEntityMessage(SVC_EntityMessage*)
0011c8e0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessFixAngle(SVC_FixAngle*)
0011cda0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessGameEventList(SVC_GameEventList*)
0011ced0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessGameEvent(SVC_GameEvent*)
0011c6c0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessMenu(SVC_Menu*)
0011cb10 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessPacketEntities(SVC_PacketEntities*)
0011c920 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessPrefetch(SVC_Prefetch*)
0011d260 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessServerInfo(SVC_ServerInfo*)
0011d620 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessSetConVar(NET_SetConVar*)
0011d4e0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessSetView(SVC_SetView*)
0011c960 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessSounds(SVC_Sounds*)
0011cad0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessStringCmd(NET_StringCmd*)
0011c610 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessTempEntities(SVC_TempEntities*)
0011c7b0 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessUserMessage(SVC_UserMessage*)
0011ca10 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessVoiceData(SVC_VoiceData*)
0011ca90 l     F .text	00000007              non-virtual thunk to CHLTVClientState::ProcessVoiceInit(SVC_VoiceInit*)
00121160 l     F .text	0000000a              non-virtual thunk to CHLTVServer::BroadcastEvent(IGameEvent*)
00125f60 l     F .text	0000000a              non-virtual thunk to CHLTVServer::CanSkipBackwards()
00125ad0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::~CHLTVServer()
00125ae0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::~CHLTVServer()
00125af0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::~CHLTVServer()
00125b00 l     F .text	00000007              non-virtual thunk to CHLTVServer::~CHLTVServer()
00125d10 l     F .text	0000000a              non-virtual thunk to CHLTVServer::~CHLTVServer()
00125d20 l     F .text	0000000a              non-virtual thunk to CHLTVServer::~CHLTVServer()
00125d30 l     F .text	0000000a              non-virtual thunk to CHLTVServer::~CHLTVServer()
00125d40 l     F .text	00000007              non-virtual thunk to CHLTVServer::~CHLTVServer()
00121ae0 l     F .text	00000007              non-virtual thunk to CHLTVServer::Clear()
001207a0 l     F .text	00000007              non-virtual thunk to CHLTVServer::ConnectClient(netadr_s&, int, int, int, int, char const*, char const*, char const*, int)
001209b0 l     F .text	00000007              non-virtual thunk to CHLTVServer::CreateNewClient(int)
00120960 l     F .text	00000007              non-virtual thunk to CHLTVServer::FillServerInfo(SVC_ServerInfo&)
00120080 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetBaseServer()
001201e0 l     F .text	00000007              non-virtual thunk to CHLTVServer::GetChallengeType(netadr_s&)
001200c0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetDemoFile()
001200a0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetDirector()
001220e0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetGlobalStats(int&, int&, int&)
0011fe60 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetHLTVSlot()
0011fed0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetLocalStats(int&, int&, int&)
00121120 l     F .text	00000007              non-virtual thunk to CHLTVServer::GetName() const
00120fd0 l     F .text	00000007              non-virtual thunk to CHLTVServer::GetNetStats(float&, float&)
0011fe80 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetOnlineTime()
001210a0 l     F .text	00000007              non-virtual thunk to CHLTVServer::GetPassword() const
00120170 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetPlaybackStartTick()
00120190 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetPlaybackTick()
00120120 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetPlaybackTimeScale()
00120de0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetProtocolVersion()
00120c30 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetRelayAddress()
001201c0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::GetTotalTicks()
00120900 l     F .text	00000007              non-virtual thunk to CHLTVServer::Init(bool)
00126020 l     F .text	0000000a              non-virtual thunk to CHLTVServer::InterpolateViewpoint()
0011ff60 l     F .text	0000000a              non-virtual thunk to CHLTVServer::IsDemoPlayback()
00125ee0 l     F .text	00000007              non-virtual thunk to CHLTVServer::IsHLTV() const
001260c0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::IsLoading()
0011ff30 l     F .text	0000000a              non-virtual thunk to CHLTVServer::IsMasterProxy()
00125f00 l     F .text	00000007              non-virtual thunk to CHLTVServer::IsMultiplayer() const
00120100 l     F .text	0000000a              non-virtual thunk to CHLTVServer::IsPlaybackPaused()
001200e0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::IsPlayingBack()
00125f20 l     F .text	0000000a              non-virtual thunk to CHLTVServer::IsPlayingTimeDemo()
00125f40 l     F .text	0000000a              non-virtual thunk to CHLTVServer::IsSkipping()
001260a0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::OnLastDemoInLoopPlayed()
00125f80 l     F .text	0000000a              non-virtual thunk to CHLTVServer::PausePlayback(float)
00125440 l     F .text	00000007              non-virtual thunk to CHLTVServer::ProcessConnectionlessPacket(netpacket_s*)
00126040 l     F .text	0000000a              non-virtual thunk to CHLTVServer::ReadPacket()
00126060 l     F .text	0000000a              non-virtual thunk to CHLTVServer::ResetDemoInterpolation()
00125fe0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::ResumePlayback()
0011ffc0 l     F .text	00000007              non-virtual thunk to CHLTVServer::SendClientMessages(bool)
00125fc0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::SetEndTick(int)
0011fe20 l     F .text	00000007              non-virtual thunk to CHLTVServer::SetMaxClients(int)
00120140 l     F .text	0000000a              non-virtual thunk to CHLTVServer::SetPlaybackTimeScale(float)
00126080 l     F .text	0000000a              non-virtual thunk to CHLTVServer::ShouldLoopDemos()
0011ff80 l     F .text	00000007              non-virtual thunk to CHLTVServer::ShouldUpdateMasterServer()
00120840 l     F .text	00000007              non-virtual thunk to CHLTVServer::Shutdown()
00125fa0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::SkipToTick(int, bool, bool)
001246c0 l     F .text	0000000a              non-virtual thunk to CHLTVServer::StartPlayback(char const*, bool)
00126000 l     F .text	0000000a              non-virtual thunk to CHLTVServer::StopPlayback()
0011ffa0 l     F .text	00000007              non-virtual thunk to CHLTVServer::UserInfoChanged(int)
001b1fe0 l     F .text	0000000a              non-virtual thunk to CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b20d0 l     F .text	00000007              non-virtual thunk to CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b4da0 l     F .text	0000000a              non-virtual thunk to CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
001b4df0 l     F .text	00000007              non-virtual thunk to CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
0013c710 l     F .text	0000000a              non-virtual thunk to CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
0013c820 l     F .text	00000007              non-virtual thunk to CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
00138210 l     F .text	00000007              non-virtual thunk to CModelRender::GetItemName(unsigned int, void const*, char*, unsigned int)
001e0020 l     F .text	00000007              non-virtual thunk to ConVar::GetName() const
001dffb0 l     F .text	00000007              non-virtual thunk to ConVar::IsFlagSet(int) const
001e0070 l     F .text	00000007              non-virtual thunk to ConVar::SetValue(char const*)
001e00a0 l     F .text	00000007              non-virtual thunk to ConVar::SetValue(float)
001e00d0 l     F .text	00000007              non-virtual thunk to ConVar::SetValue(int)
0016ed00 l     F .text	0000000a              non-virtual thunk to CQueuedPacketSender::ClearQueuedPacketsForChannel(INetChannel*)
0016e760 l     F .text	0000000a              non-virtual thunk to CQueuedPacketSender::HasQueuedPackets(INetChannel const*) const
0016efa0 l     F .text	0000000a              non-virtual thunk to CQueuedPacketSender::IsRunning()
0016ee20 l     F .text	0000000a              non-virtual thunk to CQueuedPacketSender::QueuePacket(INetChannel*, int, char const*, int, sockaddr const*, int, unsigned int)
0016e6f0 l     F .text	0000000a              non-virtual thunk to CQueuedPacketSender::Setup()
0016e920 l     F .text	0000000a              non-virtual thunk to CQueuedPacketSender::Shutdown()
0013c6e0 l     F .text	0000000a              non-virtual thunk to CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::~CRefCounted1()
0013c790 l     F .text	00000007              non-virtual thunk to CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::~CRefCounted1()
0018e000 l     F .text	0000000a              non-virtual thunk to CReplayServer::BroadcastEvent(IGameEvent*)
0018c350 l     F .text	00000007              non-virtual thunk to CReplayServer::Clear()
0018b600 l     F .text	00000007              non-virtual thunk to CReplayServer::ConnectClient(netadr_s&, int, int, int, int, char const*, char const*, char const*, int)
0018b680 l     F .text	00000007              non-virtual thunk to CReplayServer::CreateFakeClient(char const*)
0018dc60 l     F .text	0000000a              non-virtual thunk to CReplayServer::~CReplayServer()
0018dc70 l     F .text	0000000a              non-virtual thunk to CReplayServer::~CReplayServer()
0018dc80 l     F .text	00000007              non-virtual thunk to CReplayServer::~CReplayServer()
0018de30 l     F .text	0000000a              non-virtual thunk to CReplayServer::~CReplayServer()
0018de40 l     F .text	0000000a              non-virtual thunk to CReplayServer::~CReplayServer()
0018de50 l     F .text	00000007              non-virtual thunk to CReplayServer::~CReplayServer()
0018b7b0 l     F .text	00000007              non-virtual thunk to CReplayServer::FillServerInfo(SVC_ServerInfo&)
0018b5a0 l     F .text	0000000a              non-virtual thunk to CReplayServer::GetBaseServer()
0018b5c0 l     F .text	00000007              non-virtual thunk to CReplayServer::GetChallengeType(netadr_s&)
0018dfe0 l     F .text	0000000a              non-virtual thunk to CReplayServer::GetDirector()
0018b800 l     F .text	00000007              non-virtual thunk to CReplayServer::GetName() const
0018b740 l     F .text	00000007              non-virtual thunk to CReplayServer::GetNetStats(float&, float&)
0018b510 l     F .text	0000000a              non-virtual thunk to CReplayServer::GetOnlineTime()
0018b5e0 l     F .text	00000007              non-virtual thunk to CReplayServer::GetPassword() const
0018b4f0 l     F .text	0000000a              non-virtual thunk to CReplayServer::GetReplaySlot()
0018b770 l     F .text	00000007              non-virtual thunk to CReplayServer::Init(bool)
0018dfa0 l     F .text	00000007              non-virtual thunk to CReplayServer::IsMultiplayer() const
0018e040 l     F .text	0000000a              non-virtual thunk to CReplayServer::IsRecording()
0018dfc0 l     F .text	00000007              non-virtual thunk to CReplayServer::IsReplay() const
0018b660 l     F .text	00000007              non-virtual thunk to CReplayServer::RejectConnection(netadr_s const&, int, char const*)
0018b620 l     F .text	00000007              non-virtual thunk to CReplayServer::ReplyChallenge(netadr_s&, int)
0018b640 l     F .text	00000007              non-virtual thunk to CReplayServer::ReplyServerChallenge(netadr_s&)
0018b4b0 l     F .text	00000007              non-virtual thunk to CReplayServer::SetMaxClients(int)
0018b560 l     F .text	00000007              non-virtual thunk to CReplayServer::ShouldUpdateMasterServer()
0018b6a0 l     F .text	00000007              non-virtual thunk to CReplayServer::Shutdown()
0018bab0 l     F .text	0000000a              non-virtual thunk to CReplayServer::StartRecording()
0018ba60 l     F .text	0000000a              non-virtual thunk to CReplayServer::StopRecording()
0018b580 l     F .text	00000007              non-virtual thunk to CReplayServer::UserInfoChanged(int)
00197fc0 l     F .text	00000007              non-virtual thunk to CStaticProp::CollisionToWorldTransform() const
00199e60 l     F .text	00000007              non-virtual thunk to CStaticProp::ComputeFxBlend()
0019b820 l     F .text	00000007              non-virtual thunk to CStaticProp::CreateModelInstance()
00197e50 l     F .text	00000007              non-virtual thunk to CStaticProp::DoAnimationEvents()
00198190 l     F .text	00000007              non-virtual thunk to CStaticProp::DrawModel(int)
0019b7c0 l     F .text	00000007              non-virtual thunk to CStaticProp::FirstShadowChild()
00198750 l     F .text	00000007              non-virtual thunk to CStaticProp::GetAttachment(int, matrix3x4_t&)
00197d90 l     F .text	00000007              non-virtual thunk to CStaticProp::GetAttachment(int, Vector&, QAngle&)
0019b610 l     F .text	00000007              non-virtual thunk to CStaticProp::GetBody()
00197f80 l     F .text	00000007              non-virtual thunk to CStaticProp::GetCollisionAngles() const
0019b5b0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetCollisionGroup() const
00197f40 l     F .text	00000007              non-virtual thunk to CStaticProp::GetCollisionModel()
00197f20 l     F .text	00000007              non-virtual thunk to CStaticProp::GetCollisionModelIndex()
00197f60 l     F .text	00000007              non-virtual thunk to CStaticProp::GetCollisionOrigin() const
00197eb0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetColorModulation(float*)
0019b590 l     F .text	00000007              non-virtual thunk to CStaticProp::GetEntityHandle()
00197e90 l     F .text	00000007              non-virtual thunk to CStaticProp::GetFxBlend()
0019b4c0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetIClientUnknown()
0019b4d0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetIClientUnknown()
00197e70 l     F .text	00000007              non-virtual thunk to CStaticProp::GetModel() const
0019b8c0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetModelInstance()
00198090 l     F .text	00000007              non-virtual thunk to CStaticProp::GetPVSNotifyInterface()
00197d70 l     F .text	00000007              non-virtual thunk to CStaticProp::GetRenderAngles()
001980b0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetRenderBounds(Vector&, Vector&)
00198100 l     F .text	00000007              non-virtual thunk to CStaticProp::GetRenderBoundsWorldspace(Vector&, Vector&)
0019b880 l     F .text	00000007              non-virtual thunk to CStaticProp::GetRenderClipPlane()
00197d50 l     F .text	00000007              non-virtual thunk to CStaticProp::GetRenderOrigin()
0019b5f0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetRootParentToWorldTransform() const
0019b6d0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetShadowCastDirection(Vector*, ShadowType_t) const
0019b6b0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetShadowCastDistance(float*, ShadowType_t) const
0019b6f0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetShadowHandle() const
0019b7a0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetShadowParent()
0019b730 l     F .text	00000007              non-virtual thunk to CStaticProp::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
0019b630 l     F .text	00000007              non-virtual thunk to CStaticProp::GetSkin()
00197fe0 l     F .text	00000007              non-virtual thunk to CStaticProp::GetSolid() const
00198000 l     F .text	00000007              non-virtual thunk to CStaticProp::GetSolidFlags() const
0019b860 l     F .text	00000007              non-virtual thunk to CStaticProp::IgnoresZBuffer() const
0019b760 l     F .text	00000007              non-virtual thunk to CStaticProp::IsShadowDirty()
00198790 l     F .text	00000007              non-virtual thunk to CStaticProp::IsTransparent()
00197de0 l     F .text	00000007              non-virtual thunk to CStaticProp::IsTwoPass()
0019b670 l     F .text	00000007              non-virtual thunk to CStaticProp::LODTest()
0019b840 l     F .text	00000007              non-virtual thunk to CStaticProp::LookupAttachment(char const*)
0019b780 l     F .text	00000007              non-virtual thunk to CStaticProp::MarkShadowDirty(bool)
001984f0 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::AddColorDecalToStaticProp(Vector const&, Vector const&, int, int, bool, CGameTrace&, bool, Color)
00198490 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::AddDecalToStaticProp(Vector const&, Vector const&, int, int, bool, CGameTrace&)
00198510 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::AddShadowToStaticProp(unsigned short, IClientRenderable*)
00198420 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::ComputePropOpacity(Vector const&, float)
001993d0 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::CreateVPhysicsRepresentations(IPhysicsEnvironment*, IVPhysicsKeyHandler*, void*)
001993e0 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::CreateVPhysicsRepresentations(IPhysicsEnvironment*, IVPhysicsKeyHandler*, void*)
00199830 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::DrawStaticProps(IClientRenderable**, int, bool, bool)
0019b3f0 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetAllStaticProps(CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
0019b400 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetAllStaticProps(CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
0019b2f0 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetAllStaticPropsInAABB(Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
0019b300 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetAllStaticPropsInAABB(Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
0019aa70 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetAllStaticPropsInOBB(Vector const&, Vector const&, Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
0019aa80 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetAllStaticPropsInOBB(Vector const&, Vector const&, Vector const&, Vector const&, CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >*)
00198240 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetStaticPropByIndex(int)
00198250 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetStaticPropByIndex(int)
00198550 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::GetStaticPropMaterialColorAndLighting(CGameTrace*, int, Vector&, Vector&)
001982e0 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::IsStaticProp(CBaseHandle) const
001982f0 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::IsStaticProp(CBaseHandle) const
00198290 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::IsStaticProp(IHandleEntity*) const
001982a0 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::IsStaticProp(IHandleEntity*) const
00198530 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::RemoveAllShadowsFromStaticProp(IClientRenderable*)
00198460 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::TraceRayAgainstStaticProp(Ray_t const&, int, CGameTrace&)
00198470 l     F .text	00000007              non-virtual thunk to CStaticPropMgr::TraceRayAgainstStaticProp(Ray_t const&, int, CGameTrace&)
0019b7e0 l     F .text	00000007              non-virtual thunk to CStaticProp::NextShadowPeer()
00198800 l     F .text	00000007              non-virtual thunk to CStaticProp::OBBMaxs() const
0019b570 l     F .text	00000007              non-virtual thunk to CStaticProp::OBBMaxsPreScaled() const
001989d0 l     F .text	00000007              non-virtual thunk to CStaticProp::OBBMins() const
0019b550 l     F .text	00000007              non-virtual thunk to CStaticProp::OBBMinsPreScaled() const
0019b650 l     F .text	00000007              non-virtual thunk to CStaticProp::OnThreadedDrawSetup()
0019b710 l     F .text	00000007              non-virtual thunk to CStaticProp::RecordToolMessage()
0019b8a0 l     F .text	00000007              non-virtual thunk to CStaticProp::RenderableToWorldTransform()
00198070 l     F .text	00000007              non-virtual thunk to CStaticProp::RenderHandle()
00198710 l     F .text	00000007              non-virtual thunk to CStaticProp::SetupBones(matrix3x4_t*, int, int, float)
00197e30 l     F .text	00000007              non-virtual thunk to CStaticProp::SetupWeights(matrix3x4_t const*, int, float*, float*)
0019b800 l     F .text	00000007              non-virtual thunk to CStaticProp::ShadowCastType()
00197e10 l     F .text	00000007              non-virtual thunk to CStaticProp::ShouldDraw()
00198160 l     F .text	00000007              non-virtual thunk to CStaticProp::ShouldReceiveProjectedTextures(int)
0019b5d0 l     F .text	00000007              non-virtual thunk to CStaticProp::ShouldTouchTrigger(int) const
00197ee0 l     F .text	00000007              non-virtual thunk to CStaticProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
00197f00 l     F .text	00000007              non-virtual thunk to CStaticProp::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
0019b690 l     F .text	00000007              non-virtual thunk to CStaticProp::UsesFlexDelayedWeights()
00198050 l     F .text	00000007              non-virtual thunk to CStaticProp::UsesFullFrameBufferTexture()
00198020 l     F .text	00000007              non-virtual thunk to CStaticProp::UsesPowerOfTwoFrameBufferTexture()
00197cf0 l     F .text	00000007              non-virtual thunk to CStaticProp::WorldSpaceSurroundingBounds(Vector*, Vector*)
00197cd0 l     F .text	00000007              non-virtual thunk to CStaticProp::WorldSpaceTriggerBounds(Vector*, Vector*) const
000000f4 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
001bc010 l     F .text	00000029              NotifyDedicatedServerUI
0017a2c0 l     F .text	00000049              NUM_FOR_EDICT(edict_t const*)
0009dbe0 l     F .text	000005e0              OBBHasFullyContainedIntersectionWithQuad(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector const&, Vector const&, float, Vector const&, float)
0038b3c8 l     O .bss	00000018              object_mutex
00170840 l     F .text	0000000a              OcclusionSystem()
0038b3c4 l     O .bss	00000004              once_regsizes.7669
001268c0 l     F .text	0000005c              OnChangeTelemetryDemoEnd(IConVar*, char const*, float)
00126920 l     F .text	000000a2              OnChangeTelemetryDemoStart(IConVar*, char const*, float)
00126a80 l     F .text	0000005c              OnChangeTelemetryFrameCount(IConVar*, char const*, float)
00126a30 l     F .text	0000004f              OnChangeTelemetryLevel(IConVar*, char const*, float)
00126630 l     F .text	00000022              OnChangeTelemetryPause(IConVar*, char const*, float)
00126660 l     F .text	00000022              OnChangeTelemetryResume(IConVar*, char const*, float)
001269d0 l     F .text	0000005b              OnChangeTelemetryServer(IConVar*, char const*, float)
00126720 l     F .text	0000004b              OnChangeThreadAffinity(IConVar*, char const*, float)
001ade20 l     F .text	00000036              OnTVEnablehanged(IConVar*, char const*, float)
00166b10 l     F .text	00000147              OpenSocketInternal(int, int, int, char const*, int, bool, int) [clone .constprop.115]
000bafe0 l     F .text	00000080              OpenZipU(void*, unsigned int, unsigned int)
0017c7e0 l     F .text	00000045              operator==(CUtlVector<unsigned char, CUtlMemory<unsigned char, int> > const&, CUtlVector<unsigned char, CUtlMemory<unsigned char, int> > const&)
00318000 l     O .bss	00000048              opt_EnumerateLeavesFastAlgorithm
0025a8e0 l     O .rodata	00000026              order.3564
003762a0 l     O .bss	00000040              orig_demo_message
00174270 l     F .text	000000d7              Overlay_BuildBasisOrigin(Vector&, msurface2_t*)
00174380 l     F .text	000000dd              Overlay_BuildBasis(Vector const&, Vector&, Vector&, bool)
001758c0 l     F .text	0000012d              Overlay_DispUVToWorld(CDispInfo*, CMeshReader*, Vector2D const&, Vector&, moverlayfragment_t&)
00174350 l     F .text	0000002b              Overlay_IsBasisFlipped(int*, int, int)
00173d50 l     F .text	0000000a              OverlayMgr()
00175b00 l     F .text	00000130              Overlay_OverlayPlaneToWorld(Vector const&, msurface2_t*, Vector const&, Vector&)
001759f0 l     F .text	00000083              Overlay_OverlayUVToOverlayPlane(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
00174e90 l     F .text	00000a2a              Overlay_TriBLToTR(CDispInfo*, CMeshReader*, Vector&, float, float, int, Vector const&)
00174460 l     F .text	00000a2a              Overlay_TriTLToBR(CDispInfo*, CMeshReader*, Vector&, float, float, int, Vector const&)
00175a80 l     F .text	00000080              Overlay_WorldToOverlayPlane(Vector const&, Vector const&, Vector const&, Vector&)
00144670 l     F .text	000001e7              OverrideMaterialSystemConfig(MaterialSystem_Config_t&)
001cfba0 l     F .text	00000022              OverrideVProfExport(IVProfExport*)
0038b150 l     O .bss	00000004              p4
001799d0 l     F .text	00000076              PackedEntity::AllocAndCopyPadded(void const*, unsigned long)
00179ab0 l     F .text	00000035              PackedEntity::CompareRecipients(CUtlMemory<CSendProxyRecipients, int> const&)
00179aa0 l     F .text	0000000b              PackedEntity::GetNumRecipients() const
00179a50 l     F .text	0000003f              PackedEntity::GetPropsChangedAfterTick(int, int*, int)
00179a90 l     F .text	0000000b              PackedEntity::GetRecipients() const
00179b20 l     F .text	00000091              PackedEntity::~PackedEntity()
00179b20 l     F .text	00000091              PackedEntity::~PackedEntity()
00179980 l     F .text	00000049              PackedEntity::PackedEntity()
00179980 l     F .text	00000049              PackedEntity::PackedEntity()
00179bc0 l     F .text	00000078              PackedEntity::SetRecipients(CUtlMemory<CSendProxyRecipients, int> const&)
00179af0 l     F .text	00000030              PackedEntity::SetServerAndClientClass(ServerClass*, ClientClass*)
001b2e80 l     F .text	000002f2              PackEntities_NetworkBackDoor(int, CGameClient**, CFrameSnapshot*)
0035770c l     O .bss	0000000c              PackEntities_NetworkBackDoor(int, CGameClient**, CFrameSnapshot*)::tm_fmt
001b3bb0 l     F .text	00000a55              PackEntities_Normal(int, CGameClient**, CFrameSnapshot*)
002509bb l     O .rodata	00000014              PackEntities_Normal(int, CGameClient**, CFrameSnapshot*)::__FUNCTION__
00357718 l     O .bss	0000000c              PackEntities_Normal(int, CGameClient**, CFrameSnapshot*)::tm_fmt
001b4fc0 l     F .text	00000024              PackWork_t::Process(PackWork_t&)
0020b340 l     F .text	00000072              Parabolic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0020b1d0 l     F .text	0000016d              Parabolic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001c8cc0 l     F .text	000003d8              ParseDirective(char const*)
000a9740 l     F .text	00000252              ParseFileInternal(char const*, char*, bool*, characterset_t*, unsigned int)
001c8ac0 l     F .text	00000078              ParseFloats(char const*, float*, int)
001c4990 l     F .text	0000049c              ParseSteamInfFile(SteamInfVersionInfo_t&, char const*, char const*) [clone .constprop.64]
001c8b40 l     F .text	0000006b              ParseString(char const*, char*, unsigned int)
002d5840 l     O .bss	00000048              password
00116c70 l     F .text	00000022              path(CCommand const&)
00317880 l     O .bss	00000024              path_command
001ed3b0 l     F .text	000002ea              pathmatch(char const*, char**, bool, char*, unsigned int)
0037d750 l     O .bss	00000004              pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
0037d730 l     O .bss	00000004              pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszPathMatchEnabled
001f10a0 l     F .text	00000017              PATHSEPARATOR(char)
0012cca0 l     F .text	000000a9              pause(CCommand const&)
0031a7e0 l     O .bss	00000024              pause_command
0007c350 l     F .text	0000008c              PchLanguageICUCodeToELanguage(char const*, ELanguage)
0007c2f0 l     F .text	00000055              PchLanguageToELanguage(char const*, ELanguage)
000de2e0 l     F .text	00000005              PerfMark(CCommand const&)
0030d020 l     O .bss	00000024              PerfMark_command
002c7f00 l     O .data	00000004              pfFastCos
002c7f04 l     O .data	00000004              pfFastSinCos
002c7f10 l     O .data	00000004              pfInvRSquared
002c7f40 l     O .data	00000004              pfRSqrt
002c7f30 l     O .data	00000004              pfRSqrtFast
002c7f50 l     O .data	00000004              pfSqrt
002c7f24 l     O .data	00000004              pfVectorNormalize
002c7f20 l     O .data	00000004              pfVectorNormalizeFast
002c725c l     O .data	00000004              phonehome
0030f6d0 l     O .bss	00000004              physcollision
0030f6e0 l     O .bss	00000004              physprop
002593d0 l     O .rodata	00000010              _pi32_1
00259400 l     O .rodata	00000010              _pi32_2
002593f0 l     O .rodata	00000010              _pi32_4
002593e0 l     O .rodata	00000010              _pi32_inv1
0012d150 l     F .text	00000158              ping(CCommand const&)
0031ade0 l     O .bss	000003fc              ping(CCommand const&)::g_flLastTime__Limit
0031a6a0 l     O .bss	00000024              ping_command
00326680 l     O .bss	00000048              pipeline_static_props
0020ffb0 l     F .text	000000e7              PlaneIntersection(VPlane const&, VPlane const&, VPlane const&, Vector&)
00319794 l     O .bss	00000004              player_info_s_DataDescInit::g_DataMapHolder
00126b70 l     F .text	00000007              player_info_s::GetBaseMap()
002c6f80 l     O .data	00000018              player_info_s::m_DataMap
0006c08c l    d  .plt	00000000              .plt
001b6db0 l     F .text	000000d9              plugin_load(CCommand const&)
003579a0 l     O .bss	00000024              plugin_load_command
001b68e0 l     F .text	00000020              plugin_pause_all(CCommand const&)
00357920 l     O .bss	00000024              plugin_pause_all_command
001b69b0 l     F .text	0000006d              plugin_pause(CCommand const&)
003578a0 l     O .bss	00000024              plugin_pause_command
001b6b50 l     F .text	00000011              plugin_print(CCommand const&)
00357860 l     O .bss	00000024              plugin_print_command
001b6bc0 l     F .text	000000a9              plugin_unload(CCommand const&)
003579e0 l     O .bss	00000024              plugin_unload_command
001b6950 l     F .text	00000020              plugin_unpause_all(CCommand const&)
00357960 l     O .bss	00000024              plugin_unpause_all_command
001b6a60 l     F .text	0000006d              plugin_unpause(CCommand const&)
003578e0 l     O .bss	00000024              plugin_unpause_command
0009c5c0 l     F .text	000000e5              PointInQuadFromBarycentric(Vector const&, Vector const&, Vector const&, Vector const&, Vector2D const&, Vector&)
0009baa0 l     F .text	00000b1d              PointInQuadToBarycentric(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, Vector2D&)
0020ce00 l     F .text	000002b6              PolyFromPlane(Vector*, Vector const&, float, float)
000e0600 l     F .text	0000000f              PopTraceVisits(TraceInfo_t*)
001c5700 l     F .text	0000001c              PosixPreMinidumpCallback(void*)
001c4840 l     F .text	0000001a              posix_signal_handler(int)
001cfa10 l     F .text	00000056              PostUpdateProfile()
002c7b00 l     O .data	00000400              power2_n
002282a0 l     F .text	00000148              pqdownheap
000bb670 l     F .text	00000158              pqdownheap(TState&, ct_data*, int)
001cbae0 l     F .text	00000022              PR_CheckEmptyString(char const*)
001d0b70 l     F .text	0000065f              PreUpdateProfile(float)
001a10f0 l     F .text	00000208              PrintChangeTracks()
00144e40 l     F .text	000001f8              PrintMaterialSystemConfig(MaterialSystem_Config_t const&)
00106dd0 l     F .text	000002cd              PrintPartialChangeEntsList()
00326980 l     O .bss	00000024              prop_crosshair
000ff3a0 l     F .text	00000014              PropOffsetLT(unsigned short const&, unsigned short const&)
00259470 l     O .rodata	00000010              _ps_0p5
00259480 l     O .rodata	00000010              _ps_1
002593c0 l     O .rodata	00000010              _ps_cephes_FOPI
00259440 l     O .rodata	00000010              _ps_coscof_p0
00259450 l     O .rodata	00000010              _ps_coscof_p1
00259460 l     O .rodata	00000010              _ps_coscof_p2
002593a0 l     O .rodata	00000010              _ps_inv_sign_mask
00259410 l     O .rodata	00000010              _ps_minus_cephes_DP1
00259420 l     O .rodata	00000010              _ps_minus_cephes_DP2
00259430 l     O .rodata	00000010              _ps_minus_cephes_DP3
002593b0 l     O .rodata	00000010              _ps_sign_mask
00259490 l     O .rodata	00000010              _ps_sincof_p0
002594a0 l     O .rodata	00000010              _ps_sincof_p1
002594b0 l     O .rodata	00000010              _ps_sincof_p2
00000000  w    F *UND*	00000000              pthread_cancel@@GLIBC_2.0
00000000  w    F *UND*	00000000              pthread_once@@GLIBC_2.0
00256a80 l     O .rodata	00000400              pulCRCTable
000e0570 l     F .text	0000008c              PushTraceVisits(TraceInfo_t*)
000be4b0 l     F .text	0000055d              putcentral(zlist*, unsigned int (*)(void*, char const*, unsigned int), void*)
000bea10 l     F .text	00000260              putend(int, unsigned long, unsigned long, unsigned int, char*, unsigned int (*)(void*, char const*, unsigned int), void*)
000be2f0 l     F .text	000001b1              putextended(zlist*, unsigned int (*)(void*, char const*, unsigned int), void*)
000bdf60 l     F .text	0000038d              putlocal(zlist*, unsigned int (*)(void*, char const*, unsigned int), void*)
0030d620 l     O .bss	00002000              pvsrow
001f0bf0 l     F .text	0000009b              Q_AggressiveStripPrecedingAndTrailingWhitespace(char*)
001f0a80 l     F .text	00000087              Q_AggressiveStripPrecedingAndTrailingWhitespaceW(wchar_t*)
000a9cf0 l     F .text	0000003b              Q_getwd(char*, int)
001f0780 l     F .text	0000007b              Q_IsMeanSpaceW(wchar_t)
001fc2b0 l     F .text	00000034              Q_IsValidUChar32(wchar_t)
00205ce0 l     F .text	00000019              Q_log2(int)
001f08d0 l     F .text	000000e1              Q_RemoveAllEvilCharacters(char*)
00201fd0 l     F .text	000008af              qsort_s
001f0b10 l     F .text	000000d3              Q_StripPrecedingAndTrailingWhitespace(char*)
001f09c0 l     F .text	000000b9              Q_StripPrecedingAndTrailingWhitespaceW(wchar_t*)
0009b660 l     F .text	000001d0              QuadWithParallelEdges(Vector const&, Vector const&, float, Vector const&, float, Vector const&, Vector2D&)
00208d00 l     F .text	0000006c              QuaternionAdd(Quaternion const&, Quaternion const&, Quaternion&)
002084c0 l     F .text	00000087              QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
00208f10 l     F .text	000000e8              QuaternionAngleDiff(Quaternion const&, Quaternion const&)
00209230 l     F .text	0000002e              QuaternionAngles(Quaternion const&, QAngle&)
002096b0 l     F .text	00000063              QuaternionAngles(Quaternion const&, RadianEuler&)
00209260 l     F .text	000000f3              QuaternionAxisAngle(Quaternion const&, Vector&, float&)
002089c0 l     F .text	00000056              QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
00208a20 l     F .text	00000049              QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
002087c0 l     F .text	0000003e              QuaternionConjugate(Quaternion const&, Quaternion&)
00208d70 l     F .text	00000048              QuaternionDotProduct(Quaternion const&, Quaternion const&)
00208930 l     F .text	00000085              QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
00208800 l     F .text	00000097              QuaternionInvert(Quaternion const&, Quaternion&)
00209000 l     F .text	0000019e              QuaternionMatrix(Quaternion const&, matrix3x4_t&)
002091a0 l     F .text	00000041              QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
00208dc0 l     F .text	00000141              QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
002088a0 l     F .text	0000008a              QuaternionNormalize(Quaternion&)
00208bf0 l     F .text	0000010f              QuaternionScale(Quaternion const&, float, Quaternion&)
00208550 l     F .text	00000217              QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
00208770 l     F .text	00000049              QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
001fc320 l     F .text	00000014              Q_UChar32ToUTF16Len(wchar_t)
001fc3f0 l     F .text	00000042              Q_UChar32ToUTF16(wchar_t, unsigned short*)
001fc2f0 l     F .text	00000030              Q_UChar32ToUTF8Len(wchar_t)
001fc340 l     F .text	000000a7              Q_UChar32ToUTF8(wchar_t, char*)
0031a360 l     O .bss	00000024              quit
001fc910 l     F .text	00000049              Q_UnicodeAdvance(char*, int)
001fc960 l     F .text	0000004b              Q_UnicodeAdvance(unsigned short*, int)
001fc9b0 l     F .text	00000020              Q_UnicodeAdvance(wchar_t*, int)
001fc850 l     F .text	00000047              Q_UnicodeLength(char const*)
001fc8a0 l     F .text	00000049              Q_UnicodeLength(unsigned short const*)
001fc8f0 l     F .text	0000001c              Q_UnicodeLength(wchar_t const*)
001feec0 l     F .text	000001dd              Q_UnicodeRepair(char*, EStringConvertErrorPolicy)
001ff0a0 l     F .text	000001f7              Q_UnicodeRepair(unsigned short*, EStringConvertErrorPolicy)
001ff2a0 l     F .text	00000019              Q_UnicodeRepair(wchar_t*, EStringConvertErrorPolicy)
001fc6f0 l     F .text	00000065              Q_UnicodeValidate(char const*)
001fc760 l     F .text	0000005a              Q_UnicodeValidate(unsigned short const*)
001fc7c0 l     F .text	00000081              Q_UnicodeValidate(wchar_t const*)
001f2630 l     F .text	00000030              Q_URLDecode(char*, int, char const*, int)
001f24b0 l     F .text	00000145              Q_URLDecodeInternal(char*, int, char const*, int, bool)
001f2690 l     F .text	00000030              Q_URLDecodeRaw(char*, int, char const*, int)
001f2600 l     F .text	00000030              Q_URLEncode(char*, int, char const*, int)
001f23b0 l     F .text	000000f6              Q_URLEncodeInternal(char*, int, char const*, int, bool)
001f2660 l     F .text	00000030              Q_URLEncodeRaw(char*, int, char const*, int)
001fe5a0 l     F .text	00000319              Q_UTF16CharsToUTF32(unsigned short const*, int, wchar_t*, int, EStringConvertErrorPolicy)
001fe260 l     F .text	0000033d              Q_UTF16CharsToUTF8(unsigned short const*, int, char*, int, EStringConvertErrorPolicy)
001fc600 l     F .text	000000e8              Q_UTF16ToUChar32(unsigned short const*, wchar_t&, bool&)
001fd310 l     F .text	000002be              Q_UTF16ToUTF32(unsigned short const*, wchar_t*, int, EStringConvertErrorPolicy)
001fcff0 l     F .text	00000319              Q_UTF16ToUTF8(unsigned short const*, char*, int, EStringConvertErrorPolicy)
001febb0 l     F .text	0000030e              Q_UTF32CharsToUTF16(wchar_t const*, int, unsigned short*, int, EStringConvertErrorPolicy)
001fe8c0 l     F .text	000002e4              Q_UTF32CharsToUTF8(wchar_t const*, int, char*, int, EStringConvertErrorPolicy)
001fd8b0 l     F .text	00000317              Q_UTF32ToUTF16(wchar_t const*, unsigned short*, int, EStringConvertErrorPolicy)
001fdbd0 l     F .text	00000018              Q_UTF32ToUTF32(wchar_t const*, wchar_t*, int, EStringConvertErrorPolicy)
001fd5d0 l     F .text	000002d3              Q_UTF32ToUTF8(wchar_t const*, char*, int, EStringConvertErrorPolicy)
001fdbf0 l     F .text	0000035e              Q_UTF8CharsToUTF16(char const*, int, unsigned short*, int, EStringConvertErrorPolicy)
001fdf50 l     F .text	00000310              Q_UTF8CharsToUTF32(char const*, int, wchar_t*, int, EStringConvertErrorPolicy)
001fc440 l     F .text	000001b8              Q_UTF8ToUChar32(char const*, wchar_t&, bool&)
001fc9d0 l     F .text	0000035d              Q_UTF8ToUTF16(char const*, unsigned short*, int, EStringConvertErrorPolicy)
001fcd30 l     F .text	000002bc              Q_UTF8ToUTF32(char const*, wchar_t*, int, EStringConvertErrorPolicy)
00136d40 l     F .text	00000079              r_3dnow(CCommand const&)
0031bc40 l     O .bss	00000024              r_3dnow_command
0031d180 l     O .bss	00000048              r_ambientboost
0031d2a0 l     O .bss	00000048              r_ambientfactor
0031d240 l     O .bss	00000048              r_ambientfraction
0031d1e0 l     O .bss	00000048              r_ambientmin
0008d0e0 l     F .text	0000001c              rand
0020ea00 l     F .text	0000008d              RandomVectorInUnitCircle(Vector2D*)
0020e8f0 l     F .text	00000110              RandomVectorInUnitSphere(Vector*)
0020b3c0 l     F .text	00000166              RangeCompressor(float, float, float, float)
0009e1c0 l     F .text	000008c7              RayHasFullyContainedIntersectionWithQuad(Ray_t const&, Vector const&, float, Vector const&, Vector const&, float, Vector const&, float)
003268e0 l     O .bss	00000048              r_colorstaticprops
00138f50 l     F .text	00000086              R_ComputeLightingOrigin(IClientRenderable*, studiohdr_t*, matrix3x4_t const&, Vector&)
00357d80 l     O .bss	00000048              rcon_password
001b8160 l     F .text	00000030              RconPasswordChanged_f(IConVar*, char const*, float)
001b8090 l     F .text	0000000a              RCONServer()
0020e1c0 l     F .text	000000a4              R_CullBoxSkipNear(Vector const&, Vector const&, Frustum_t const&)
0020e100 l     F .text	000000bc              R_CullBox(Vector const&, Vector const&, Frustum_t const&)
0031c4e0 l     O .bss	00000048              r_debugrandomstaticlighting
000f14f0 l     F .text	000003a9              R_DecalComputeBasis(Vector const&, Vector const*, Vector*)
00325c60 l     O .bss	00000048              r_decal_cover_count
0018e9b0 l     F .text	0000009d              R_DecalGetMaterialAndSize(int, IMaterial*&, float&, float&)
00325cc0 l     O .bss	00000048              r_decal_overlap_area
00325d20 l     O .bss	00000048              r_decal_overlap_count
0031dfa0 l     O .bss	00000048              r_decals
0031d020 l     O .bss	00000048              r_decalstaticprops
000f1ad0 l     F .text	0000008c              R_DecalVertsClip(CDecalVert*, decal_t*, msurface2_t*, IMaterial*)
00316a00 l     O .bss	00000048              r_DispBuildable
00315720 l     O .bss	00000048              r_DispDrawAxes
00316a60 l     O .bss	00000048              r_DispWalkable
000f0830 l     F .text	00000b78              R_DoDecalSHClip(CDecalVert*, CDecalVert*, decal_t*, int, Vector const&)
003260a0 l     O .bss	00000048              r_drawbatchdecals
0031da00 l     O .bss	00000048              r_drawbrushmodels
00326040 l     O .bss	00000048              r_drawdecals
00316ac0 l     O .bss	00000048              r_DrawDisp
0031cac0 l     O .bss	00000048              r_drawentities
00317e80 l     O .bss	00000048              r_drawfuncdetail
00317dc0 l     O .bss	00000048              r_drawleaf
0031d360 l     O .bss	00000048              r_drawlightcache
003266e0 l     O .bss	00000048              r_drawmodeldecals
0031c600 l     O .bss	00000048              r_drawmodellightorigin
0031c6c0 l     O .bss	00000048              r_drawmodelstatsoverlay
0031c660 l     O .bss	00000048              r_drawmodelstatsoverlaydistance
0031d420 l     O .bss	00000048              r_drawmodelstatsoverlaymax
0031d3c0 l     O .bss	00000048              r_drawmodelstatsoverlaymin
00326880 l     O .bss	00000048              r_DrawSpecificStaticProp
00326820 l     O .bss	00000048              r_drawstaticprops
00317d00 l     O .bss	00000048              r_drawtranslucentworld
00317e20 l     O .bss	00000048              r_drawworld
00325f60 l     O .bss	00000048              r_dscale_basefov
00325f00 l     O .bss	00000048              r_dscale_fardist
00325ea0 l     O .bss	00000048              r_dscale_farscale
00325e40 l     O .bss	00000048              r_dscale_neardist
00325de0 l     O .bss	00000048              r_dscale_nearscale
0031de20 l     O .bss	00000048              r_dynamic
000dbb80 l     F .text	0000025a              ReadCheatCommandsFromFile(char*)
000c07a0 l     F .text	0000002a              ReadDWord(_IO_FILE*)
0022a5c2 l     F .text	000000ee              read_encoded_value
0022c36a l     F .text	000000a9              read_encoded_value_with_base
000b5990 l     F .text	00000030              ReadFile(void*, void*, unsigned int, unsigned int*, void*)
000aac20 l     F .text	00000164              ReadKeyValuesFile(char const*)
0022a578 l     F .text	0000004a              read_sleb128
0022c164 l     F .text	0000004a              read_sleb128
0022a548 l     F .text	00000030              read_uleb128
0022c134 l     F .text	00000030              read_uleb128
000c07d0 l     F .text	0000013a              ReadWaveFile(char const*, char*&, int&, int&, int&, int&)
00319340 l     O .bss	00000008              realtime
0031a2a0 l     O .bss	00000024              recompute_speed
000a7180 l     F .text	0000020b              RecvPropArray3(char const*, int, int, int, RecvProp, void (*)(RecvProp const*, void**, void*, int))
000a7120 l     F .text	0000005c              RecvPropDataTable(char const*, int, int, RecvTable*, void (*)(RecvProp const*, void**, void*, int))
000a6f00 l     F .text	0000005d              RecvPropFloat(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
000a7020 l     F .text	0000008e              RecvPropInt(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
000a6e00 l     F .text	0000005f              RecvProp::RecvProp()
000a6e00 l     F .text	0000005f              RecvProp::RecvProp()
000a70b0 l     F .text	00000063              RecvPropString(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
000a87c0 l     F .text	000004dc              RecvPropUtlVector(char const*, int, int, void (*)(void*, int, int), void (*)(void*, int, int), int, RecvProp)
000a6f60 l     F .text	0000005d              RecvPropVector(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
000a6fc0 l     F .text	0000005d              RecvPropVectorXY(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
000a6d60 l     F .text	00000010              RecvProxy_FloatToFloat(CRecvProxyData const*, void*, void*)
000a6da0 l     F .text	00000011              RecvProxy_Int32ToInt16(CRecvProxyData const*, void*, void*)
000a6dc0 l     F .text	00000010              RecvProxy_Int32ToInt32(CRecvProxyData const*, void*, void*)
000a6d90 l     F .text	00000010              RecvProxy_Int32ToInt8(CRecvProxyData const*, void*, void*)
000a7410 l     F .text	00000022              RecvProxy_QuaternionToQuaternion(CRecvProxyData const*, void*, void*)
000a7440 l     F .text	00000057              RecvProxy_StringToString(CRecvProxyData const*, void*, void*)
000a8700 l     F .text	00000041              RecvProxy_UtlVectorElement(CRecvProxyData const*, void*, void*)
000a8750 l     F .text	00000032              RecvProxy_UtlVectorElement_DataTable(RecvProp const*, void**, void*, int)
000a86d0 l     F .text	00000023              RecvProxy_UtlVectorLength(CRecvProxyData const*, void*, void*)
000a6d70 l     F .text	0000001c              RecvProxy_VectorToVector(CRecvProxyData const*, void*, void*)
000a73f0 l     F .text	00000016              RecvProxy_VectorXYToVectorXY(CRecvProxyData const*, void*, void*)
000a6ed0 l     F .text	00000028              RecvTable::Construct(RecvProp*, int, char const*)
0010be90 l     F .text	00000040              RecvTable_CopyEncoding(RecvTable*, bf_read*, bf_write*, int)
0010cac0 l     F .text	000001ca              RecvTable_CreateDecoders(CStandardSendProxies const*, bool, bool*)
0010af80 l     F .text	00000305              RecvTable_Decode(RecvTable*, void*, bf_read*, int, bool)
0010b290 l     F .text	0000015d              RecvTable_DecodeZeros(RecvTable*, void*, int)
0010a9e0 l     F .text	000000ab              RecvTable_FreeSendTable(SendTable*)
0010c500 l     F .text	000000c9              RecvTable_Init(RecvTable**, int)
0010bed0 l     F .text	00000623              RecvTable_Init(RecvTable**, int)::CPropVisitor::Visit_R(RecvTable*)
0010b3f0 l     F .text	00000a91              RecvTable_MergeDeltas(RecvTable*, bf_read*, bf_read*, bf_write*, int, int*, bool)
0010aa90 l     F .text	00000485              RecvTable_ReadInfos(bf_read*, int)
0010af20 l     F .text	00000058              RecvTable_RecvClassInfos(bf_read*, bool, int)
000a6ec0 l     F .text	00000005              RecvTable::~RecvTable()
000a6ec0 l     F .text	00000005              RecvTable::~RecvTable()
000a6e60 l     F .text	0000002b              RecvTable::RecvTable()
000a6e60 l     F .text	0000002b              RecvTable::RecvTable()
000a6e90 l     F .text	00000028              RecvTable::RecvTable(RecvProp*, int, char const*)
000a6e90 l     F .text	00000028              RecvTable::RecvTable(RecvProp*, int, char const*)
0010c5d0 l     F .text	0000017b              RecvTable_Term(bool)
0010a3b0 l     F .text	000003d8              RecvTable_Term(bool)::CPropVisitor::Visit_R(RecvTable*)
000dd8e0 l     F .text	00000005              RefreshScreenIfNecessary()
0022d34a l     F .text	00000035              __register_frame
0022d330 l     F .text	0000001a              __register_frame_info
0022d2a2 l     F .text	0000008e              __register_frame_info_bases
0022d408 l     F .text	0000001a              __register_frame_info_table
0022d37f l     F .text	00000089              __register_frame_info_table_bases
0022d422 l     F .text	0000002c              __register_frame_table
001d0a50 l     F .text	00000061              RegisterVProfDataListener(unsigned int)
002c6728 l     O .data	00000004              registry
000042cc l    d  .rel.dyn	00000000              .rel.dyn
000acaa0 l     F .text	0000002e              ReleaseInstancedRegistry(IRegistry*)
00144510 l     F .text	0000000c              ReleaseMaterialSystemObjects()
0012f670 l     F .text	00000130              reload(CCommand const&)
0031a720 l     O .bss	00000024              reload_command
0006c00c l    d  .rel.plt	00000000              .rel.plt
001a4500 l     F .text	00000597              removeid(CCommand const&)
00327700 l     O .bss	00000024              removeid_command
001a4070 l     F .text	00000319              removeip(CCommand const&)
00327600 l     O .bss	00000024              removeip_command
001d0160 l     F .text	00000138              RemoveVProfDataListener(unsigned int)
00218420 l     F .text	00000c12              RenderAxes(matrix3x4_t const&, float, bool)
00217a60 l     F .text	000009b6              RenderAxes(Vector const&, float, bool)
002179f0 l     F .text	0000006f              RenderBox(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool, bool)
00216ea0 l     F .text	00000b46              RenderBox(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool)
00219040 l     F .text	0000074d              RenderLine(Vector const&, Vector const&, Color, bool)
0021a940 l     F .text	0000092d              RenderQuad(IMaterial*, float, float, float, float, float, float, float, float, float, Color const&)
00216570 l     F .text	00000067              RenderSphere(Vector const&, float, int, int, Color, bool)
00215aa0 l     F .text	00000ac2              RenderSphere(Vector const&, float, int, int, Color, IMaterial*)
0021a0d0 l     F .text	00000060              RenderTriangle(Vector const&, Vector const&, Vector const&, Color, bool)
00219790 l     F .text	00000937              RenderTriangle(Vector const&, Vector const&, Vector const&, Color, IMaterial*)
002165e0 l     F .text	000008be              RenderWireframeBox(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool)
002150c0 l     F .text	000009dd              RenderWireframeSphere(Vector const&, float, int, int, Color, bool)
0021a130 l     F .text	00000804              RenderWireframeSweptBox(Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool)
0031ce80 l     O .bss	00000048              r_entity
00325a20 l     O .bss	00000004              replay
00325aa0 l     O .bss	00000048              replay_debug
0018e300 l     F .text	00000042              Replay_IsSupportedModAndPlatform()
003259d0 l     O .bss	00000004              replay_record_voice
0018e150 l     F .text	00000166              ReplaySystem_Init(bool)
0018e2c0 l     F .text	0000003e              ReplaySystem_Shutdown()
000dba00 l     F .text	0000000f              ResetKeyLogging()
001cfbd0 l     F .text	0000001c              ResetVProfExport(IVProfExport*)
0013def0 l     F .text	00000047              ReslistLogLessFunc(CUtlString const&, CUtlString const&)
0009b830 l     F .text	00000269              ResolveQuadratic(double, double, Vector, Vector, Vector, Vector, Vector, Vector, int, double&, double&)
0012c810 l     F .text	00000009              _restart(CCommand const&)
0012fb00 l     F .text	000000d0              restart(CCommand const&)
0031a620 l     O .bss	00000024              _restart_command
0031a6e0 l     O .bss	00000024              restart_command
0013b630 l     F .text	00000005              RestoreAllStaticPropColorData()
00144520 l     F .text	00000095              RestoreMaterialSystemObjects(int)
0031cd60 l     O .bss	00000048              r_eyeglintlodpixels
0031c760 l     O .bss	00000048              r_eyemove
0031cb80 l     O .bss	00000048              r_eyes
0031c7c0 l     O .bss	00000048              r_eyeshift_x
0031c820 l     O .bss	00000048              r_eyeshift_y
0031c880 l     O .bss	00000048              r_eyeshift_z
0031c8e0 l     O .bss	00000048              r_eyesize
00317f40 l     O .bss	00000048              r_fastzreject
00317fa0 l     O .bss	00000048              r_fastzrejectdisp
0031d940 l     O .bss	00000048              r_flashlightdepthtexture
0031cb20 l     O .bss	00000048              r_flex
0031d080 l     O .bss	00000024              r_flushlod
002c72b0 l     O .data	00000004              r_framecount
0020e5f0 l     F .text	000000d5              RGBtoHSV(Vector const&, Vector&)
0011a9e0 l     F .text	0000000b              R_GetBrushModelPlaneCount(model_t const*)
0011a9f0 l     F .text	00000093              R_GetBrushModelPlane(model_t const*, int, Vector*)
002d5360 l     O .bss	00000080              rgpparseword
0031ee80 l     O .bss	00000048              r_hunkalloclightmaps
00138c40 l     F .text	00000005              R_InitStudio()
0031d0c0 l     O .bss	00000048              r_itemblinkmax
0031d120 l     O .bss	00000048              r_itemblinkrate
0031cf60 l     O .bss	00000048              r_lightaverage
0031d300 l     O .bss	00000048              r_lightcachemodel
0031cfc0 l     O .bss	00000048              r_lightinterp
0031dee0 l     O .bss	00000048              r_lightmap
0031de80 l     O .bss	00000048              r_lightstyle
00322700 l     O .bss	00000048              r_lockpvs
0031c5a0 l     O .bss	00000048              r_lod
0013bb80 l     F .text	00000009              r_lod_f(IConVar*, char const*, float)
0031cc40 l     O .bss	00000048              r_maxmodeldecal
0031cca0 l     O .bss	00000048              r_modelwireframedecal
0031c9a0 l     O .bss	00000048              r_nohw
0031e000 l     O .bss	00000048              r_norefresh
0031ca00 l     O .bss	00000048              r_nosw
00322760 l     O .bss	00000048              r_novis
00323d60 l     O .bss	00000048              r_occludeemaxarea
00323dc0 l     O .bss	00000048              r_occluderminarea
00323ee0 l     O .bss	00000048              r_occludermincount
00323e20 l     O .bss	00000048              r_occlusion
00324e40 l     O .bss	00000048              r_occlusionspew
0022d7e0 l    d  .rodata	00000000              .rodata
0020b830 l     F .text	00000176              RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0020cbb0 l     F .text	0000008a              RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
0020cc40 l     F .text	000000a1              RotationDelta(QAngle const&, QAngle const&, QAngle*)
00325060 l     O .bss	00000048              r_overlayfadeenable
00325120 l     O .bss	00000048              r_overlayfademax
003250c0 l     O .bss	00000048              r_overlayfademin
00325200 l     O .bss	00000048              r_overlaywireframe
003265e0 l     O .bss	00000048              r_partition_level
00326100 l     O .bss	00000024              r_printdecalinfo
0018e350 l     F .text	00000080              r_printdecalinfo_f()
0031c480 l     O .bss	00000048              r_proplightingfromdisk
0031cee0 l     O .bss	00000048              r_proplightingpooling
00377f40 l     O .bss	00000048              rpt_vprof_time
00325b80 l     O .bss	00000048              r_queued_decals
00139470 l     F .text	0000004f              R_RemoveAllDecalsFromAllModels()
003251a0 l     O .bss	00000048              r_renderoverlayfragment
0031c540 l     O .bss	00000048              r_rootlod
000f1a40 l     F .text	00000088              R_SetupDecalClip(CDecalVert*&, decal_t*, Vector&, IMaterial*, Vector*, float*)
000f18a0 l     F .text	0000019b              R_SetupDecalTextureSpaceBasis(decal_t*, Vector&, IMaterial*, Vector*, float*)
000f13b0 l     F .text	00000134              R_SetupDecalVertsForMSurface(decal_t*, msurface2_t*, Vector*, CDecalVert*)
0031d9a0 l     O .bss	00000048              r_shadowrendertotexture
0031cd00 l     O .bss	00000048              r_showenvcubemap
0031cbe0 l     O .bss	00000048              r_skin
00325be0 l     O .bss	00000048              r_spray_lifetime
00205360 l     F .text	00000035              _rsqrtf(float)
00136dc0 l     F .text	00000079              r_sse2(CCommand const&)
0031bc00 l     O .bss	00000024              r_sse2_command
00326740 l     O .bss	00000048              r_staticpropinfo
0031c420 l     O .bss	00000048              r_staticprop_lod
00317be0 l     O .bss	00000004              r_surfacevisframe
0031ca60 l     O .bss	00000048              r_teeth
0031eee0 l     O .bss	00000048              r_unloadlightmaps
00320440 l     O .bss	00000004              r_visframecount
00323e80 l     O .bss	00000048              r_visocclusion
0031d8e0 l     O .bss	00000048              r_waterforceexpensive
0031d880 l     O .bss	00000048              r_waterforcereflectentities
00325c40 l     O .bss	00000014              s_aDecalPool
000bb410 l     F .text	00000074              SafeUnzipMemory(void const*, int, void*, int)
00319804 l     O .bss	0000001c              s_AudioState
00139910 l     F .text	00000078              SavedModelInfo_Compare_f(void const*, void const*)
0038af95 l     O .bss	00000001              s_b3DNowEnabled
002c7a70 l     O .data	0000000b              s_BackSlashMap
002c7265 l     O .data	00000001              s_bAllow3DNow
002c7264 l     O .data	00000001              s_bAllowSSE2
0037b33c l     O .bss	00000001              s_bBuiltBreakSet
0031e8c0 l     O .bss	00000001              s_bConfigLightingChanged
0037d9f4 l     O .bss	00000001              s_bConnected
0031c1d9 l     O .bss	00000001              s_bDoneTrapping
00357130 l     O .bss	00000001              s_bExitWhenEmpty
003570b4 l     O .bss	00000001              s_bForceSend
003751a8 l     O .bss	00000001              s_bFPSMaxDrivenByPowerSavings
0035d848 l     O .bss	00000001              s_bIsDedicated
0038b0a0 l     O .bss	00000001              s_bMaterialsInitialized
0038af8c l     O .bss	00000001              s_bMathlibInitialized
0038af94 l     O .bss	00000001              s_bMMXEnabled
0037b340 l     O .bss	00000100              s_BreakSet
0037b334 l     O .bss	00000001              s_bRegistered
0037d754 l     O .bss	00000001              s_bShowDiag
0038af97 l     O .bss	00000001              s_bSSE2Enabled
0038af96 l     O .bss	00000001              s_bSSEEnabled
0031c1d8 l     O .bss	00000001              s_bTrapMode
002d3280 l     O .bss	00000001              s_bUseVProjectBinDir
002c888c l     O .bss	00000008              s_CacheMutex
000c0bd0 l     F .text	00000028              ScanForwardUntil(char*, char)
00228a80 l     F .text	0000011d              scan_tree
000bc190 l     F .text	00000130              scan_tree(TState&, ct_data*, int)
002da6e0 l     O .bss	00000014              s_CheatCodeCommands
0024cda0 l     O .rodata	00000020              s_clcommands
002c2720 l     O .data	00002000              s_ClientElementNames
0030a940 l     O .bss	00002554              s_CommandBuffer
0030ce94 l     O .bss	00000008              s_CommandBufferMutex
002d5de0 l     O .bss	00000040              s_connectRateChecker
000dd990 l     F .text	00000005              SCR_EndLoadingPlaque()
000dd980 l     F .text	00000005              SCR_UpdateScreen()
002c6dc0 l     O .data	00000004              s_CvarQuery
00317544 l     O .bss	00000004              s_debug_bits_start
00317540 l     O .bss	00000001              s_debug_info_shown
00325fc0 l     O .bss	00000064              s_DecalSurfaces
002c7a44 l     O .data	00000004              s_DefaultAccessor
00316c10 l     O .bss	0000001c              s_DispDecalFragments
00316c30 l     O .bss	0000001c              s_DispDecals
00316c70 l     O .bss	0000001c              s_DispShadowDecals
00316c50 l     O .bss	0000001c              s_DispShadowFragments
0022cda4 l     F .text	000004fe              search_object
001cbc10 l     F .text	0000005d              SeedRandomNumberGenerator(bool)
0038b3e4 l     O .bss	00000004              seen_objects
002c4720 l     O .data	00002000              s_ElementNames
0037b440 l     O .bss	00000048              s_EmptyConVar
000bcbd0 l     F .text	000001a5              send_all_trees(TState&, int, int, int)
000bc6c0 l     F .text	000000f2              send_bits(TState&, int, int)
001b5b00 l     F .text	00000074              SendCvarValueQueryToClient(IClient*, char const*, bool)
000a7cb0 l     F .text	000000a9              SendPropAngle(char const*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
000a7fb0 l     F .text	0000033a              SendPropArray3(char const*, int, int, int, SendProp, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
000a82f0 l     F .text	000000c5              SendPropDataTable(char const*, int, SendTable*, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
000a8430 l     F .text	00000071              SendPropExclude(char const*, char const*)
000a7990 l     F .text	00000174              SendPropFloat(char const*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
000a8530 l     F .text	00000019              SendProp::GetNumArrayLengthBits() const
000a7e10 l     F .text	00000129              SendPropInt(char const*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
000a7d60 l     F .text	000000a9              SendPropQAngles(char const*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
000a7580 l     F .text	0000000e              SendProp::~SendProp()
000a7580 l     F .text	0000000e              SendProp::~SendProp()
000a7590 l     F .text	00000012              SendProp::~SendProp()
000a84b0 l     F .text	00000071              SendProp::SendProp()
000a84b0 l     F .text	00000071              SendProp::SendProp()
000a7f40 l     F .text	0000006f              SendPropString(char const*, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
000ffc50 l     F .text	0000005a              Sendprop_UsingDebugWatch()
000a8dd0 l     F .text	000005e0              SendPropUtlVector(char*, int, int, void (*)(void*, int, int), int, SendProp, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
000a7b10 l     F .text	000000c2              SendPropVector(char const*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
000a7be0 l     F .text	000000c2              SendPropVectorXY(char const*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
000a7720 l     F .text	00000030              SendProxy_AngleToFloat(SendProp const*, void const*, void const*, DVariant*, int, int)
000a7560 l     F .text	0000000a              SendProxy_DataTablePtrToDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
000a7550 l     F .text	00000008              SendProxy_DataTableToDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
000a7570 l     F .text	00000005              SendProxy_Empty(SendProp const*, void const*, void const*, DVariant*, int, int)
000a74c0 l     F .text	0000000f              SendProxy_FloatToFloat(SendProp const*, void const*, void const*, DVariant*, int, int)
000a7500 l     F .text	00000010              SendProxy_Int16ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
000a7510 l     F .text	0000000f              SendProxy_Int32ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
000a74f0 l     F .text	00000010              SendProxy_Int8ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
000a8d10 l     F .text	00000028              SendProxy_LengthTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
000a7750 l     F .text	00000075              SendProxy_QAngles(SendProp const*, void const*, void const*, DVariant*, int, int)
000a75b0 l     F .text	000000a2              SendProxy_SendLocalDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
000a77f0 l     F .text	0000000d              SendProxy_StringToString(SendProp const*, void const*, void const*, DVariant*, int, int)
000a7530 l     F .text	00000010              SendProxy_UInt16ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
000a7540 l     F .text	0000000f              SendProxy_UInt32ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
000a7520 l     F .text	00000010              SendProxy_UInt8ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
000a8ca0 l     F .text	0000003e              SendProxy_UtlVectorElement_DataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
000a8d40 l     F .text	00000088              SendProxy_UtlVectorElement(SendProp const*, void const*, void const*, DVariant*, int, int)
000a8ce0 l     F .text	00000025              SendProxy_UtlVectorLength(SendProp const*, void const*, void const*, DVariant*, int, int)
000a74d0 l     F .text	0000001b              SendProxy_VectorToVector(SendProp const*, void const*, void const*, DVariant*, int, int)
000a77d0 l     F .text	00000015              SendProxy_VectorXYToVectorXY(SendProp const*, void const*, void const*, DVariant*, int, int)
0016d850 l     F .text	0000000d              SendQueue_t::~SendQueue_t()
0016d850 l     F .text	0000000d              SendQueue_t::~SendQueue_t()
00111570 l     F .text	00000010              SendTabe_GetTable(int)
00100230 l     F .text	00000214              SendTable_BuildHierarchy(CSendNode*, SendTable const*, CBuildHierarchyStruct*)
00100060 l     F .text	000001cd              SendTable_BuildHierarchy_IterateProps(CSendNode*, SendTable const*, CBuildHierarchyStruct*, SendProp const**, int&)
001100c0 l     F .text	00000a86              SendTable_CalcDelta(SendTable const*, void const*, int, void const*, int, int*, int, int)
00317548 l     O .bss	0000000c              SendTable_CalcDelta(SendTable const*, void const*, int, void const*, int, int*, int, int)::tm_fmt
0010ee30 l     F .text	0000006a              SendTable_CalcNextVectorElems(SendTable*)
001115a0 l     F .text	0000000a              SendTable_CheckIntegrity(SendTable*, void const*, int)
00111510 l     F .text	00000051              SendTable_ComputeCRC()
000a85c0 l     F .text	00000024              SendTable::Construct(SendProp*, int, char const*)
001110e0 l     F .text	000001ba              SendTable_CRCTable(unsigned int&, SendTable*)
0010f1d0 l     F .text	00000208              SendTable_CullPropsFromProxies(SendTable const*, int const*, int, int, CSendProxyRecipients const*, int, CSendProxyRecipients const*, int, int*, int)
0010f3e0 l     F .text	000006d5              SendTable_Encode(SendTable const*, void const*, bf_write*, int, CUtlMemory<CSendProxyRecipients, int>*, bool)
00317504 l     O .bss	0000000c              SendTable_Encode(SendTable const*, void const*, bf_write*, int, CUtlMemory<CSendProxyRecipients, int>*, bool)::tm_fmt
00100450 l     F .text	0000010e              SendTable_GenerateProxyPaths(CSendTablePrecalc*, int)
00111590 l     F .text	0000000a              SendTable_GetCRC()
00111580 l     F .text	0000000a              SendTable_GetNum()
001110a0 l     F .text	00000035              SendTable_GetNumFlatProps(SendTable*)
000ff4a0 l     F .text	000000f7              SendTable_GetPropsExcluded(SendTable const*, ExcludeProp*, int&, int) [clone .isra.7] [clone .constprop.101]
00111620 l     F .text	00000286              SendTable_Init(SendTable**, int)
001112a0 l     F .text	00000266              SendTable_PrintStats()
000a85b0 l     F .text	00000005              SendTable::~SendTable()
000a85b0 l     F .text	00000005              SendTable::~SendTable()
000a8550 l     F .text	00000027              SendTable::SendTable()
000a8550 l     F .text	00000027              SendTable::SendTable()
000a8580 l     F .text	00000024              SendTable::SendTable(SendProp*, int, char const*)
000a8580 l     F .text	00000024              SendTable::SendTable(SendProp*, int, char const*)
000ff8b0 l     F .text	000000bc              SendTable_SortByPriority(CBuildHierarchyStruct*)
001115b0 l     F .text	0000006a              SendTable_Term()
00110b50 l     F .text	000000a6              SendTable_WriteAllDeltaProps(SendTable const*, void const*, int, void const*, int, int, bf_write*)
00110c00 l     F .text	00000497              SendTable_WriteInfos(SendTable*, bf_write*)
0010fac0 l     F .text	000005fe              SendTable_WritePropList(SendTable const*, void const*, int, bf_write*, int, int const*, int)
00228ba0 l     F .text	000005ff              send_tree
000bc9a0 l     F .text	00000230              send_tree(TState&, ct_data*, int)
002c7780 l     O .data	00000004              s_EngineRandomStream
002c6f64 l     O .data	00000004              s_EngineReplay
003176c0 l     O .bss	00000004              s_EngineSoundServer
00317770 l     O .bss	00000014              s_EngineTraceServer
000c0b70 l     F .text	0000002d              sentencegroup_t::GetSymbol(char const*)
000c0af0 l     F .text	00000026              sentencegroup_t::GroupName() const
000c0b50 l     F .text	00000014              sentencegroup_t::GroupNameSymbol() const
000c0b20 l     F .text	00000030              sentencegroup_t::SetGroupName(char const*)
002d5220 l     O .bss	00000038              sentencegroup_t::s_SymbolTable
001adf10 l     F .text	00000022              ServerDLL_Load(bool)
001adf40 l     F .text	00000009              ServerDLL_Unload()
00106660 l     F .text	00000042              ServerDTI_AddEntityEncodeEvent(SendTable*, float)
00105e60 l     F .text	000007f8              ServerDTI_Flush()
00106840 l     F .text	0000010d              ServerDTI_HookTable(SendTable*)
001066b0 l     F .text	000000a4              _ServerDTI_HookTimer(SendTable const*, ServerDTITimerType, CCycleCount const&)
00105e30 l     F .text	0000002f              ServerDTI_Init(char const*)
00106760 l     F .text	0000002e              _ServerDTI_RegisterNetworkStateChange(SendTable*, bool)
00106790 l     F .text	000000a9              ServerDTI_Term()
0035d2c4 l     O .bss	00000004              serverGameClients
0035d2b0 l     O .bss	00000004              serverGameDirector
0035d2d4 l     O .bss	00000004              serverGameDLL
0035d2c8 l     O .bss	00000004              serverGameEnts
0035d2ac l     O .bss	00000004              serverGameTags
000d7d20 l     F .text	00000049              ServerNotifyVarChangeCallback(IConVar*, char const*, float)
001da410 l     F .text	0000000d              SetBitBufErrorHandler(void (*)(BitBufErrorType, char const*))
000ff3c0 l     F .text	00000070              SetDataTableProxyIndices_R(CSendTablePrecalc*, CSendNode*, CBuildHierarchyStruct*)
0007c148 l     F .text	000000b8              set_fast_math
000bc600 l     F .text	00000069              set_file_type(TState&)
00206f70 l     F .text	0000007d              SetIdentityMatrix(matrix3x4_t&)
000d7c20 l     F .text	000000f8              SetMasterServerKeyValue(ISteamGameServer*, IConVar*)
000d0df0 l     F .text	00000005              SetNameToSteamIDName(IConVar*)
0012c700 l     F .text	00000035              setpause(CCommand const&)
0031a820 l     O .bss	00000024              setpause_command
000ff430 l     F .text	0000006a              SetRecursiveProxyIndices_R(SendTable*, CSendNode*, int&)
0013bae0 l     F .text	00000068              SetRootLOD_f(IConVar*, char const*, float)
00206ff0 l     F .text	00000036              SetScaleMatrix(float, float, float, matrix3x4_t&)
000aad90 l     F .text	000001a0              SetSteamAppUser(KeyValues*, char const*, CSteamEnvVars&)
000aa6d0 l     F .text	000000d3              SetSteamUserPassphrase(KeyValues*, CSteamEnvVars&)
000aa1d0 l     F .text	00000013              SetSuggestGameInfoDirFn(bool (*)(CFSSteamSetupInfo const*, char*, int, bool*))
000a5e60 l     F .text	000000e8              SetupAllowedVerts(CCoreDispInfo**, int)
0010a800 l     F .text	0000016c              SetupClientSendTableHierarchy()
000a55b0 l     F .text	000001c1              SetupCornerNeighbors(CCoreDispInfo*, CCoreDispInfo*, int*)
000a5f50 l     F .text	00000051              SetupDispBoxes(CCoreDispInfo**, int, CUtlVector<CDispBox, CUtlMemory<CDispBox, int> >&)
000a46b0 l     F .text	0000021b              SetupEdgeIncrements(CDispUtilsHelper*, int, int, CVertIndex&, CVertIndex&, CVertIndex&, CVertIndex&, int&, int&)
000a5260 l     F .text	000002bd              SetupEdgeNeighbors(CCoreDispInfo*, CCoreDispInfo*)
000a9ee0 l     F .text	000000a7              SetupFileSystemError(bool, FSReturnCode_t, char const*, ...)
0020f050 l     F .text	00000143              SetupMatrixAnglesInternal(float (*) [4], QAngle const&)
00210830 l     F .text	00000023              SetupMatrixAngles(QAngle const&)
0020f3f0 l     F .text	00000160              SetupMatrixAxisRot(Vector const&, float)
0020f1a0 l     F .text	00000046              SetupMatrixIdentity()
00210740 l     F .text	0000002a              SetupMatrixOrgAngles(Vector const&, QAngle const&)
0020f2b0 l     F .text	0000013b              SetupMatrixProjection(Vector const&, VPlane const&)
0020fa80 l     F .text	0000025d              SetupMatrixReflection(VPlane const&)
0020f260 l     F .text	0000004c              SetupMatrixScale(Vector const&)
0020f1f0 l     F .text	00000062              SetupMatrixTranslation(Vector const&)
001adb70 l     F .text	000001e8              SetupMaxPlayers(int)
000faa80 l     F .text	00000109              SetupMeshReaders(model_t*, int)
000a44b0 l     F .text	000000c4              SetupSpan(int, int, NeighborSpan, CVertIndex&, CVertIndex&)
00230330 l     O .rodata	00000018              s_ExtIndices
003232f0 l     O .bss	00000004              s_FakeLag
00357114 l     O .bss	00000004              s_FatBytes
00377cb0 l     O .bss	00000004              s_flIntervalStartTime
0023d6c0 l     O .rodata	00000020              s_GameEnventTypeMap
00317980 l     O .bss	0000007c              s_GameEventManager
002c6f68 l     O .data	00000004              s_GameEventManagerOld
0018fd40 l     F .text	000000be              S_GetGainFromSoundLevel(soundlevel_t, float)
0011af80 l     F .text	000000ee              Shader_Connect(bool)
0018e9a0 l     F .text	00000005              Shader_DecalDrawPoly(CDecalVert*, IMaterial*, msurface2_t*, int, decal_t*, float)
0011b070 l     F .text	00000005              Shader_Disconnect()
000ffb70 l     F .text	000000df              ShouldWatchThisProp(SendTable const*, int, char const*)
0010eea0 l     F .text	000002ed              ShowEncodeDeltaWatchInfo(SendTable const*, SendProp const*, bf_read&, int, int)
002c6f50 l     O .data	00000004              ShowEncodeDeltaWatchInfo(SendTable const*, SendProp const*, bf_read&, int, int)::lastframe
00145100 l     F .text	0000002d              ShutdownMaterialSystem()
00215040 l     F .text	0000007d              ShutdownStandardMaterials()
001393f0 l     F .text	00000057              ShutdownStudioRender()
00145070 l     F .text	00000005              ShutdownWellKnownRenderTargets()
002065c0 l     F .text	0000002b              SignbitsForPlane(cplane_t*)
0020ea90 l     F .text	00000035              SinCos(float, float*, float*)
0038ab60 l     O .bss	00000400              SinCosTable
002c77b0 l     O .data	00000004              s_iNetSpikeValue
00319b20 l     O .bss	00000048              singlestep
0022c2d2 l     F .text	00000050              size_of_encoded_value
00318cc0 l     O .bss	00000048              skill
001c8a20 l     F .text	00000042              SkipSpace(char const*)
001c8a70 l     F .text	00000042              SkipText(char const*)
0022dc20 l     O .rodata	00000288              s_LanguageNames
002c7a64 l     O .data	00000004              s_LastFileLoadingFrom
00323060 l     O .bss	00000040              s_LoopBacks
0031ff00 l     O .bss	00000038              s_MapBuffer
0031f100 l     O .bss	00000004              s_MapFileHandle
0031f120 l     O .bss	0000040c              s_MapHeader
0031f540 l     O .bss	00000700              s_MapLumpFiles
002c6f78 l     O .data	00000004              s_MaterialProxyFactory
00230348 l     O .rodata	00000018              s_MatIndices
002c7558 l     O .data	00000004              s_MDLCacheNotify
0031cdc0 l     O .bss	00000080              s_ModelRender
002083f0 l     F .text	0000004a              SmoothCurve(float)
00208440 l     F .text	0000007e              SmoothCurve_Tweak(float, float, float)
000fc770 l     F .text	0000005c              SmoothDispSurfNormals(CCoreDispInfo**, int)
00377420 l     O .bss	000002b0              s_MsgData
002028c0 l     F .text	0000000b              snappy::ByteArraySource::Available() const
002028b0 l     F .text	0000000e              snappy::ByteArraySource::~ByteArraySource()
002028b0 l     F .text	0000000e              snappy::ByteArraySource::~ByteArraySource()
002029b0 l     F .text	00000012              snappy::ByteArraySource::~ByteArraySource()
002028d0 l     F .text	00000013              snappy::ByteArraySource::Peek(unsigned int*)
002028f0 l     F .text	00000011              snappy::ByteArraySource::Skip(unsigned int)
00258420 l     O .rodata	00000200              snappy::char_table
001fbf30 l     F .text	00000093              snappy::Compress(char const*, unsigned int, std::string*)
001fab50 l     F .text	0000039b              snappy::Compress(snappy::Source*, snappy::Sink*)
001fa350 l     F .text	000000ce              snappy::GetUncompressedLength(char const*, unsigned int, unsigned int*)
001faaa0 l     F .text	000000a1              snappy::GetUncompressedLength(snappy::Source*, unsigned int*)
001fa4c0 l     F .text	00000436              snappy::internal::CompressFragment(char const*, unsigned int, char*, unsigned short*, int)
001fa420 l     F .text	0000009b              snappy::internal::WorkingMemory::GetHashTable(unsigned int, int*)
001fbc00 l     F .text	0000029d              snappy::IsValidCompressedBuffer(char const*, unsigned int)
001fa330 l     F .text	00000018              snappy::MaxCompressedLength(unsigned int)
001fbea0 l     F .text	00000088              snappy::RawCompress(char const*, unsigned int, char*, unsigned int*)
001fbaf0 l     F .text	00000059              snappy::RawUncompress(char const*, unsigned int, char*)
001fb560 l     F .text	00000587              snappy::RawUncompress(snappy::Source*, char*)
001fb500 l     F .text	00000060              snappy::RawUncompressToIOVec(char const*, unsigned int, snappy::iovec const*, unsigned int)
001faef0 l     F .text	00000610              snappy::RawUncompressToIOVec(snappy::Source*, snappy::iovec const*, unsigned int)
002028a0 l     F .text	00000008              snappy::Sink::GetAppendBuffer(unsigned int, char*)
00202890 l     F .text	0000000e              snappy::Sink::~Sink()
00202890 l     F .text	0000000e              snappy::Sink::~Sink()
00202990 l     F .text	00000012              snappy::Sink::~Sink()
001fa900 l     F .text	00000191              snappy::SnappyDecompressor::RefillTag()
00202880 l     F .text	0000000e              snappy::Source::~Source()
00202880 l     F .text	0000000e              snappy::Source::~Source()
002029d0 l     F .text	00000012              snappy::Source::~Source()
00202930 l     F .text	0000003e              snappy::UncheckedByteArraySink::Append(char const*, unsigned int)
00202920 l     F .text	0000000b              snappy::UncheckedByteArraySink::GetAppendBuffer(unsigned int, char*)
00202910 l     F .text	0000000e              snappy::UncheckedByteArraySink::~UncheckedByteArraySink()
00202910 l     F .text	0000000e              snappy::UncheckedByteArraySink::~UncheckedByteArraySink()
00202970 l     F .text	00000012              snappy::UncheckedByteArraySink::~UncheckedByteArraySink()
001fbb50 l     F .text	000000a3              snappy::Uncompress(char const*, unsigned int, std::string*)
00258620 l     O .rodata	00000014              snappy::wordmask
0037b338 l     O .bss	00000004              s_nCVarFlag
002c7810 l     O .data	00000004              s_nDesiredFPSMax
00326340 l     O .bss	00000048              snd_foliage_db_loss
003262e0 l     O .bss	00000048              snd_gain
00326280 l     O .bss	00000048              snd_gain_max
00326220 l     O .bss	00000048              snd_gain_min
0018fa80 l     F .text	000002bf              SND_GetGainFromMult(float, float, float)
002c7a40 l     O .data	00000004              s_nDLLIdentifier
003263a0 l     O .bss	00000048              snd_refdb
00326400 l     O .bss	00000048              snd_refdist
0031a0c0 l     O .bss	00000024              snd_restart
00126600 l     F .text	00000005              Snd_Restart_f()
002d36a0 l     O .bss	00000048              snd_vox_captiontrace
002d37c0 l     O .bss	00000048              snd_vox_globaltimeout
002d3700 l     O .bss	00000048              snd_vox_sectimeout
002d3760 l     O .bss	00000048              snd_vox_seqtimeout
003231e0 l     O .bss	00000024              s_NetChannels
00322920 l     O .bss	00000024              s_NetworkStringTableClient
003229c0 l     O .bss	00000024              s_NetworkStringTableServer
002da700 l     O .bss	00000004              s_nKeyLogIndex
0031f050 l     O .bss	00000004              s_nMapLoadRecursion
0037da20 l     O .bss	00000918              s_NoEscConversion
00324e20 l     O .bss	00000004              s_nTempVertCount
002c7280 l     O .data	00000004              s_nTrapKey
002c7270 l     O .data	00000004              s_nTrapKeyUp
0018eef0 l     F .text	0000001d              SocketWouldBlock()
00207890 l     F .text	00000144              SolveInverseQuadratic(float, float, float, float, float, float, float&, float&, float&)
002079e0 l     F .text	00000689              SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
00208070 l     F .text	00000189              SolveInverseReciprocalQuadratic(float, float, float, float, float, float, float&, float&, float&)
002077d0 l     F .text	000000be              SolveQuadratic(float, float, float, float&, float&)
001cc900 l     F .text	00000012              SortClusterLessFunc(int const&, int const&)
0011acd0 l     F .text	00000011              SortInfoToLightmapPage(int)
000d3190 l     F .text	00000026              SortServerTags(char* const*, char* const*)
000a99a0 l     F .text	00000019              SortStricmp(char* const*, char* const*)
0019f120 l     F .text	000010da              SoundInfo_t::WriteDelta(SoundInfo_t*, bf_write&)
00326478 l     O .bss	0000000c              s_PartitionMax
0032646c l     O .bss	0000000c              s_PartitionMin
00191730 l     F .text	0000000a              SpatialPartition()
002c7f60 l     O .data	00000060              s_pBoxFaceIndices
002c7fc0 l     O .data	00000060              s_pBoxFaceIndicesInsideOut
002c7ad8 l     O .data	00000008              s_pConversionArrays_NoEscConversion
002c7a80 l     O .data	00000058              s_pConversionArrays_StringCharConversion
0037edd0 l     O .bss	00000004              s_pCurrentAppSystem
00249d00 l     O .rodata	00000020              s_pDeltaIndices
002c76a0 l     O .data	00000090              s_pEdges
00323580 l     O .bss	00000024              s_PendingSockets
0035d260 l     O .bss	00000048              spew_consolelog_to_debugstring
0017a480 l     F .text	00000558              SpewEdicts()
0017a170 l     F .text	00000015              SpewEdicts()::EdictSorter_t::SortEdicts(SpewEdicts()::EdictCount_t* const*, SpewEdicts()::EdictCount_t* const*)
002c7640 l     O .data	00000060              s_pFaceEdges
00357110 l     O .bss	00000004              s_pFatPVS
001cf120 l     F .text	00000010              spike(CCommand const&)
00377fe0 l     O .bss	00000024              spike_command
0031bc80 l     O .bss	00000558              s_pKeyInfo
002da720 l     O .bss	00000028              s_pKeyLog
003231b4 l     O .bss	00000018              s_pLagData
00209720 l     F .text	00000133              Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
0031f060 l     O .bss	00000004              s_pMap
002d2f8c l     O .bss	00000004              s_pNonModifiedPointerProxyHead
00249ce0 l     O .rodata	00000020              s_pSourceIndices
0037b620 l     O .bss	00001000              s_pTokenBuf
0038b0d0 l     O .bss	00000004              s_pVertexColor
0038b0e0 l     O .bss	00000004              s_pVertexColorIgnoreZ
00326640 l     O .bss	00000024              s_pVoxelColor
003776e0 l     O .bss	00000030              s_PVSInfoAllocator
0038b0b0 l     O .bss	00000004              s_pWireframe
0038b0c0 l     O .bss	00000004              s_pWireframeIgnoreZ
00205340 l     F .text	00000015              _sqrtf(float)
002d5e20 l     O .bss	00000040              s_queryRateChecker
0008d0d0 l     F .text	00000005              srand
003170c0 l     O .bss	00000020              s_Recipients
00317120 l     O .bss	00000020              s_Recipients
00317360 l     O .bss	00000020              s_Recipients
003174a0 l     O .bss	00000020              s_Recipients
00317520 l     O .bss	00000020              s_Recipients
00317620 l     O .bss	00000020              s_Recipients
002c755c l     O .data	00000004              s_ResourcePreloadModel
00204880 l     F .text	0000001a              SrgbGammaTo360Gamma(float)
00204530 l     F .text	00000082              SrgbGammaToLinear(float)
002045c0 l     F .text	00000082              SrgbLinearToGamma(float)
0031ce50 l     O .bss	00000014              s_SavedModelInfo
0020ee20 l     F .text	00000138              _SSE_cos(float)
0020ec50 l     F .text	00000042              _SSE_InvRSquared(float const*)
0020eaf0 l     F .text	0000003e              _SSE_RSqrtAccurate(float)
0020eb30 l     F .text	00000019              _SSE_RSqrtFast(float)
00357800 l     O .bss	0000001c              s_ServerPlugin
0020eca0 l     F .text	00000174              _SSE_SinCos(float, float*, float*)
0020ead0 l     F .text	00000019              _SSE_Sqrt(float)
0020ebc0 l     F .text	00000085              _SSE_VectorNormalizeFast(Vector&)
0020eb50 l     F .text	00000070              _SSE_VectorNormalize(Vector&)
002c7600 l     O .data	00000018              s_SplitPacketSequenceNumber
003267a0 l     O .bss	00000070              s_StaticPropMgr
00359180 l     O .bss	000000e4              s_Steam3Server
0022fde0 l     O .rodata	000000b0              s_SteamAppInfo
0037e340 l     O .bss	00000a18              s_StringCharConversion
0031c720 l     O .bss	00000038              s_StudioRenderConfig
0031f080 l     O .bss	00000080              s_szLoadName
0031fc40 l     O .bss	00000080              s_szMapName
00359280 l     O .bss	00003e80              s_szTempMsgBuf
001c2ad0 l     F .text	0000004f              star_memory(CCommand const&)
0035da20 l     O .bss	00000024              star_memory_command
0022d6e0 l     F .text	00000030              stat
0022d6e0 l     F .text	00000030              __stat
002c8048 l     O .data	00000014              static_bl_desc
002c8034 l     O .data	00000014              static_d_desc
0025ce80 l     O .rodata	00000078              static_dtree
002c8020 l     O .data	00000014              static_l_desc
0025cf80 l     O .rodata	00000480              static_ltree
0013b150 l     F .text	00000033              StaticPropColorMeshCallback(FileAsyncRequest_t const&, int, FSAsyncStatus_t)
0013b2e0 l     F .text	00000033              StaticPropColorTexelCallback(FileAsyncRequest_t const&, int, FSAsyncStatus_t)
00199450 l     F .text	0000000a              StaticPropMgr()
00359020 l     O .bss	00000024              stats
0012e1b0 l     F .text	000012da              status(CCommand const&)
0031b1e0 l     O .bss	000003fc              status(CCommand const&)::g_flLastTime__Limit
0031b5e8 l     O .bss	00000008              status(CCommand const&)::sv_tags
0031a660 l     O .bss	00000024              status_command
001bda90 l     F .text	0000000a              Steam3Server()
00324220 l     O .bss	00000c00              s_TempVertMemory
002c80a0 l     O .bss	00000400              s_text
00357140 l     O .bss	00000008              s_timeForceShutdown
002c6f74 l     O .data	00000004              s_ToolBSPTree
000b8e90 l     F .text	0000008d              strcmpcasenosensitive_internal(char const*, char const*)
001ef670 l     F .text	00000029              StringAfterPrefixCaseSensitive(char const*, char const*)
001ef620 l     F .text	00000045              StringAfterPrefix(char const*, char const*)
00104130 l     F .text	0000036a              String_CompareDeltas(SendProp const*, bf_read*, bf_read*)
00103230 l     F .text	000000b9              String_Decode(DecodeInfo*)
00102970 l     F .text	0000002f              String_DecodeZero(DecodeInfo*)
001032f0 l     F .text	000000ec              String_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
00102950 l     F .text	0000000a              String_GetTypeNameString()
00104070 l     F .text	000000bc              String_IsEncodedZero(SendProp const*, bf_read*)
00102960 l     F .text	00000010              String_IsZero(unsigned char const*, DVariant*, SendProp const*)
0017ada0 l     F .text	00000030              StringLessThan(char const* const&, char const* const&)
00103fd0 l     F .text	0000009f              String_SkipProp(SendProp const*, bf_read*)
000ec6e0 l     F .text	00000065              StripTabsAndReturns(char const*, char*, int) [clone .constprop.48]
001f0800 l     F .text	000000cc              StripWhitespaceWorker(int, wchar_t*, bool*, bool)
000b28c0 l     F .text	00000056              studiohdr_t::CopyAutoplaySequences(unsigned short*, int) const
000b2870 l     F .text	00000049              studiohdr_t::CountAutoplaySequences() const
000b2340 l     F .text	00000090              studiohdr_t::EntryNode(int)
000b23d0 l     F .text	00000090              studiohdr_t::ExitNode(int)
00146290 l     F .text	0000003b              studiohdr_t::FindModel(void**, char const*) const
000b2690 l     F .text	00000086              studiohdr_t::GetActivityListVersion()
00146310 l     F .text	0000002a              studiohdr_t::GetAnimBlock(int) const
000b2520 l     F .text	00000070              studiohdr_t::GetAttachmentBone(int)
00146340 l     F .text	0000002a              studiohdr_t::GetAutoplayList(unsigned short**) const
000b2460 l     F .text	0000002d              studiohdr_t::GetNumAttachments() const
000b27b0 l     F .text	00000030              studiohdr_t::GetNumIKAutoplayLocks() const
000b2210 l     F .text	0000002d              studiohdr_t::GetNumPoseParameters() const
000b2090 l     F .text	0000002d              studiohdr_t::GetNumSeq() const
000b22f0 l     F .text	00000049              studiohdr_t::GetSharedPoseParameter(int, int) const
000b2660 l     F .text	00000030              studiohdr_t::GetTransition(int, int) const
001462d0 l     F .text	00000038              studiohdr_t::GetVirtualModel() const
000b2170 l     F .text	00000044              studiohdr_t::iRelativeAnim(int, int) const
000b21c0 l     F .text	00000044              studiohdr_t::iRelativeSeq(int, int) const
000b1a30 l     F .text	00000093              studiohdr_t::pAnimdesc(int) const
000b2490 l     F .text	00000085              studiohdr_t::pAttachment(int) const
000b27e0 l     F .text	0000008d              studiohdr_t::pIKAutoplayLock(int)
000b2240 l     F .text	000000ab              studiohdr_t::pPoseParameter(int)
000b20c0 l     F .text	000000aa              studiohdr_t::pSeqdesc(int) const
000b25f0 l     F .text	00000066              studiohdr_t::pszNodeName(int)
000b2980 l     F .text	0000003b              studiohdr_t::RemapAnimBone(int, int) const
000b2920 l     F .text	00000054              studiohdr_t::RemapSeqBone(int, int) const
000b2060 l     F .text	0000002f              studiohdr_t::SequencesAvailable() const
000b2720 l     F .text	00000082              studiohdr_t::SetActivityListVersion(int) const
000b2590 l     F .text	0000005d              studiohdr_t::SetAttachmentBone(int, int)
0038b350 l     O .bss	00000004              studiorender
000de970 l     F .text	00000491              stuffcmds(CCommand const&)
0030d060 l     O .bss	00000024              stuffcmds_command
0038b3e8 l     O .bss	00000008              subs.7497
0011aa90 l     F .text	0000023a              Surf_ComputeCentroid(msurface2_t*, Vector*)
00320030 l     O .bss	00000004              SurfFlagsToSortGroup(msurface2_t*, int)::warningcount
0032ce00 l     O .bss	0002a250              sv
001af2d0 l     F .text	0000045d              SV_ActivateServer()
001b1ac0 l     F .text	00000069              SV_AddOriginToPVS(Vector const&)
001ad550 l     F .text	000000d5              SV_AddToFatPVS(Vector const&)
002d5ae0 l     O .bss	00000048              sv_allow_color_correction
003272e0 l     O .bss	00000048              sv_allowdownload
00327220 l     O .bss	00000048              sv_allowupload
0031a400 l     O .bss	00000048              sv_allow_voice_from_file
002d5b40 l     O .bss	00000048              sv_allow_wait_command
002d5ba0 l     O .bss	00000048              sv_alternateticks
001aedd0 l     F .text	0000015c              SV_BroadcastVoiceData(IClient*, int, char*, long long)
001ade60 l     F .text	00000060              SV_BuildSendTablesArray(ServerClass*, SendTable**, int)
00357440 l     O .bss	00000048              sv_cacheencodedents
0008b880 l     F .text	0000000a              SVC_BSPDecal::GetName() const
0008b870 l     F .text	0000000a              SVC_BSPDecal::GetType() const
0008b890 l     F .text	0000001a              SVC_BSPDecal::Process()
00084ee0 l     F .text	000003f2              SVC_BSPDecal::ReadFromBuffer(bf_read&)
002c853c l     O .bss	0000000c              SVC_BSPDecal::ReadFromBuffer(bf_read&)::tm_fmt
0008be40 l     F .text	0000000e              SVC_BSPDecal::~SVC_BSPDecal()
0008be40 l     F .text	0000000e              SVC_BSPDecal::~SVC_BSPDecal()
0008c0c0 l     F .text	00000012              SVC_BSPDecal::~SVC_BSPDecal()
0007d310 l     F .text	0000006f              SVC_BSPDecal::ToString() const
00082320 l     F .text	00000349              SVC_BSPDecal::WriteToBuffer(bf_write&)
0008b580 l     F .text	0000000a              SVC_ClassInfo::GetGroup() const
0008b550 l     F .text	0000000a              SVC_ClassInfo::GetName() const
0008b540 l     F .text	0000000a              SVC_ClassInfo::GetType() const
0008b560 l     F .text	0000001a              SVC_ClassInfo::Process()
0008a5f0 l     F .text	0000044e              SVC_ClassInfo::ReadFromBuffer(bf_read&)
002c85f0 l     O .bss	0000000c              SVC_ClassInfo::ReadFromBuffer(bf_read&)::tm_fmt
0008c650 l     F .text	00000045              SVC_ClassInfo::~SVC_ClassInfo()
0008c650 l     F .text	00000045              SVC_ClassInfo::~SVC_ClassInfo()
0008c6a0 l     F .text	0000004c              SVC_ClassInfo::~SVC_ClassInfo()
0007ce40 l     F .text	00000062              SVC_ClassInfo::ToString() const
00081b50 l     F .text	00000259              SVC_ClassInfo::WriteToBuffer(bf_write&)
0008b430 l     F .text	0000000a              SVC_CmdKeyValues::GetName() const
0008b420 l     F .text	0000000a              SVC_CmdKeyValues::GetType() const
0008b440 l     F .text	0000001a              SVC_CmdKeyValues::Process()
00089740 l     F .text	00000009              SVC_CmdKeyValues::ReadFromBuffer(bf_read&)
0008c470 l     F .text	00000012              SVC_CmdKeyValues::~SVC_CmdKeyValues()
0008c470 l     F .text	00000012              SVC_CmdKeyValues::~SVC_CmdKeyValues()
0008c490 l     F .text	00000025              SVC_CmdKeyValues::~SVC_CmdKeyValues()
000898f0 l     F .text	0000001f              SVC_CmdKeyValues::SVC_CmdKeyValues(KeyValues*)
000898f0 l     F .text	0000001f              SVC_CmdKeyValues::SVC_CmdKeyValues(KeyValues*)
0007f080 l     F .text	00000009              SVC_CmdKeyValues::ToString() const
000898b0 l     F .text	00000009              SVC_CmdKeyValues::WriteToBuffer(bf_write&)
0008b610 l     F .text	0000000a              SVC_CreateStringTable::GetGroup() const
0008b5e0 l     F .text	0000000a              SVC_CreateStringTable::GetName() const
0008b5d0 l     F .text	0000000a              SVC_CreateStringTable::GetType() const
0008b5f0 l     F .text	0000001a              SVC_CreateStringTable::Process()
00086a50 l     F .text	000005da              SVC_CreateStringTable::ReadFromBuffer(bf_read&)
002c85c0 l     O .bss	0000000c              SVC_CreateStringTable::ReadFromBuffer(bf_read&)::tm_fmt
0008bda0 l     F .text	0000000e              SVC_CreateStringTable::~SVC_CreateStringTable()
0008bda0 l     F .text	0000000e              SVC_CreateStringTable::~SVC_CreateStringTable()
0008c200 l     F .text	00000012              SVC_CreateStringTable::~SVC_CreateStringTable()
00089910 l     F .text	00000045              SVC_CreateStringTable::SVC_CreateStringTable()
00089910 l     F .text	00000045              SVC_CreateStringTable::SVC_CreateStringTable()
0007cff0 l     F .text	00000081              SVC_CreateStringTable::ToString() const
00080500 l     F .text	0000038c              SVC_CreateStringTable::WriteToBuffer(bf_write&)
0008b840 l     F .text	0000000a              SVC_CrosshairAngle::GetName() const
0008b830 l     F .text	0000000a              SVC_CrosshairAngle::GetType() const
0008b850 l     F .text	0000001a              SVC_CrosshairAngle::Process()
000857e0 l     F .text	0000023d              SVC_CrosshairAngle::ReadFromBuffer(bf_read&)
002c8560 l     O .bss	0000000c              SVC_CrosshairAngle::ReadFromBuffer(bf_read&)::tm_fmt
0008be10 l     F .text	0000000e              SVC_CrosshairAngle::~SVC_CrosshairAngle()
0008be10 l     F .text	0000000e              SVC_CrosshairAngle::~SVC_CrosshairAngle()
0008c120 l     F .text	00000012              SVC_CrosshairAngle::~SVC_CrosshairAngle()
0007d7d0 l     F .text	00000080              SVC_CrosshairAngle::ToString() const
0007f650 l     F .text	000000f1              SVC_CrosshairAngle::WriteToBuffer(bf_write&)
0008b990 l     F .text	0000000a              SVC_EntityMessage::GetGroup() const
0008b960 l     F .text	0000000a              SVC_EntityMessage::GetName() const
0008b950 l     F .text	0000000a              SVC_EntityMessage::GetType() const
0008b970 l     F .text	0000001a              SVC_EntityMessage::Process()
00088010 l     F .text	00000392              SVC_EntityMessage::ReadFromBuffer(bf_read&)
002c8614 l     O .bss	0000000c              SVC_EntityMessage::ReadFromBuffer(bf_read&)::tm_fmt
0008bd40 l     F .text	0000000e              SVC_EntityMessage::~SVC_EntityMessage()
0008bd40 l     F .text	0000000e              SVC_EntityMessage::~SVC_EntityMessage()
0008c2c0 l     F .text	00000012              SVC_EntityMessage::~SVC_EntityMessage()
0007cd10 l     F .text	00000067              SVC_EntityMessage::ToString() const
0007fa30 l     F .text	00000279              SVC_EntityMessage::WriteToBuffer(bf_write&)
0008b800 l     F .text	0000000a              SVC_FixAngle::GetName() const
0008b7f0 l     F .text	0000000a              SVC_FixAngle::GetType() const
0008b810 l     F .text	0000001a              SVC_FixAngle::Process()
00085550 l     F .text	00000285              SVC_FixAngle::ReadFromBuffer(bf_read&)
002c8554 l     O .bss	0000000c              SVC_FixAngle::ReadFromBuffer(bf_read&)::tm_fmt
0008be20 l     F .text	0000000e              SVC_FixAngle::~SVC_FixAngle()
0008be20 l     F .text	0000000e              SVC_FixAngle::~SVC_FixAngle()
0008c100 l     F .text	00000012              SVC_FixAngle::~SVC_FixAngle()
0007d850 l     F .text	0000009a              SVC_FixAngle::ToString() const
000809c0 l     F .text	00000158              SVC_FixAngle::WriteToBuffer(bf_write&)
0008b8f0 l     F .text	0000000a              SVC_GameEvent::GetGroup() const
0008b8c0 l     F .text	0000000a              SVC_GameEvent::GetName() const
0008b8b0 l     F .text	0000000a              SVC_GameEvent::GetType() const
0008ba90 l     F .text	0000000a              SVC_GameEventList::GetName() const
0008ba80 l     F .text	0000000a              SVC_GameEventList::GetType() const
0008baa0 l     F .text	0000001a              SVC_GameEventList::Process()
00088880 l     F .text	00000332              SVC_GameEventList::ReadFromBuffer(bf_read&)
002c8638 l     O .bss	0000000c              SVC_GameEventList::ReadFromBuffer(bf_read&)::tm_fmt
0008bd20 l     F .text	0000000e              SVC_GameEventList::~SVC_GameEventList()
0008bd20 l     F .text	0000000e              SVC_GameEventList::~SVC_GameEventList()
0008c300 l     F .text	00000012              SVC_GameEventList::~SVC_GameEventList()
0007cc20 l     F .text	0000005a              SVC_GameEventList::ToString() const
0007edd0 l     F .text	000001cd              SVC_GameEventList::WriteToBuffer(bf_write&)
0008b8d0 l     F .text	0000001a              SVC_GameEvent::Process()
00087a40 l     F .text	000002cd              SVC_GameEvent::ReadFromBuffer(bf_read&)
002c85fc l     O .bss	0000000c              SVC_GameEvent::ReadFromBuffer(bf_read&)::tm_fmt
0008bd60 l     F .text	0000000e              SVC_GameEvent::~SVC_GameEvent()
0008bd60 l     F .text	0000000e              SVC_GameEvent::~SVC_GameEvent()
0008c280 l     F .text	00000012              SVC_GameEvent::~SVC_GameEvent()
0007cdf0 l     F .text	0000004a              SVC_GameEvent::ToString() const
0007fcb0 l     F .text	00000171              SVC_GameEvent::WriteToBuffer(bf_write&)
0008bc90 l     F .text	0000000a              SVC_GetCvarValue::GetName() const
0008bc80 l     F .text	0000000a              SVC_GetCvarValue::GetType() const
0008bca0 l     F .text	0000001a              SVC_GetCvarValue::Process()
00088bc0 l     F .text	0000024d              SVC_GetCvarValue::ReadFromBuffer(bf_read&)
002c8644 l     O .bss	0000000c              SVC_GetCvarValue::ReadFromBuffer(bf_read&)::tm_fmt
0008bcc0 l     F .text	0000000e              SVC_GetCvarValue::~SVC_GetCvarValue()
0008bcc0 l     F .text	0000000e              SVC_GetCvarValue::~SVC_GetCvarValue()
0008c3c0 l     F .text	00000012              SVC_GetCvarValue::~SVC_GetCvarValue()
0007ca10 l     F .text	00000054              SVC_GetCvarValue::ToString() const
0007d9c0 l     F .text	000000d9              SVC_GetCvarValue::WriteToBuffer(bf_write&)
0032cbc0 l     O .bss	00000048              sv_cheats
001ad820 l     F .text	0000004b              SV_CheatsChanged_f(IConVar*, char const*, float)
001d9620 l     F .text	000000a1              SV_ClearWorld()
0032c980 l     O .bss	00000048              sv_client_cmdrate_difference
0032c8c0 l     O .bss	00000048              sv_client_max_interp_ratio
0032c920 l     O .bss	00000048              sv_client_min_interp_ratio
0032c860 l     O .bss	00000048              sv_client_predict
0008ba50 l     F .text	0000000a              SVC_Menu::GetName() const
0008ba40 l     F .text	0000000a              SVC_Menu::GetType() const
0008ba60 l     F .text	0000001a              SVC_Menu::Process()
00088e30 l     F .text	000003bd              SVC_Menu::ReadFromBuffer(bf_read&)
002c862c l     O .bss	0000000c              SVC_Menu::ReadFromBuffer(bf_read&)::tm_fmt
0007f0a0 l     F .text	00000039              SVC_Menu::~SVC_Menu()
0007f0a0 l     F .text	00000039              SVC_Menu::~SVC_Menu()
0007f0e0 l     F .text	0000001f              SVC_Menu::~SVC_Menu()
00089960 l     F .text	0000004a              SVC_Menu::SVC_Menu(DIALOG_TYPE, KeyValues*)
00089960 l     F .text	0000004a              SVC_Menu::SVC_Menu(DIALOG_TYPE, KeyValues*)
0007efa0 l     F .text	0000007a              SVC_Menu::ToString() const
000891f0 l     F .text	000001a3              SVC_Menu::WriteToBuffer(bf_write&)
00322820 l     O .bss	00000048              sv_compressstringtablebaselines_threshhold
001b3310 l     F .text	00000067              SV_ComputeClassInfosCRC(unsigned int*)
001b4610 l     F .text	00000658              SV_ComputeClientPacks(int, CGameClient**, CFrameSnapshot*)
002509e3 l     O .rodata	00000016              SV_ComputeClientPacks(int, CGameClient**, CFrameSnapshot*)::__FUNCTION__
00357794 l     O .bss	0000000c              SV_ComputeClientPacks(int, CGameClient**, CFrameSnapshot*)::tm_fmt
003577a0 l     O .bss	0000000c              SV_ComputeClientPacks(int, CGameClient**, CFrameSnapshot*)::tm_fmt
003577ac l     O .bss	0000000c              SV_ComputeClientPacks(int, CGameClient**, CFrameSnapshot*)::tm_fmt
003574a0 l     O .bss	00000048              sv_consistency
003573e0 l     O .bss	00000048              sv_contact
0008b9e0 l     F .text	0000000a              SVC_PacketEntities::GetGroup() const
0008b9b0 l     F .text	0000000a              SVC_PacketEntities::GetName() const
0008b9a0 l     F .text	0000000a              SVC_PacketEntities::GetType() const
0008b9c0 l     F .text	0000001a              SVC_PacketEntities::Process()
000883b0 l     F .text	000004ca              SVC_PacketEntities::ReadFromBuffer(bf_read&)
002c8620 l     O .bss	0000000c              SVC_PacketEntities::ReadFromBuffer(bf_read&)::tm_fmt
0008bd30 l     F .text	0000000e              SVC_PacketEntities::~SVC_PacketEntities()
0008bd30 l     F .text	0000000e              SVC_PacketEntities::~SVC_PacketEntities()
0008c2e0 l     F .text	00000012              SVC_PacketEntities::~SVC_PacketEntities()
0007cc80 l     F .text	0000008f              SVC_PacketEntities::ToString() const
00080030 l     F .text	0000038a              SVC_PacketEntities::WriteToBuffer(bf_write&)
0008b7a0 l     F .text	0000000a              SVC_Prefetch::GetGroup() const
0008b770 l     F .text	0000000a              SVC_Prefetch::GetName() const
0008b760 l     F .text	0000000a              SVC_Prefetch::GetType() const
0008b780 l     F .text	0000001a              SVC_Prefetch::Process()
00087400 l     F .text	000002dd              SVC_Prefetch::ReadFromBuffer(bf_read&)
002c85d8 l     O .bss	0000000c              SVC_Prefetch::ReadFromBuffer(bf_read&)::tm_fmt
0008bd80 l     F .text	0000000e              SVC_Prefetch::~SVC_Prefetch()
0008bd80 l     F .text	0000000e              SVC_Prefetch::~SVC_Prefetch()
0008c240 l     F .text	00000012              SVC_Prefetch::~SVC_Prefetch()
0007cf10 l     F .text	00000056              SVC_Prefetch::ToString() const
0007c750 l     F .text	00000134              SVC_Prefetch::WriteToBuffer(bf_write&)
0008b470 l     F .text	0000000a              SVC_Print::GetName() const
0008b460 l     F .text	0000000a              SVC_Print::GetType() const
0008b480 l     F .text	0000001a              SVC_Print::Process()
000840e0 l     F .text	0000022d              SVC_Print::ReadFromBuffer(bf_read&)
002c850c l     O .bss	0000000c              SVC_Print::ReadFromBuffer(bf_read&)::tm_fmt
0008be80 l     F .text	0000000e              SVC_Print::~SVC_Print()
0008be80 l     F .text	0000000e              SVC_Print::~SVC_Print()
0008c040 l     F .text	00000012              SVC_Print::~SVC_Print()
0007d4a0 l     F .text	00000044              SVC_Print::ToString() const
0007db70 l     F .text	000000c9              SVC_Print::WriteToBuffer(bf_write&)
001aef30 l     F .text	0000033b              SV_CreateBaseline()
0015df80 l     F .text	00000055              SV_CreateNetworkStringTables()
0032b8a0 l     O .bss	00000048              sv_creationtickcheck
0008b530 l     F .text	0000000a              SVC_SendTable::GetGroup() const
0008b500 l     F .text	0000000a              SVC_SendTable::GetName() const
0008b4f0 l     F .text	0000000a              SVC_SendTable::GetType() const
0008b510 l     F .text	0000001a              SVC_SendTable::Process()
00087d10 l     F .text	000002f5              SVC_SendTable::ReadFromBuffer(bf_read&)
002c8608 l     O .bss	0000000c              SVC_SendTable::ReadFromBuffer(bf_read&)::tm_fmt
0008bd50 l     F .text	0000000e              SVC_SendTable::~SVC_SendTable()
0008bd50 l     F .text	0000000e              SVC_SendTable::~SVC_SendTable()
0008c2a0 l     F .text	00000012              SVC_SendTable::~SVC_SendTable()
0007cd80 l     F .text	00000061              SVC_SendTable::ToString() const
000803c0 l     F .text	00000138              SVC_SendTable::WriteToBuffer(bf_write&)
0008b4e0 l     F .text	0000000a              SVC_ServerInfo::GetGroup() const
0008b4b0 l     F .text	0000000a              SVC_ServerInfo::GetName() const
0008b4a0 l     F .text	0000000a              SVC_ServerInfo::GetType() const
0008b4c0 l     F .text	0000001a              SVC_ServerInfo::Process()
00084540 l     F .text	000006ca              SVC_ServerInfo::ReadFromBuffer(bf_read&)
002c8524 l     O .bss	0000000c              SVC_ServerInfo::ReadFromBuffer(bf_read&)::tm_fmt
0008be60 l     F .text	0000000e              SVC_ServerInfo::~SVC_ServerInfo()
0008be60 l     F .text	0000000e              SVC_ServerInfo::~SVC_ServerInfo()
0008c080 l     F .text	00000012              SVC_ServerInfo::~SVC_ServerInfo()
0007d3e0 l     F .text	00000061              SVC_ServerInfo::ToString() const
00080b20 l     F .text	0000028a              SVC_ServerInfo::WriteToBuffer(bf_write&)
0008b5a0 l     F .text	0000000a              SVC_SetPause::GetName() const
0008b590 l     F .text	0000000a              SVC_SetPause::GetType() const
0008b5b0 l     F .text	0000001a              SVC_SetPause::Process()
000863f0 l     F .text	00000245              SVC_SetPause::ReadFromBuffer(bf_read&)
002c859c l     O .bss	0000000c              SVC_SetPause::ReadFromBuffer(bf_read&)::tm_fmt
0008bdc0 l     F .text	0000000e              SVC_SetPause::~SVC_SetPause()
0008bdc0 l     F .text	0000000e              SVC_SetPause::~SVC_SetPause()
0008c1c0 l     F .text	00000012              SVC_SetPause::~SVC_SetPause()
0007d0f0 l     F .text	00000052              SVC_SetPause::ToString() const
00080890 l     F .text	00000128              SVC_SetPause::WriteToBuffer(bf_write&)
0008b7c0 l     F .text	0000000a              SVC_SetView::GetName() const
0008b7b0 l     F .text	0000000a              SVC_SetView::GetType() const
0008b7d0 l     F .text	0000001a              SVC_SetView::Process()
000852e0 l     F .text	0000026d              SVC_SetView::ReadFromBuffer(bf_read&)
002c8548 l     O .bss	0000000c              SVC_SetView::ReadFromBuffer(bf_read&)::tm_fmt
0008be30 l     F .text	0000000e              SVC_SetView::~SVC_SetView()
0008be30 l     F .text	0000000e              SVC_SetView::~SVC_SetView()
0008c0e0 l     F .text	00000012              SVC_SetView::~SVC_SetView()
0007d2c0 l     F .text	00000044              SVC_SetView::ToString() const
0007c620 l     F .text	0000012e              SVC_SetView::WriteToBuffer(bf_write&)
0008b750 l     F .text	0000000a              SVC_Sounds::GetGroup() const
0008b720 l     F .text	0000000a              SVC_Sounds::GetName() const
0008b710 l     F .text	0000000a              SVC_Sounds::GetType() const
0008b730 l     F .text	0000001a              SVC_Sounds::Process()
00087030 l     F .text	000003cd              SVC_Sounds::ReadFromBuffer(bf_read&)
002c85cc l     O .bss	0000000c              SVC_Sounds::ReadFromBuffer(bf_read&)::tm_fmt
0008bd90 l     F .text	0000000e              SVC_Sounds::~SVC_Sounds()
0008bd90 l     F .text	0000000e              SVC_Sounds::~SVC_Sounds()
0008c220 l     F .text	00000012              SVC_Sounds::~SVC_Sounds()
0007cf70 l     F .text	00000075              SVC_Sounds::ToString() const
00082040 l     F .text	000002d9              SVC_Sounds::WriteToBuffer(bf_write&)
0008ba30 l     F .text	0000000a              SVC_TempEntities::GetGroup() const
0008ba00 l     F .text	0000000a              SVC_TempEntities::GetName() const
0008b9f0 l     F .text	0000000a              SVC_TempEntities::GetType() const
0008ba10 l     F .text	0000001a              SVC_TempEntities::Process()
000876e0 l     F .text	00000352              SVC_TempEntities::ReadFromBuffer(bf_read&)
002c85e4 l     O .bss	0000000c              SVC_TempEntities::ReadFromBuffer(bf_read&)::tm_fmt
0008bd70 l     F .text	0000000e              SVC_TempEntities::~SVC_TempEntities()
0008bd70 l     F .text	0000000e              SVC_TempEntities::~SVC_TempEntities()
0008c260 l     F .text	00000012              SVC_TempEntities::~SVC_TempEntities()
0007ceb0 l     F .text	0000005a              SVC_TempEntities::ToString() const
0007f500 l     F .text	00000150              SVC_TempEntities::WriteToBuffer(bf_write&)
0008b660 l     F .text	0000000a              SVC_UpdateStringTable::GetGroup() const
0008b630 l     F .text	0000000a              SVC_UpdateStringTable::GetName() const
0008b620 l     F .text	0000000a              SVC_UpdateStringTable::GetType() const
0008b640 l     F .text	0000001a              SVC_UpdateStringTable::Process()
00086640 l     F .text	00000402              SVC_UpdateStringTable::ReadFromBuffer(bf_read&)
002c85b4 l     O .bss	0000000c              SVC_UpdateStringTable::ReadFromBuffer(bf_read&)::tm_fmt
0008bdb0 l     F .text	0000000e              SVC_UpdateStringTable::~SVC_UpdateStringTable()
0008bdb0 l     F .text	0000000e              SVC_UpdateStringTable::~SVC_UpdateStringTable()
0008c1e0 l     F .text	00000012              SVC_UpdateStringTable::~SVC_UpdateStringTable()
0007d080 l     F .text	00000067              SVC_UpdateStringTable::ToString() const
00081db0 l     F .text	00000289              SVC_UpdateStringTable::WriteToBuffer(bf_write&)
0008b940 l     F .text	0000000a              SVC_UserMessage::GetGroup() const
0008b910 l     F .text	0000000a              SVC_UserMessage::GetName() const
0008b900 l     F .text	0000000a              SVC_UserMessage::GetType() const
0008b920 l     F .text	0000001a              SVC_UserMessage::Process()
00082670 l     F .text	00000332              SVC_UserMessage::ReadFromBuffer(bf_read&)
002c8590 l     O .bss	0000000c              SVC_UserMessage::ReadFromBuffer(bf_read&)::tm_fmt
0008bdd0 l     F .text	0000000e              SVC_UserMessage::~SVC_UserMessage()
0008bdd0 l     F .text	0000000e              SVC_UserMessage::~SVC_UserMessage()
0008c1a0 l     F .text	00000012              SVC_UserMessage::~SVC_UserMessage()
0007d150 l     F .text	0000005a              SVC_UserMessage::ToString() const
0007fe30 l     F .text	00000184              SVC_UserMessage::WriteToBuffer(bf_write&)
0008b700 l     F .text	0000000a              SVC_VoiceData::GetGroup() const
0008b6d0 l     F .text	0000000a              SVC_VoiceData::GetName() const
0008b6c0 l     F .text	0000000a              SVC_VoiceData::GetType() const
0008b6e0 l     F .text	0000001a              SVC_VoiceData::Process()
00085cc0 l     F .text	00000392              SVC_VoiceData::ReadFromBuffer(bf_read&)
002c8578 l     O .bss	0000000c              SVC_VoiceData::ReadFromBuffer(bf_read&)::tm_fmt
0008bdf0 l     F .text	0000000e              SVC_VoiceData::~SVC_VoiceData()
0008bdf0 l     F .text	0000000e              SVC_VoiceData::~SVC_VoiceData()
0008c160 l     F .text	00000012              SVC_VoiceData::~SVC_VoiceData()
0007d200 l     F .text	0000005a              SVC_VoiceData::ToString() const
0007f160 l     F .text	000000e9              SVC_VoiceData::WriteToBuffer(bf_write&)
0008b6b0 l     F .text	0000000a              SVC_VoiceInit::GetGroup() const
0008b680 l     F .text	0000000a              SVC_VoiceInit::GetName() const
0008b670 l     F .text	0000000a              SVC_VoiceInit::GetType() const
0008b690 l     F .text	0000001a              SVC_VoiceInit::Process()
00085a20 l     F .text	0000029d              SVC_VoiceInit::ReadFromBuffer(bf_read&)
002c856c l     O .bss	0000000c              SVC_VoiceInit::ReadFromBuffer(bf_read&)::tm_fmt
0008be00 l     F .text	0000000e              SVC_VoiceInit::~SVC_VoiceInit()
0008be00 l     F .text	0000000e              SVC_VoiceInit::~SVC_VoiceInit()
0008c140 l     F .text	00000012              SVC_VoiceInit::~SVC_VoiceInit()
0007d260 l     F .text	00000054              SVC_VoiceInit::ToString() const
0007e1d0 l     F .text	000000d9              SVC_VoiceInit::WriteToBuffer(bf_write&)
003576c0 l     O .bss	00000048              sv_debugmanualmode
002da100 l     O .bss	00000048              sv_debugtempentities
001b72d0 l     F .text	00000037              SV_DecalIndex(char const*)
00327440 l     O .bss	00000048              sv_deltaprint
003273e0 l     O .bss	00000048              sv_deltatime
001ae290 l     F .text	000001df              SV_DetermineMulticastRecipients(bool, Vector const&, CBitVec<255>&)
001a0390 l     F .text	00000d58              SV_DetermineUpdateType(CEntityWriteInfo&)
0032cb00 l     O .bss	00000048              sv_downloadurl
00130130 l     F .text	000004d5              sv_dump_edicts(CCommand const&)
0031ac60 l     O .bss	00000024              sv_dump_edicts_command
00322880 l     O .bss	00000048              sv_dumpstringtables
002d5d80 l     O .bss	00000048              sv_enableoldqueries
001b2bc0 l     F .text	0000018c              SV_EnsureInstanceBaseline(ServerClass*, int, void const*, int)
001ae470 l     F .text	000000a8              SV_ExecuteRemoteCommand(char const*, int)
001b2d50 l     F .text	00000073              SV_FillHLTVData(CFrameSnapshot*, edict_t*, int)
001b2dd0 l     F .text	00000073              SV_FillReplayData(CFrameSnapshot*, edict_t*, int)
003274e0 l     O .bss	00000048              sv_filterban
001b7be0 l     F .text	0000002b              SV_FindOrAddDecal(char const*, bool)
001b7a10 l     F .text	0000002b              SV_FindOrAddGeneric(char const*, bool)
001b7560 l     F .text	00000033              SV_FindOrAddModel(char const*, bool)
001b7840 l     F .text	0000002b              SV_FindOrAddSound(char const*, bool)
001ae200 l     F .text	00000042              SV_FindServerClass(char const*)
001ae250 l     F .text	0000003c              SV_FindServerClass(int)
001adae0 l     F .text	00000013              SV_FlushMemoryOnNextServer()
001b7330 l     F .text	0000002a              SV_ForceModelBounds(char const*, Vector const&, Vector const&)
00357a20 l     O .bss	00000048              sv_forcepreload
001adad0 l     F .text	0000000c              SV_ForceSend()
001b7310 l     F .text	0000001c              SV_ForceSimpleMaterial(char const*)
001b1500 l     F .text	000003e2              SV_Frame(bool)
00357348 l     O .bss	0000000c              SV_Frame(bool)::tm_fmt
001b06a0 l     F .text	00000034              SV_FrameExecuteThreadDeferred()
001b72a0 l     F .text	00000030              SV_GenericIndex(char const*)
00112d10 l     F .text	00000007              SV_GetSoundDuration(char const*)
001b02b0 l     F .text	0000000f              SV_HasPlayers()
001adf50 l     F .text	0000024e              SV_InitGameDLL()
001af270 l     F .text	00000055              SV_InitGameServerSteam()
001adec0 l     F .text	0000003c              SV_InitSendTables(ServerClass*)
001adb60 l     F .text	00000005              SV_InstallClientStringTableMirrors()
002da060 l     O .bss	00000048              sv_instancebaselines
001b02a0 l     F .text	0000000f              SV_IsSimulating()
0032cb60 l     O .bss	00000048              sv_lan
0032c3c0 l     O .bss	00000048              sv_logbans
0032b920 l     O .bss	00000048              sv_logblocks
00316d20 l     O .bss	00000048              sv_logdownloadlist
0032c240 l     O .bss	00000048              sv_logecho
0032c2a0 l     O .bss	00000048              sv_logfile
0032c420 l     O .bss	00000048              sv_logfilecompress
0032c480 l     O .bss	00000048              sv_logfilename_format
0032c300 l     O .bss	00000048              sv_logflush
0032c4e0 l     O .bss	00000048              sv_log_onefile
0032c540 l     O .bss	00000048              sv_logsdir
0032c360 l     O .bss	00000048              sv_logsecret
00325620 l     O .bss	00000048              sv_lowedict_action
00325680 l     O .bss	00000048              sv_lowedict_threshold
003590c0 l     O .bss	00000048              sv_master_share_game_socket
0032c9e0 l     O .bss	00000048              sv_maxcmdrate
002da2a0 l     O .bss	00000048              sv_max_connects_sec
002da360 l     O .bss	00000048              sv_max_connects_sec_global
002da300 l     O .bss	00000048              sv_max_connects_window
002da180 l     O .bss	00000048              sv_max_queries_sec
002da240 l     O .bss	00000048              sv_max_queries_sec_global
002da1e0 l     O .bss	00000048              sv_max_queries_window
00327160 l     O .bss	00000048              sv_maxrate
0032caa0 l     O .bss	00000048              sv_maxreplay
00323700 l     O .bss	00000048              sv_maxroutable
00327100 l     O .bss	00000048              sv_maxupdaterate
00357220 l     O .bss	00000048              sv_maxuptimelimit
001b3240 l     F .text	00000070              SV_MaybeWriteSendTable_R(SendTable*, bf_write&)
001b3180 l     F .text	000000bc              SV_MaybeWriteSendTable(SendTable*, bf_write&, bool)
00357160 l     O .bss	00000048              sv_memlimit
0032ca40 l     O .bss	00000048              sv_mincmdrate
003271c0 l     O .bss	00000048              sv_minrate
003270a0 l     O .bss	00000048              sv_minupdaterate
003571c0 l     O .bss	00000048              sv_minuptimelimit
001b7230 l     F .text	00000037              SV_ModelIndex(char const*)
002d55e0 l     O .bss	00000048              sv_namechange_cooldown_seconds
00357620 l     O .bss	00000024              sv_netspike
001ae570 l     F .text	0000005b              sv_netspike_f(CCommand const&)
002d5580 l     O .bss	00000048              sv_netspike_on_reliable_snapshot_overflow
002d54c0 l     O .bss	00000048              sv_netspike_output
002d5520 l     O .bss	00000048              sv_netspike_sendtime_ms
0035d2e8 l     O .bss	00000004              sv_noclipduringpause
001b34f0 l     F .text	000006b5              SV_PackEntity(int, edict_t*, ServerClass*, CFrameSnapshot*)
002509cf l     O .rodata	0000000e              SV_PackEntity(int, edict_t*, ServerClass*, CFrameSnapshot*)::__FUNCTION__
00357788 l     O .bss	0000000c              SV_PackEntity(int, edict_t*, ServerClass*, CFrameSnapshot*)::tm_fmt
00357740 l     O .bss	00000048              sv_parallel_packentities
00357280 l     O .bss	00000048              sv_parallel_sendsnapshot
001ad780 l     F .text	00000066              SV_ParallelSendSnapshot(CGameClient*&)
002d5d20 l     O .bss	00000048              sv_password
003570c0 l     O .bss	00000048              sv_pausable
001b7e70 l     F .text	0000012d              sv_precacheinfo(CCommand const&)
00357aa0 l     O .bss	00000024              sv_precacheinfo_command
001b0670 l     F .text	00000024              SV_PreClientUpdate(bool)
0015dfe0 l     F .text	00000014              SV_PrintStringTables()
00377f90 l     O .bss	00000014              s_VProfListeners
003573a0 l     O .bss	00000024              sv_pure
0032cc80 l     O .bss	00000048              sv_pure_consensus
001ad230 l     F .text	00000114              SV_Pure_f(CCommand const&)
0032cd40 l     O .bss	00000048              sv_pure_kick_clients
0032cc20 l     O .bss	00000048              sv_pure_retiretime
0032cce0 l     O .bss	00000048              sv_pure_trace
00357d20 l     O .bss	00000048              sv_rcon_banpenalty
00358ee0 l     O .bss	00000048              sv_rcon_log
00357cc0 l     O .bss	00000048              sv_rcon_maxfailures
00357ae0 l     O .bss	00000048              sv_rcon_maxpacketbans
00357b40 l     O .bss	00000048              sv_rcon_maxpacketsize
00357c60 l     O .bss	00000048              sv_rcon_minfailures
00357c00 l     O .bss	00000048              sv_rcon_minfailuretime
00357ba0 l     O .bss	00000048              sv_rcon_whitelist_address
001ba5e0 l     F .text	0000000f              SV_RedirectActive()
001ba5f0 l     F .text	00000040              SV_RedirectAddText(char const*)
00357ea0 l     O .bss	00001000              sv_redirect_buffer
001ba580 l     F .text	00000057              SV_RedirectCheckFlush(int)
00357e90 l     O .bss	00000004              sv_redirected
001ba560 l     F .text	00000017              SV_RedirectEnd()
001ba450 l     F .text	000000c2              SV_RedirectFlush()
00357e80 l     O .bss	00000001              SV_RedirectFlush()::bInFlush
001ba520 l     F .text	00000033              SV_RedirectStart(redirect_t, netadr_s const*)
00357e94 l     O .bss	0000000c              sv_redirectto
002d5cc0 l     O .bss	00000048              sv_region
001b1b30 l     F .text	000000cb              SV_ReplicateConVarChange(ConVar const*, char const*)
001ae5d0 l     F .text	00000068              SV_ResetPVS(unsigned char*, int)
0032c800 l     O .bss	00000048              sv_restrict_aspect_ratio_fov
001b1490 l     F .text	0000006f              SV_SendClientUpdates(bool, bool)
00326fe0 l     O .bss	00000048              sv_sendtables
0035d180 l     O .bss	00000024              sv_setsteamaccount
001bd910 l     F .text	0000008b              sv_setsteamaccount_f(CCommand const&)
001bd840 l     F .text	00000025              sv_setsteamblockingcheck_f(IConVar*, char const*, float)
001be530 l     F .text	00000032              sv_setsteamgroup_f(IConVar*, char const*, float)
00357660 l     O .bss	00000024              sv_shutdown
001ad070 l     F .text	000000c7              sv_ShutDown()
001ae1a0 l     F .text	0000005a              SV_ShutdownGameDLL()
00357060 l     O .bss	00000048              sv_shutdown_timeout_minutes
001d9840 l     F .text	0000053b              SV_SolidMoved(edict_t*, ICollideable*, Vector const*, bool)
001b7270 l     F .text	00000030              SV_SoundIndex(char const*)
001b1c00 l     F .text	00000378              SV_StartSound(IRecipientFilter&, edict_t*, int, char const*, float, soundlevel_t, int, int, int, Vector const*, float, int, CUtlVector<Vector, CUtlMemory<Vector, int> >*)
002d5f80 l     O .bss	00000048              sv_stats
00359120 l     O .bss	00000048              sv_steamblockingcheck
00359060 l     O .bss	00000048              sv_steamgroup
00327040 l     O .bss	00000048              sv_stressbots
002d5c60 l     O .bss	00000048              sv_tags
000d7580 l     F .text	000002a1              SvTagsChangeCallback(IConVar*, char const*, float)
002da3a8 l     O .bss	00000001              SvTagsChangeCallback(IConVar*, char const*, float)::bTagsChangeCallback
001adf00 l     F .text	00000009              SV_TermSendTables(ServerClass*)
001b02c0 l     F .text	000003a4              SV_Think(bool)
00357330 l     O .bss	0000000c              SV_Think(bool)::tm_fmt
0035733c l     O .bss	0000000c              SV_Think(bool)::tm_fmt
00327280 l     O .bss	00000048              sv_timeout
001d96d0 l     F .text	0000016a              SV_TriggerMoved(edict_t*, bool)
003255c0 l     O .bss	00000048              sv_useexplicitdelete
0031a3a0 l     O .bss	00000048              sv_use_steam_voice
002d5c00 l     O .bss	00000048              sv_visiblemaxplayers
003572e0 l     O .bss	00000048              sv_voiceenable
001b4c70 l     F .text	00000126              SV_WriteClassInfos(ServerClass*, bf_write&)
001b32b0 l     F .text	0000005e              SV_WriteSendTables(ServerClass*, bf_write&)
001aed70 l     F .text	0000005f              SV_WriteVoiceCodec(bf_write&)
00324ec0 l     O .bss	000000a4              s_WingedTestEdgeList
001c2b70 l     F .text	00000018              Sys_CompareFileTime(long, long)
001c3850 l     F .text	00000005              Sys_CreateFileAssociations(int, FileAssociationInfo*)
001c2fb0 l     F .text	00000022              Sys_Error(char const*, ...)
001c2e20 l     F .text	00000188              Sys_Error_Internal(bool, char const*, char*)
0035d849 l     O .bss	00000001              Sys_Error_Internal(bool, char const*, char*)::bReentry
001c3100 l     F .text	00000022              Sys_Exit(char const*, ...)
001c2d30 l     F .text	0000002e              Sys_FindClose()
001c3070 l     F .text	00000083              Sys_FindFirst(char const*, char*, int)
001c2fe0 l     F .text	0000008b              Sys_FindFirstEx(char const*, char const*, char*, int)
001c2cd0 l     F .text	00000053              Sys_FindNext(char*, int)
001e4cd0 l     F .text	00000023              Sys_GetFactory(char const*)
001e4c90 l     F .text	00000021              Sys_GetFactory(CSysModule*)
001e4cc0 l     F .text	0000000a              Sys_GetFactoryThis()
001c3800 l     F .text	00000022              Sys_GetRegKeyValue(char const*, char const*, char*, int, char const*)
001c3830 l     F .text	0000000d              Sys_GetRegKeyValueInt(char const*, char const*, long*, long)
001c2d60 l     F .text	00000005              Sys_Init()
001c3370 l     F .text	00000005              Sys_InitAuthentication()
001c34f0 l     F .text	00000272              Sys_InitGame(void* (*)(char const*, int*), char const*, void*, int)
0035d8e0 l     O .bss	00000100              Sys_InitGame(void* (*)(char const*, int*), char const*, void*, int)::s_pBaseDir
001c3160 l     F .text	000001f9              Sys_InitMemory()
001e4990 l     F .text	00000009              Sys_IsDebuggerPresent()
001e4d00 l     F .text	00000087              Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
001e49a0 l     F .text	000000f1              Sys_LoadLibrary(char const*, Sys_Flags)
001e4aa0 l     F .text	000001b9              Sys_LoadModule(char const*, Sys_Flags)
001c2e00 l     F .text	00000020              Sys_MessageBox(char const*, char const*, bool)
00374ea0 l     O .bss	00000048              sys_minidumpexpandedspew
0035d880 l     O .bss	00000048              sys_minidumpspewlines
001c2b90 l     F .text	00000133              Sys_mkdir(char const*)
001c3860 l     F .text	00000005              Sys_NoCrashDialog()
001c3880 l     F .text	00000009              Sys_OutputDebugString(char const*)
001c2d80 l     F .text	00000073              Sys_Printf(char*, ...)
001e4c60 l     F .text	00000007              Sys_RunningWithDebugModules()
001c3840 l     F .text	00000005              Sys_SetRegKeyValue(char const*, char const*, char const*)
001c2d70 l     F .text	00000005              Sys_Shutdown()
001c3380 l     F .text	00000005              Sys_ShutdownAuthentication()
001c3770 l     F .text	00000087              Sys_ShutdownGame()
001c3360 l     F .text	0000000f              Sys_ShutdownMemory()
001c3140 l     F .text	00000013              Sys_Sleep(int)
001c3d90 l     F .text	000002fe              Sys_SpewFunc(SpewType_t, char const*)
00323980 l     O .bss	00000048              systemlinkport
001c3870 l     F .text	00000005              Sys_TestSendKey(char const*)
001e4c70 l     F .text	00000012              Sys_UnloadModule(CSysModule*)
001eb5c0 l     F .text	0000000f              SzAlloc(void*, unsigned int)
001eb5b0 l     F .text	0000000f              SzFree(void*, void*)
00250420 l     O .rodata	00000139              szSvNetSpikeUsageText
001452c0 l     F .text	000001b1              TangentSpaceComputeBasis(Vector&, Vector&, Vector const&, Vector const&, bool)
00145130 l     F .text	00000184              TangentSpaceSurfaceSetup(msurface2_t*, Vector&)
000db1f0 l     F .text	0000001f              __tcf_0
00165ac0 l     F .text	000001c9              __tcf_0
0018ea50 l     F .text	00000041              __tcf_0
00319440 l     O .bss	00000048              telemetry_demoend
003194a0 l     O .bss	00000048              telemetry_demostart
003195c0 l     O .bss	00000048              telemetry_framecount
00319560 l     O .bss	00000048              telemetry_level
00319680 l     O .bss	00000048              telemetry_pause
00319620 l     O .bss	00000048              telemetry_resume
00319500 l     O .bss	00000048              telemetry_server
0038b4b4 l     O .bss	00000008              terminator.7340
00375200 l     O .bss	00000048              testscript_debug
0009c6b0 l     F .text	000000ac              TexCoordInQuadFromBarycentric(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
00383e20 l     O .bss	00000100              texgammatable
0006c140 l    d  .text	00000000              .text
001c98a0 l     F .text	0000010a              TextMessage_DemoMessage
001c99b0 l     F .text	000000dc              TextMessage_DemoMessageFull
001c9a90 l     F .text	00000133              TextMessageGet
001c9820 l     F .text	0000007c              TextMessageInit
001c90a0 l     F .text	0000074b              TextMessageParse(unsigned char*, int)
001c97f0 l     F .text	00000023              TextMessageShutdown
00384f20 l     O .bss	00000400              texturetolinear
002048a0 l     F .text	00000022              TextureToLinear(int)
00319380 l     O .bss	00000048              threadpool_affinity
000beef0 l     F .text	00000043              timet_to_timestamp(long)
002c7820 l     O .data	00000040              tm_demomessage
000ea600 l     F .text	0000001d              tmpstr512()
00310060 l     O .bss	00000004              tmpstr512()::curstring
00310080 l     O .bss	00004000              tmpstr512()::string
000ed130 l     F .text	0000001c              toggle(CCommand const&)
00314520 l     O .bss	00000024              toggle_command
002c79f8 l     O .data	00000004              toolframework
000bb5c0 l     F .text	00000005              Tracec(bool, char const*, ...)
000bb5b0 l     F .text	00000005              Trace(char const*, ...)
001cb7a0 l     F .text	0000003c              TraceInit(char const*, char const*, int)
001cb5d0 l     F .text	00000022              TraceShutdown(char const*, int)
002297f0 l     F .text	000002ac              _tr_align
0020b530 l     F .text	00000176              TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
002074d0 l     F .text	00000078              TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
00207430 l     F .text	0000005a              TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
000a48d0 l     F .text	000000ca              TransformIntoNeighbor(CDispUtilsHelper*, int, CVertIndex const&, CVertIndex&)
000a4580 l     F .text	00000124              TransformIntoSubNeighbor(CDispUtilsHelper*, int, int, CVertIndex const&, CVertIndex&)
00229aa0 l     F .text	0000077e              _tr_flush_block
001c8bb0 l     F .text	000000a1              TrimSpace(char const*, char*)
002295a0 l     F .text	000000dc              _tr_init
00229680 l     F .text	00000161              _tr_stored_block
0022a220 l     F .text	0000009b              _tr_tally
000aa020 l     F .text	000001a1              TryLocateGameInfoFile(char*, int, bool)
000bb490 l     F .text	000000fc              TTreeState::TTreeState()
000bb490 l     F .text	000000fc              TTreeState::TTreeState()
000bad60 l     F .text	0000003d              TUnzip::Close()
000ba7f0 l     F .text	0000013d              TUnzip::Find(char const*, bool, int*, ZIPENTRY*)
000ba6f0 l     F .text	000000fe              TUnzip::Get(int, ZIPENTRY*)
000b9c90 l     F .text	000003ca              TUnzip::Get(int, ZIPENTRY*) [clone .part.1]
000ba680 l     F .text	00000065              TUnzip::Open(void*, unsigned int, unsigned int)
000ba950 l     F .text	00000404              TUnzip::Unzip(int, void*, unsigned int, unsigned int)
00318560 l     O .bss	00000048              tv_autorecord
00318320 l     O .bss	00000048              tv_autoretry
003180a0 l     O .bss	00000048              tv_chatgroupsize
00318100 l     O .bss	00000048              tv_chattimelimit
00120200 l     F .text	0000018c              tv_clients(CCommand const&)
00318ac0 l     O .bss	00000024              tv_clients_command
00318440 l     O .bss	00000048              tv_debug
003185c0 l     O .bss	00000048              tv_deltacache
003186e0 l     O .bss	00000048              tv_dispatchmode
0032c7a0 l     O .bss	00000048              tv_enable
00318680 l     O .bss	00000048              tv_maxclients
00318160 l     O .bss	00000048              tv_maxrate
00122710 l     F .text	000000c8              tv_msg(CCommand const&)
00318b00 l     O .bss	00000024              tv_msg_command
00318500 l     O .bss	00000048              tv_name
00120780 l     F .text	00000014              tv_name_changed_f(IConVar*, char const*, float)
00318740 l     O .bss	00000048              tv_overridemaster
003187a0 l     O .bss	00000048              tv_password
00120f40 l     F .text	00000089              tv_record(CCommand const&)
00120e30 l     F .text	00000103              tv_record(CCommand const&) [clone .part.28]
00318a40 l     O .bss	00000024              tv_record_command
001259a0 l     F .text	00000123              tv_relay(CCommand const&)
00318980 l     O .bss	00000024              tv_relay_command
003181c0 l     O .bss	00000048              tv_relaypassword
00318620 l     O .bss	00000048              tv_relayvoice
00120d50 l     F .text	0000008d              tv_retry(CCommand const&)
00318a00 l     O .bss	00000024              tv_retry_command
00318260 l     O .bss	00000048              tv_snapshotrate
00120390 l     F .text	000003f0              tv_status(CCommand const&)
00318940 l     O .bss	00000024              tv_status_command
00120c90 l     F .text	0000006f              tv_stop(CCommand const&)
003189c0 l     O .bss	00000024              tv_stop_command
00120d00 l     F .text	00000043              tv_stoprecord(CCommand const&)
00318a80 l     O .bss	00000024              tv_stoprecord_command
003182c0 l     O .bss	00000048              tv_timeout
003183e0 l     O .bss	00000048              tv_title
00122380 l     F .text	0000003a              tv_title_changed_f(IConVar*, char const*, float)
003184a0 l     O .bss	00000048              tv_transmitall
0022eca4 l     O .rodata	0000000c              typeinfo for Base_CmdKeyValues
0025889c l     O .rodata	0000000c              typeinfo for CAppSystemGroup
0023a4fc l     O .rodata	0000000c              typeinfo for CBaseAppSystem<ICvarQuery>
002540cc l     O .rodata	0000000c              typeinfo for CBaseAppSystem<IDedicatedServerAPI>
00235760 l     O .rodata	00000028              typeinfo for CBaseClient
00236940 l     O .rodata	00000028              typeinfo for CBaseClientState
00237b48 l     O .rodata	0000000c              typeinfo for CBaseServer
00230004 l     O .rodata	00000008              typeinfo for CBlockingUDPSocket
00246310 l     O .rodata	0000000c              typeinfo for CBrushBSPIterator
0023ca74 l     O .rodata	0000000c              typeinfo for CBrushConvexInfo
002300c0 l     O .rodata	00000020              typeinfo for CBSPTreeData
00252a34 l     O .rodata	00000008              typeinfo for CCallbackBase
00252ad8 l     O .rodata	0000000c              typeinfo for CCallback<CSteam3Server, ComputeNewPlayerCompatibilityResult_t, true>
00252a90 l     O .rodata	0000000c              typeinfo for CCallback<CSteam3Server, GSPolicyResponse_t, true>
00252a78 l     O .rodata	0000000c              typeinfo for CCallback<CSteam3Server, SteamServerConnectFailure_t, true>
00252a54 l     O .rodata	0000000c              typeinfo for CCallback<CSteam3Server, SteamServersConnected_t, true>
00252a84 l     O .rodata	0000000c              typeinfo for CCallback<CSteam3Server, SteamServersDisconnected_t, true>
00252ab4 l     O .rodata	0000000c              typeinfo for CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>
00252a3c l     O .rodata	00000018              typeinfo for CCallbackImpl<1>
00252a9c l     O .rodata	00000018              typeinfo for CCallbackImpl<20>
00252ac0 l     O .rodata	00000018              typeinfo for CCallbackImpl<24>
00252a60 l     O .rodata	00000018              typeinfo for CCallbackImpl<4>
00237f6c l     O .rodata	0000000c              typeinfo for CChangeFrameList
0023bbbc l     O .rodata	0000000c              typeinfo for CClientDatatableStack
00254b70 l     O .rodata	0000000c              typeinfo for CClientEngineTools
002380c8 l     O .rodata	00000008              typeinfo for CClientFrame
002380e8 l     O .rodata	00000008              typeinfo for CClientFrameManager
00238600 l     O .rodata	00000020              typeinfo for CClientState
00230224 l     O .rodata	0000000c              typeinfo for CCoreDispInfo
0023a4e0 l     O .rodata	0000000c              typeinfo for CCvarQuery
002573fc l     O .rodata	00000008              typeinfo for CDataManagerBase
00230524 l     O .rodata	0000000c              typeinfo for CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>
0023bbd8 l     O .rodata	00000008              typeinfo for CDatatableStack
00253f28 l     O .rodata	0000000c              typeinfo for CDedicatedServerAPI
002572fc l     O .rodata	0000000c              typeinfo for CDefaultAccessor
002439e4 l     O .rodata	0000000c              typeinfo for CDefaultDataCacheClient
00230488 l     O .rodata	00000008              typeinfo for CDispCollTree
0023af80 l     O .rodata	00000020              typeinfo for CDispInfo
00230260 l     O .rodata	00000008              typeinfo for CDispUtilsHelper
00257964 l     O .rodata	00000008              typeinfo for CDllDemandLoader
002572e4 l     O .rodata	0000000c              typeinfo for CEmptyConVar
0023c318 l     O .rodata	0000000c              typeinfo for CEncodeInfo
00254328 l     O .rodata	0000000c              typeinfo for CEngine
0023dbd0 l     O .rodata	0000000c              typeinfo for CEngineBSPTree
0023c370 l     O .rodata	0000000c              typeinfo for CEngineRecipientFilter
0023ccc8 l     O .rodata	0000000c              typeinfo for CEngineReplay
00250590 l     O .rodata	0000000c              typeinfo for CEngineSingleUserFilter
0023c66c l     O .rodata	0000000c              typeinfo for CEngineSoundServer
0023c8c0 l     O .rodata	0000000c              typeinfo for CEngineTrace
0023c8e4 l     O .rodata	0000000c              typeinfo for CEngineTraceServer
0024a848 l     O .rodata	0000000c              typeinfo for CEngineUniformRandomStream
0023e8b0 l     O .rodata	00000008              typeinfo for CEntityInfo
0023ca8c l     O .rodata	0000000c              typeinfo for CEntityListAlongRay
0023e8b8 l     O .rodata	0000000c              typeinfo for CEntityReadInfo
0024d0e8 l     O .rodata	0000000c              typeinfo for CEntityWriteInfo
0023ca98 l     O .rodata	0000000c              typeinfo for CEnumerationFilter
0023d0fc l     O .rodata	00000008              typeinfo for CFileTransferMgr
002496ec l     O .rodata	00000008              typeinfo for CFmtStrN<128, false>
0023ac4c l     O .rodata	00000008              typeinfo for CFmtStrN<256, false>
0024d918 l     O .rodata	00000008              typeinfo for CFrameSnapshotManager
00243924 l     O .rodata	0000000c              typeinfo for CFunctor
002505a8 l     O .rodata	0000000c              typeinfo for CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
00254408 l     O .rodata	0000000c              typeinfo for CGame
0024cb40 l     O .rodata	00000020              typeinfo for CGameClient
0023d6f0 l     O .rodata	0000000c              typeinfo for CGameEvent
0023d710 l     O .rodata	0000000c              typeinfo for CGameEventManager
0023d8e8 l     O .rodata	0000000c              typeinfo for CGameEventManagerOld
00250254 l     O .rodata	0000000c              typeinfo for CGameServer
0023e130 l     O .rodata	0000000c              typeinfo for CHLTVClient
0023e6f0 l     O .rodata	0000000c              typeinfo for CHLTVClientState
0023ea80 l     O .rodata	0000000c              typeinfo for CHLTVDemoRecorder
0023f794 l     O .rodata	0000000c              typeinfo for CHLTVFrame
0023f7c0 l     O .rodata	00000038              typeinfo for CHLTVServer
00257f20 l     O .rodata	0000000c              typeinfo for CKeyValuesDumpContextAsDevMsg
0022ebe0 l     O .rodata	0000000c              typeinfo for CLC_BaselineAck
0022eb8c l     O .rodata	0000000c              typeinfo for CLC_ClientInfo
0022ecc4 l     O .rodata	0000000c              typeinfo for CLC_CmdKeyValues
0022ec64 l     O .rodata	0000000c              typeinfo for CLC_FileCRCCheck
0022ec84 l     O .rodata	0000000c              typeinfo for CLC_FileMD5Check
0022ec00 l     O .rodata	0000000c              typeinfo for CLC_ListenEvents
0022eba4 l     O .rodata	0000000c              typeinfo for CLC_Move
0022ec44 l     O .rodata	0000000c              typeinfo for CLC_RespondCvarValue
0022ec20 l     O .rodata	0000000c              typeinfo for CLC_SaveReplay
0022ebc0 l     O .rodata	0000000c              typeinfo for CLC_VoiceData
0024e4c4 l     O .rodata	0000000c              typeinfo for CLog
00243910 l     O .rodata	0000000c              typeinfo for CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>
002440fc l     O .rodata	0000000c              typeinfo for CMaterialProxyFactory
00246218 l     O .rodata	0000000c              typeinfo for CMDLCacheNotify
0025059c l     O .rodata	0000000c              typeinfo for CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00250a30 l     O .rodata	0000000c              typeinfo for CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00243960 l     O .rodata	0000000c              typeinfo for CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00253f04 l     O .rodata	0000000c              typeinfo for CModAppSystemGroup
00244ba0 l     O .rodata	0000000c              typeinfo for CModelInfo
00244bc0 l     O .rodata	0000000c              typeinfo for CModelInfoServer
002461f8 l     O .rodata	0000000c              typeinfo for CModelLoader
00243720 l     O .rodata	00000020              typeinfo for CModelRender
00247c64 l     O .rodata	0000000c              typeinfo for CNetChan
0022fc7c l     O .rodata	0000000c              typeinfo for CNetMessage
00246d90 l     O .rodata	0000000c              typeinfo for CNetworkStringDict
00246d84 l     O .rodata	0000000c              typeinfo for CNetworkStringFilenameDict
00246b3c l     O .rodata	0000000c              typeinfo for CNetworkStringTable
00246b68 l     O .rodata	0000000c              typeinfo for CNetworkStringTableContainer
00249c94 l     O .rodata	0000000c              typeinfo for COcclusionSystem
0024b1c0 l     O .rodata	0000000c              typeinfo for COM_IOReadBinary
002570dc l     O .rodata	0000000c              typeinfo for ConCommand
002570c4 l     O .rodata	00000008              typeinfo for ConCommandBase
00257100 l     O .rodata	00000020              typeinfo for ConVar
00257234 l     O .rodata	0000000c              typeinfo for ConVar_ServerBounded
00249efc l     O .rodata	0000000c              typeinfo for COverlayMgr
00242618 l     O .rodata	0000000c              typeinfo for CPhoneHome
0023ca5c l     O .rodata	0000000c              typeinfo for CPointContentsEnum
002436e8 l     O .rodata	0000000c              typeinfo for CPooledVBAllocator_ColorMesh
0023c30c l     O .rodata	0000000c              typeinfo for CPropCullStack
0023bba4 l     O .rodata	0000000c              typeinfo for CPropMapStack
0024a7b0 l     O .rodata	0000000c              typeinfo for CPureServerWhitelist
00249880 l     O .rodata	00000020              typeinfo for CQueuedPacketSender
00251648 l     O .rodata	0000000c              typeinfo for CRConServer
00243940 l     O .rodata	00000020              typeinfo for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
00243930 l     O .rodata	00000008              typeinfo for CRefCountServiceBase<true, CRefMT>
00231ef8 l     O .rodata	0000000c              typeinfo for CRegistry
0024a9f4 l     O .rodata	0000000c              typeinfo for CReplayDemoRecorder
0024abfc l     O .rodata	0000000c              typeinfo for CReplayFrame
0024ac20 l     O .rodata	00000030              typeinfo for CReplayServer
00246378 l     O .rodata	0000000c              typeinfo for CResourcePreload
00246340 l     O .rodata	0000000c              typeinfo for CResourcePreloadModel
0023b448 l     O .rodata	00000008              typeinfo for CSendTablePrecalc
0023bbb0 l     O .rodata	0000000c              typeinfo for CServerDatatableStack
00254b94 l     O .rodata	0000000c              typeinfo for CServerEngineTools
002510ac l     O .rodata	0000000c              typeinfo for CServerPlugin
002519cc l     O .rodata	0000000c              typeinfo for CServerRemoteAccess
0024b538 l     O .rodata	0000000c              typeinfo for CSpatialPartition
0024bc60 l     O .rodata	00000028              typeinfo for CStaticProp
0024bca0 l     O .rodata	00000028              typeinfo for CStaticPropMgr
0023c78c l     O .rodata	0000000c              typeinfo for CStatTime
002588c0 l     O .rodata	0000000c              typeinfo for CSteamAppSystemGroup
0023ca68 l     O .rodata	0000000c              typeinfo for CStudioConvexInfo
00254664 l     O .rodata	00000008              typeinfo for CTestScriptMgr
00254090 l     O .rodata	0000000c              typeinfo for CTier0AppSystem<IDedicatedServerAPI>
00254050 l     O .rodata	0000000c              typeinfo for CTier1AppSystem<IDedicatedServerAPI, 0>
00254010 l     O .rodata	0000000c              typeinfo for CTier2AppSystem<IDedicatedServerAPI, 0>
00253fd0 l     O .rodata	0000000c              typeinfo for CTier3AppSystem<IDedicatedServerAPI, 0>
00254b4c l     O .rodata	0000000c              typeinfo for CToolFrameworkInternal
00256898 l     O .rodata	0000000c              typeinfo for CTouchLinks
0023cb14 l     O .rodata	0000000c              typeinfo for CTraceFilter
0023ca80 l     O .rodata	0000000c              typeinfo for CTraceFilterHitAll
0024c2e4 l     O .rodata	0000000c              typeinfo for CTraceFilterWorldAndPropsOnly
0025688c l     O .rodata	0000000c              typeinfo for CTriggerMoved
00253184 l     O .rodata	0000000c              typeinfo for CUploadGameStats
00258398 l     O .rodata	00000008              typeinfo for CUtlCharConversion
002583b8 l     O .rodata	0000000c              typeinfo for CUtlCStringConversion
002583f4 l     O .rodata	0000000c              typeinfo for CUtlNoEscConversion
002558a8 l     O .rodata	0000000c              typeinfo for CVEngineServer
00255ccc l     O .rodata	0000000c              typeinfo for CVEngineServer22
00239884 l     O .rodata	0000000c              typeinfo for CVirtualTerrain
00255d5c l     O .rodata	0000000c              typeinfo for CVoiceServer
0024b51c l     O .rodata	00000008              typeinfo for CVoxelTree
00256448 l     O .rodata	0000000c              typeinfo for CVProfExport
0023a544 l     O .rodata	00000008              typeinfo for IAppSystem
002589a4 l     O .rodata	00000008              typeinfo for IAppSystemGroup
0023cce0 l     O .rodata	00000008              typeinfo for IBaseInterface
0023018c l     O .rodata	00000008              typeinfo for IBSPTreeData
00237f64 l     O .rodata	00000008              typeinfo for IChangeFrameList
00235b28 l     O .rodata	0000000c              typeinfo for IClient
00254db4 l     O .rodata	0000000c              typeinfo for IClientEngineTools
00235b3c l     O .rodata	0000000c              typeinfo for IClientMessageHandler
0024c2a4 l     O .rodata	00000008              typeinfo for IClientRenderable
0023c7a4 l     O .rodata	00000008              typeinfo for IClientStatsTime
0024c298 l     O .rodata	0000000c              typeinfo for IClientUnknown
0024c2ac l     O .rodata	00000008              typeinfo for ICollideable
0025732c l     O .rodata	00000008              typeinfo for IConCommandBaseAccessor
00236b90 l     O .rodata	00000008              typeinfo for IConnectionlessPacketHandler
002572b4 l     O .rodata	00000008              typeinfo for IConVar
0023cae4 l     O .rodata	00000008              typeinfo for IConvexInfo
0023a528 l     O .rodata	0000000c              typeinfo for ICvarQuery
00243b88 l     O .rodata	00000008              typeinfo for IDataCacheClient
00254108 l     O .rodata	0000000c              typeinfo for IDedicatedServerAPI
0023fb9c l     O .rodata	00000008              typeinfo for IDemoPlayer
0023eb44 l     O .rodata	00000008              typeinfo for IDemoRecorder
0023b070 l     O .rodata	00000008              typeinfo for IDispInfo
002543bc l     O .rodata	00000008              typeinfo for IEngine
0023ccd4 l     O .rodata	0000000c              typeinfo for IEngineReplay
0023c75c l     O .rodata	00000008              typeinfo for IEngineSound
0023dbfc l     O .rodata	0000000c              typeinfo for IEngineSpatialQuery
0023ca54 l     O .rodata	00000008              typeinfo for IEngineTrace
0024b200 l     O .rodata	00000008              typeinfo for IFileReadBinary
002544d4 l     O .rodata	00000008              typeinfo for IGame
0023d7e0 l     O .rodata	00000008              typeinfo for IGameEvent
00235b34 l     O .rodata	00000008              typeinfo for IGameEventListener2
0023d97c l     O .rodata	0000000c              typeinfo for IGameEventManager
0023d840 l     O .rodata	0000000c              typeinfo for IGameEventManager2
00251a20 l     O .rodata	0000000c              typeinfo for IGameServerData
0024c2d4 l     O .rodata	00000008              typeinfo for IHandleEntity
0023fb90 l     O .rodata	0000000c              typeinfo for IHLTVServer
00257f6c l     O .rodata	00000008              typeinfo for IKeyValuesDumpContext
00257ef0 l     O .rodata	0000000c              typeinfo for IKeyValuesDumpContextAsText
00244118 l     O .rodata	00000008              typeinfo for IMaterialProxyFactory
002462ec l     O .rodata	00000008              typeinfo for IMDLCacheNotify
002462e4 l     O .rodata	00000008              typeinfo for IModelLoader
00247f68 l     O .rodata	0000000c              typeinfo for INetChannel
00235b48 l     O .rodata	00000008              typeinfo for INetChannelHandler
00247f74 l     O .rodata	00000008              typeinfo for INetChannelInfo
0022fc88 l     O .rodata	00000008              typeinfo for INetMessage
00235b50 l     O .rodata	00000008              typeinfo for INetMessageHandler
00246d7c l     O .rodata	00000008              typeinfo for INetworkStringDict
00246d6c l     O .rodata	00000008              typeinfo for INetworkStringTable
00246d74 l     O .rodata	00000008              typeinfo for INetworkStringTableContainer
00249d20 l     O .rodata	00000008              typeinfo for IOcclusionSystem
00249f8c l     O .rodata	00000008              typeinfo for IOverlayMgr
0023cac8 l     O .rodata	00000008              typeinfo for IPartitionEnumerator
00242634 l     O .rodata	00000008              typeinfo for IPhoneHome
00243900 l     O .rodata	00000008              typeinfo for IPooledVBAllocator
0024a7fc l     O .rodata	00000008              typeinfo for IPureServerWhitelist
00249920 l     O .rodata	00000008              typeinfo for IQueuedPacketSender
002387e0 l     O .rodata	00000008              typeinfo for IRecipientFilter
0024391c l     O .rodata	00000008              typeinfo for IRefCounted
00231f98 l     O .rodata	00000008              typeinfo for IRegistry
0024ae90 l     O .rodata	0000000c              typeinfo for IReplayServer
00246398 l     O .rodata	00000008              typeinfo for IResourcePreload
00237d28 l     O .rodata	0000000c              typeinfo for IServer
00254dc0 l     O .rodata	0000000c              typeinfo for IServerEngineTools
00236b98 l     O .rodata	0000000c              typeinfo for IServerMessageHandler
00251124 l     O .rodata	00000008              typeinfo for IServerPluginHelpers
00251684 l     O .rodata	00000008              typeinfo for ISocketCreatorListener
00230194 l     O .rodata	00000008              typeinfo for ISpatialLeafEnumerator
0024b7a8 l     O .rodata	00000008              typeinfo for ISpatialPartition
0024b79c l     O .rodata	0000000c              typeinfo for ISpatialPartitionInternal
0023dc20 l     O .rodata	00000008              typeinfo for ISpatialQuery
0024c2dc l     O .rodata	00000008              typeinfo for IStaticPropMgr
0024c2bc l     O .rodata	0000000c              typeinfo for IStaticPropMgrClient
0024c2b4 l     O .rodata	00000008              typeinfo for IStaticPropMgrEngine
0024c2c8 l     O .rodata	0000000c              typeinfo for IStaticPropMgrServer
00254da8 l     O .rodata	0000000c              typeinfo for IToolFrameworkInternal
0023cb80 l     O .rodata	00000008              typeinfo for ITraceFilter
0024a874 l     O .rodata	00000008              typeinfo for IUniformRandomStream
002531a4 l     O .rodata	00000008              typeinfo for IUploadGameStats
00255ab8 l     O .rodata	00000008              typeinfo for IVEngineServer
002398a4 l     O .rodata	00000008              typeinfo for IVirtualMeshEvent
00244fe0 l     O .rodata	00000008              typeinfo for IVModelInfo
00244fd4 l     O .rodata	0000000c              typeinfo for IVModelInfoClient
00243908 l     O .rodata	00000008              typeinfo for IVModelRender
00255d44 l     O .rodata	00000008              typeinfo for IVoiceServer
00256464 l     O .rodata	00000008              typeinfo for IVProfExport
0022f00c l     O .rodata	0000000c              typeinfo for MM_Checkpoint
0022efb0 l     O .rodata	0000000c              typeinfo for MM_ClientInfo
0022ef94 l     O .rodata	0000000c              typeinfo for MM_Heartbeat
0022f02c l     O .rodata	0000000c              typeinfo for MM_JoinResponse
0022f048 l     O .rodata	0000000c              typeinfo for MM_Migrate
0022eff0 l     O .rodata	0000000c              typeinfo for MM_Mutelist
0022efd4 l     O .rodata	0000000c              typeinfo for MM_RegisterResponse
0022eb18 l     O .rodata	0000000c              typeinfo for NET_SetConVar
0022eb6c l     O .rodata	0000000c              typeinfo for NET_SignonState
0022eb34 l     O .rodata	0000000c              typeinfo for NET_StringCmd
0022eb4c l     O .rodata	0000000c              typeinfo for NET_Tick
00231750 l     O .rodata	00000008              typeinfo for SendProp
002586a0 l     O .rodata	0000000c              typeinfo for snappy::ByteArraySource
00258660 l     O .rodata	00000008              typeinfo for snappy::Sink
0025867c l     O .rodata	00000008              typeinfo for snappy::Source
002586e4 l     O .rodata	0000000c              typeinfo for snappy::UncheckedByteArraySink
0022eea0 l     O .rodata	0000000c              typeinfo for SVC_BSPDecal
0022ed54 l     O .rodata	0000000c              typeinfo for SVC_ClassInfo
0022ece4 l     O .rodata	0000000c              typeinfo for SVC_CmdKeyValues
0022ed94 l     O .rodata	0000000c              typeinfo for SVC_CreateStringTable
0022ee84 l     O .rodata	0000000c              typeinfo for SVC_CrosshairAngle
0022eefc l     O .rodata	0000000c              typeinfo for SVC_EntityMessage
0022ee60 l     O .rodata	0000000c              typeinfo for SVC_FixAngle
0022eebc l     O .rodata	0000000c              typeinfo for SVC_GameEvent
0022ef78 l     O .rodata	0000000c              typeinfo for SVC_GameEventList
0022f068 l     O .rodata	0000000c              typeinfo for SVC_GetCvarValue
0022ef58 l     O .rodata	0000000c              typeinfo for SVC_Menu
0022ef20 l     O .rodata	0000000c              typeinfo for SVC_PacketEntities
0022ee28 l     O .rodata	0000000c              typeinfo for SVC_Prefetch
0022ecfc l     O .rodata	0000000c              typeinfo for SVC_Print
0022ed38 l     O .rodata	0000000c              typeinfo for SVC_SendTable
0022ed1c l     O .rodata	0000000c              typeinfo for SVC_ServerInfo
0022ed70 l     O .rodata	0000000c              typeinfo for SVC_SetPause
0022ee44 l     O .rodata	0000000c              typeinfo for SVC_SetView
0022ee0c l     O .rodata	0000000c              typeinfo for SVC_Sounds
0022ef40 l     O .rodata	0000000c              typeinfo for SVC_TempEntities
0022edb8 l     O .rodata	0000000c              typeinfo for SVC_UpdateStringTable
0022eedc l     O .rodata	0000000c              typeinfo for SVC_UserMessage
0022edf0 l     O .rodata	0000000c              typeinfo for SVC_VoiceData
0022edd4 l     O .rodata	0000000c              typeinfo for SVC_VoiceInit
00232298 l     O .rodata	00000008              typeinfo for VAllocator
00232278 l     O .rodata	0000000c              typeinfo for VStdAllocator
0022ec90 l     O .rodata	00000014              typeinfo name for Base_CmdKeyValues
00258889 l     O .rodata	00000012              typeinfo name for CAppSystemGroup
0023a508 l     O .rodata	0000001f              typeinfo name for CBaseAppSystem<ICvarQuery>
002540e0 l     O .rodata	00000028              typeinfo name for CBaseAppSystem<IDedicatedServerAPI>
0023574f l     O .rodata	0000000e              typeinfo name for CBaseClient
00236918 l     O .rodata	00000013              typeinfo name for CBaseClientState
00237b3a l     O .rodata	0000000e              typeinfo name for CBaseServer
0022ffef l     O .rodata	00000015              typeinfo name for CBlockingUDPSocket
0024634c l     O .rodata	00000014              typeinfo name for CBrushBSPIterator
0023caec l     O .rodata	00000013              typeinfo name for CBrushConvexInfo
00230092 l     O .rodata	0000000f              typeinfo name for CBSPTreeData
00252ae4 l     O .rodata	00000010              typeinfo name for CCallbackBase
00252cc0 l     O .rodata	00000047              typeinfo name for CCallback<CSteam3Server, ComputeNewPlayerCompatibilityResult_t, true>
00252c00 l     O .rodata	00000034              typeinfo name for CCallback<CSteam3Server, GSPolicyResponse_t, true>
00252b80 l     O .rodata	0000003d              typeinfo name for CCallback<CSteam3Server, SteamServerConnectFailure_t, true>
00252b20 l     O .rodata	00000039              typeinfo name for CCallback<CSteam3Server, SteamServersConnected_t, true>
00252bc0 l     O .rodata	0000003c              typeinfo name for CCallback<CSteam3Server, SteamServersDisconnected_t, true>
00252c60 l     O .rodata	0000003e              typeinfo name for CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>
00252af4 l     O .rodata	00000016              typeinfo name for CCallbackImpl<1>
00252c34 l     O .rodata	00000017              typeinfo name for CCallbackImpl<20>
00252c9e l     O .rodata	00000017              typeinfo name for CCallbackImpl<24>
00252b59 l     O .rodata	00000016              typeinfo name for CCallbackImpl<4>
00237f8b l     O .rodata	00000013              typeinfo name for CChangeFrameList
0023bbf8 l     O .rodata	00000018              typeinfo name for CClientDatatableStack
00254b58 l     O .rodata	00000015              typeinfo name for CClientEngineTools
002380b7 l     O .rodata	0000000f              typeinfo name for CClientFrame
002380d0 l     O .rodata	00000016              typeinfo name for CClientFrameManager
002385db l     O .rodata	0000000f              typeinfo name for CClientState
00230214 l     O .rodata	00000010              typeinfo name for CCoreDispInfo
0023a4ec l     O .rodata	0000000d              typeinfo name for CCvarQuery
002573e9 l     O .rodata	00000013              typeinfo name for CDataManagerBase
00230540 l     O .rodata	00000037              typeinfo name for CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>
0023bc10 l     O .rodata	00000012              typeinfo name for CDatatableStack
00253f10 l     O .rodata	00000016              typeinfo name for CDedicatedServerAPI
00257317 l     O .rodata	00000013              typeinfo name for CDefaultAccessor
00243b6c l     O .rodata	0000001a              typeinfo name for CDefaultDataCacheClient
00230477 l     O .rodata	00000010              typeinfo name for CDispCollTree
0023af57 l     O .rodata	0000000b              typeinfo name for CDispInfo
00230268 l     O .rodata	00000013              typeinfo name for CDispUtilsHelper
0025794f l     O .rodata	00000013              typeinfo name for CDllDemandLoader
00257308 l     O .rodata	0000000f              typeinfo name for CEmptyConVar
0023c335 l     O .rodata	0000000e              typeinfo name for CEncodeInfo
0025431e l     O .rodata	00000009              typeinfo name for CEngine
0023dbbd l     O .rodata	00000011              typeinfo name for CEngineBSPTree
0023c354 l     O .rodata	00000019              typeinfo name for CEngineRecipientFilter
0023cce8 l     O .rodata	00000010              typeinfo name for CEngineReplay
002505b4 l     O .rodata	0000001a              typeinfo name for CEngineSingleUserFilter
0023c656 l     O .rodata	00000015              typeinfo name for CEngineSoundServer
0023c8b1 l     O .rodata	0000000f              typeinfo name for CEngineTrace
0023c8cc l     O .rodata	00000015              typeinfo name for CEngineTraceServer
0024a854 l     O .rodata	0000001d              typeinfo name for CEngineUniformRandomStream
0023e8c4 l     O .rodata	0000000e              typeinfo name for CEntityInfo
0023cb20 l     O .rodata	00000016              typeinfo name for CEntityListAlongRay
0023e8d2 l     O .rodata	00000012              typeinfo name for CEntityReadInfo
0024d0f4 l     O .rodata	00000013              typeinfo name for CEntityWriteInfo
0023cb36 l     O .rodata	00000015              typeinfo name for CEnumerationFilter
0023d0e8 l     O .rodata	00000013              typeinfo name for CFileTransferMgr
002496f4 l     O .rodata	00000016              typeinfo name for CFmtStrN<128, false>
0023ac54 l     O .rodata	00000016              typeinfo name for CFmtStrN<256, false>
0024d900 l     O .rodata	00000018              typeinfo name for CFrameSnapshotManager
002439fe l     O .rodata	0000000a              typeinfo name for CFunctor
002506a0 l     O .rodata	00000051              typeinfo name for CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
00254400 l     O .rodata	00000007              typeinfo name for CGame
0024cb13 l     O .rodata	0000000e              typeinfo name for CGameClient
0023d6e0 l     O .rodata	0000000d              typeinfo name for CGameEvent
0023d6fc l     O .rodata	00000014              typeinfo name for CGameEventManager
0023d8d1 l     O .rodata	00000017              typeinfo name for CGameEventManagerOld
00250243 l     O .rodata	0000000e              typeinfo name for CGameServer
0023e120 l     O .rodata	0000000e              typeinfo name for CHLTVClient
0023e6dc l     O .rodata	00000013              typeinfo name for CHLTVClientState
0023ea6c l     O .rodata	00000014              typeinfo name for CHLTVDemoRecorder
0023f784 l     O .rodata	0000000d              typeinfo name for CHLTVFrame
0023f7a0 l     O .rodata	0000000e              typeinfo name for CHLTVServer
00257f00 l     O .rodata	00000020              typeinfo name for CKeyValuesDumpContextAsDevMsg
0022ebcc l     O .rodata	00000012              typeinfo name for CLC_BaselineAck
0022eb78 l     O .rodata	00000011              typeinfo name for CLC_ClientInfo
0022ecb0 l     O .rodata	00000013              typeinfo name for CLC_CmdKeyValues
0022ec50 l     O .rodata	00000013              typeinfo name for CLC_FileCRCCheck
0022ec70 l     O .rodata	00000013              typeinfo name for CLC_FileMD5Check
0022ebec l     O .rodata	00000013              typeinfo name for CLC_ListenEvents
0022eb98 l     O .rodata	0000000a              typeinfo name for CLC_Move
0022ec2c l     O .rodata	00000017              typeinfo name for CLC_RespondCvarValue
0022ec0c l     O .rodata	00000011              typeinfo name for CLC_SaveReplay
0022ebb0 l     O .rodata	00000010              typeinfo name for CLC_VoiceData
0024e4bb l     O .rodata	00000006              typeinfo name for CLog
002439a0 l     O .rodata	00000043              typeinfo name for CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>
002440e1 l     O .rodata	00000018              typeinfo name for CMaterialProxyFactory
00246204 l     O .rodata	00000012              typeinfo name for CMDLCacheNotify
002505e0 l     O .rodata	000000ad              typeinfo name for CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00250a40 l     O .rodata	000000ab              typeinfo name for CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00243aa0 l     O .rodata	000000cc              typeinfo name for CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00253eec l     O .rodata	00000015              typeinfo name for CModAppSystemGroup
00244b92 l     O .rodata	0000000d              typeinfo name for CModelInfo
00244bac l     O .rodata	00000013              typeinfo name for CModelInfoServer
002461e9 l     O .rodata	0000000f              typeinfo name for CModelLoader
002436f4 l     O .rodata	0000000f              typeinfo name for CModelRender
00247c59 l     O .rodata	0000000a              typeinfo name for CNetChan
0022fc90 l     O .rodata	0000000e              typeinfo name for CNetMessage
00246e05 l     O .rodata	00000015              typeinfo name for CNetworkStringDict
00246de8 l     O .rodata	0000001d              typeinfo name for CNetworkStringFilenameDict
00246b26 l     O .rodata	00000016              typeinfo name for CNetworkStringTable
00246b48 l     O .rodata	0000001f              typeinfo name for CNetworkStringTableContainer
00249c81 l     O .rodata	00000013              typeinfo name for COcclusionSystem
0024b1ab l     O .rodata	00000013              typeinfo name for COM_IOReadBinary
002570cc l     O .rodata	0000000d              typeinfo name for ConCommand
002570b1 l     O .rodata	00000011              typeinfo name for ConCommandBase
002570e8 l     O .rodata	00000008              typeinfo name for ConVar
002572cc l     O .rodata	00000017              typeinfo name for ConVar_ServerBounded
00249eec l     O .rodata	0000000e              typeinfo name for COverlayMgr
00242624 l     O .rodata	0000000d              typeinfo name for CPhoneHome
0023cab3 l     O .rodata	00000015              typeinfo name for CPointContentsEnum
002436c8 l     O .rodata	0000001f              typeinfo name for CPooledVBAllocator_ColorMesh
0023c324 l     O .rodata	00000011              typeinfo name for CPropCullStack
0023bbc8 l     O .rodata	00000010              typeinfo name for CPropMapStack
0024a798 l     O .rodata	00000017              typeinfo name for CPureServerWhitelist
0024985a l     O .rodata	00000016              typeinfo name for CQueuedPacketSender
00251637 l     O .rodata	0000000e              typeinfo name for CRConServer
00243a60 l     O .rodata	0000003d              typeinfo name for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
00243a20 l     O .rodata	00000024              typeinfo name for CRefCountServiceBase<true, CRefMT>
00231eea l     O .rodata	0000000b              typeinfo name for CRegistry
0024a9dd l     O .rodata	00000016              typeinfo name for CReplayDemoRecorder
0024abeb l     O .rodata	0000000f              typeinfo name for CReplayFrame
0024ac08 l     O .rodata	00000010              typeinfo name for CReplayServer
00246384 l     O .rodata	00000013              typeinfo name for CResourcePreload
00246360 l     O .rodata	00000018              typeinfo name for CResourcePreloadModel
0023b432 l     O .rodata	00000014              typeinfo name for CSendTablePrecalc
0023bbe0 l     O .rodata	00000018              typeinfo name for CServerDatatableStack
00254b7c l     O .rodata	00000015              typeinfo name for CServerEngineTools
0025109c l     O .rodata	00000010              typeinfo name for CServerPlugin
002519b4 l     O .rodata	00000016              typeinfo name for CServerRemoteAccess
0024b524 l     O .rodata	00000014              typeinfo name for CSpatialPartition
0024bc34 l     O .rodata	0000000e              typeinfo name for CStaticProp
0024bc88 l     O .rodata	00000011              typeinfo name for CStaticPropMgr
0023c798 l     O .rodata	0000000b              typeinfo name for CStatTime
002588a8 l     O .rodata	00000017              typeinfo name for CSteamAppSystemGroup
0023cad0 l     O .rodata	00000014              typeinfo name for CStudioConvexInfo
00254651 l     O .rodata	00000011              typeinfo name for CTestScriptMgr
002540a0 l     O .rodata	00000029              typeinfo name for CTier0AppSystem<IDedicatedServerAPI>
00254060 l     O .rodata	0000002d              typeinfo name for CTier1AppSystem<IDedicatedServerAPI, 0>
00254020 l     O .rodata	0000002d              typeinfo name for CTier2AppSystem<IDedicatedServerAPI, 0>
00253fe0 l     O .rodata	0000002d              typeinfo name for CTier3AppSystem<IDedicatedServerAPI, 0>
00254b32 l     O .rodata	00000019              typeinfo name for CToolFrameworkInternal
002568b4 l     O .rodata	0000000e              typeinfo name for CTouchLinks
0023cb70 l     O .rodata	0000000f              typeinfo name for CTraceFilter
0023caff l     O .rodata	00000015              typeinfo name for CTraceFilterHitAll
0024c3a0 l     O .rodata	00000020              typeinfo name for CTraceFilterWorldAndPropsOnly
002568a4 l     O .rodata	00000010              typeinfo name for CTriggerMoved
00253190 l     O .rodata	00000013              typeinfo name for CUploadGameStats
00258380 l     O .rodata	00000015              typeinfo name for CUtlCharConversion
002583a0 l     O .rodata	00000018              typeinfo name for CUtlCStringConversion
00258400 l     O .rodata	00000016              typeinfo name for CUtlNoEscConversion
00255894 l     O .rodata	00000011              typeinfo name for CVEngineServer
00255cd8 l     O .rodata	00000013              typeinfo name for CVEngineServer22
00239890 l     O .rodata	00000012              typeinfo name for CVirtualTerrain
00255d68 l     O .rodata	0000000f              typeinfo name for CVoiceServer
0024b50f l     O .rodata	0000000d              typeinfo name for CVoxelTree
00256454 l     O .rodata	0000000f              typeinfo name for CVProfExport
0023a54c l     O .rodata	0000000d              typeinfo name for IAppSystem
002589ac l     O .rodata	00000012              typeinfo name for IAppSystemGroup
0023cd08 l     O .rodata	00000011              typeinfo name for IBaseInterface
0023019c l     O .rodata	0000000f              typeinfo name for IBSPTreeData
00237f78 l     O .rodata	00000013              typeinfo name for IChangeFrameList
00235b58 l     O .rodata	00000009              typeinfo name for IClient
00254de5 l     O .rodata	00000015              typeinfo name for IClientEngineTools
00235b77 l     O .rodata	00000018              typeinfo name for IClientMessageHandler
0024c301 l     O .rodata	00000014              typeinfo name for IClientRenderable
0023c7ac l     O .rodata	00000013              typeinfo name for IClientStatsTime
0024c2f0 l     O .rodata	00000011              typeinfo name for IClientUnknown
0024c315 l     O .rodata	0000000f              typeinfo name for ICollideable
00257334 l     O .rodata	0000001a              typeinfo name for IConCommandBaseAccessor
00236ba4 l     O .rodata	0000001f              typeinfo name for IConnectionlessPacketHandler
002572f0 l     O .rodata	00000009              typeinfo name for IConVar
0023cb62 l     O .rodata	0000000e              typeinfo name for IConvexInfo
0023a534 l     O .rodata	0000000d              typeinfo name for ICvarQuery
00243b90 l     O .rodata	00000013              typeinfo name for IDataCacheClient
00254114 l     O .rodata	00000016              typeinfo name for IDedicatedServerAPI
0023fbb2 l     O .rodata	0000000e              typeinfo name for IDemoPlayer
0023eb4c l     O .rodata	00000010              typeinfo name for IDemoRecorder
0023b078 l     O .rodata	0000000b              typeinfo name for IDispInfo
002543c4 l     O .rodata	00000009              typeinfo name for IEngine
0023ccf8 l     O .rodata	00000010              typeinfo name for IEngineReplay
0023c764 l     O .rodata	0000000f              typeinfo name for IEngineSound
0023dc08 l     O .rodata	00000016              typeinfo name for IEngineSpatialQuery
0023caa4 l     O .rodata	0000000f              typeinfo name for IEngineTrace
0024b208 l     O .rodata	00000012              typeinfo name for IFileReadBinary
002544dc l     O .rodata	00000007              typeinfo name for IGame
0023d84c l     O .rodata	0000000d              typeinfo name for IGameEvent
00235b61 l     O .rodata	00000016              typeinfo name for IGameEventListener2
0023d988 l     O .rodata	00000014              typeinfo name for IGameEventManager
0023d859 l     O .rodata	00000015              typeinfo name for IGameEventManager2
00251a2c l     O .rodata	00000012              typeinfo name for IGameServerData
0024c369 l     O .rodata	00000010              typeinfo name for IHandleEntity
0023fba4 l     O .rodata	0000000e              typeinfo name for IHLTVServer
00257f74 l     O .rodata	00000018              typeinfo name for IKeyValuesDumpContext
00257ed0 l     O .rodata	0000001e              typeinfo name for IKeyValuesDumpContextAsText
00244120 l     O .rodata	00000018              typeinfo name for IMaterialProxyFactory
0024632b l     O .rodata	00000012              typeinfo name for IMDLCacheNotify
0024631c l     O .rodata	0000000f              typeinfo name for IModelLoader
00247f7c l     O .rodata	0000000e              typeinfo name for INetChannel
00235b8f l     O .rodata	00000015              typeinfo name for INetChannelHandler
00247f8a l     O .rodata	00000012              typeinfo name for INetChannelInfo
0022fc9e l     O .rodata	0000000e              typeinfo name for INetMessage
00235ba4 l     O .rodata	00000015              typeinfo name for INetMessageHandler
00246dd3 l     O .rodata	00000015              typeinfo name for INetworkStringDict
00246d9c l     O .rodata	00000016              typeinfo name for INetworkStringTable
00246db4 l     O .rodata	0000001f              typeinfo name for INetworkStringTableContainer
00249d28 l     O .rodata	00000013              typeinfo name for IOcclusionSystem
00249f94 l     O .rodata	0000000e              typeinfo name for IOverlayMgr
0023cb4b l     O .rodata	00000017              typeinfo name for IPartitionEnumerator
0024263c l     O .rodata	0000000d              typeinfo name for IPhoneHome
0024396c l     O .rodata	00000015              typeinfo name for IPooledVBAllocator
0024a804 l     O .rodata	00000017              typeinfo name for IPureServerWhitelist
00249928 l     O .rodata	00000016              typeinfo name for IQueuedPacketSender
002387e8 l     O .rodata	00000013              typeinfo name for IRecipientFilter
002439f0 l     O .rodata	0000000e              typeinfo name for IRefCounted
00231fa0 l     O .rodata	0000000b              typeinfo name for IRegistry
0024ae9c l     O .rodata	00000010              typeinfo name for IReplayServer
002463a0 l     O .rodata	00000013              typeinfo name for IResourcePreload
00237d34 l     O .rodata	00000009              typeinfo name for IServer
00254dfa l     O .rodata	00000015              typeinfo name for IServerEngineTools
00236bc3 l     O .rodata	00000018              typeinfo name for IServerMessageHandler
0025112c l     O .rodata	00000017              typeinfo name for IServerPluginHelpers
0025168c l     O .rodata	00000019              typeinfo name for ISocketCreatorListener
002301ab l     O .rodata	00000019              typeinfo name for ISpatialLeafEnumerator
0024b7cc l     O .rodata	00000014              typeinfo name for ISpatialPartition
0024b7b0 l     O .rodata	0000001c              typeinfo name for ISpatialPartitionInternal
0023dc28 l     O .rodata	00000010              typeinfo name for ISpatialQuery
0024c379 l     O .rodata	00000011              typeinfo name for IStaticPropMgr
0024c33b l     O .rodata	00000017              typeinfo name for IStaticPropMgrClient
0024c324 l     O .rodata	00000017              typeinfo name for IStaticPropMgrEngine
0024c352 l     O .rodata	00000017              typeinfo name for IStaticPropMgrServer
00254dcc l     O .rodata	00000019              typeinfo name for IToolFrameworkInternal
0023cb88 l     O .rodata	0000000f              typeinfo name for ITraceFilter
0024a87c l     O .rodata	00000017              typeinfo name for IUniformRandomStream
002531ac l     O .rodata	00000013              typeinfo name for IUploadGameStats
00255cb8 l     O .rodata	00000011              typeinfo name for IVEngineServer
002398ac l     O .rodata	00000014              typeinfo name for IVirtualMeshEvent
00244ffc l     O .rodata	0000000e              typeinfo name for IVModelInfo
00244fe8 l     O .rodata	00000014              typeinfo name for IVModelInfoClient
00243981 l     O .rodata	00000010              typeinfo name for IVModelRender
00255d4c l     O .rodata	0000000f              typeinfo name for IVoiceServer
0025646c l     O .rodata	0000000f              typeinfo name for IVProfExport
0022effc l     O .rodata	00000010              typeinfo name for MM_Checkpoint
0022efa0 l     O .rodata	00000010              typeinfo name for MM_ClientInfo
0022ef84 l     O .rodata	0000000f              typeinfo name for MM_Heartbeat
0022f018 l     O .rodata	00000012              typeinfo name for MM_JoinResponse
0022f038 l     O .rodata	0000000d              typeinfo name for MM_Migrate
0022efe0 l     O .rodata	0000000e              typeinfo name for MM_Mutelist
0022efbc l     O .rodata	00000016              typeinfo name for MM_RegisterResponse
0022eb05 l     O .rodata	00000010              typeinfo name for NET_SetConVar
0022eb58 l     O .rodata	00000012              typeinfo name for NET_SignonState
0022eb24 l     O .rodata	00000010              typeinfo name for NET_StringCmd
0022eb40 l     O .rodata	0000000a              typeinfo name for NET_Tick
00231744 l     O .rodata	0000000a              typeinfo name for SendProp
00258684 l     O .rodata	0000001b              typeinfo name for snappy::ByteArraySource
00258650 l     O .rodata	0000000f              typeinfo name for snappy::Sink
00258668 l     O .rodata	00000011              typeinfo name for snappy::Source
002586c0 l     O .rodata	00000022              typeinfo name for snappy::UncheckedByteArraySink
0022ee90 l     O .rodata	0000000f              typeinfo name for SVC_BSPDecal
0022ed44 l     O .rodata	00000010              typeinfo name for SVC_ClassInfo
0022ecd0 l     O .rodata	00000013              typeinfo name for SVC_CmdKeyValues
0022ed7c l     O .rodata	00000018              typeinfo name for SVC_CreateStringTable
0022ee6c l     O .rodata	00000015              typeinfo name for SVC_CrosshairAngle
0022eee8 l     O .rodata	00000014              typeinfo name for SVC_EntityMessage
0022ee50 l     O .rodata	0000000f              typeinfo name for SVC_FixAngle
0022eeac l     O .rodata	00000010              typeinfo name for SVC_GameEvent
0022ef64 l     O .rodata	00000014              typeinfo name for SVC_GameEventList
0022f054 l     O .rodata	00000013              typeinfo name for SVC_GetCvarValue
0022ef4c l     O .rodata	0000000a              typeinfo name for SVC_Menu
0022ef08 l     O .rodata	00000015              typeinfo name for SVC_PacketEntities
0022ee18 l     O .rodata	0000000f              typeinfo name for SVC_Prefetch
0022ecf0 l     O .rodata	0000000b              typeinfo name for SVC_Print
0022ed28 l     O .rodata	00000010              typeinfo name for SVC_SendTable
0022ed08 l     O .rodata	00000011              typeinfo name for SVC_ServerInfo
0022ed60 l     O .rodata	0000000f              typeinfo name for SVC_SetPause
0022ee34 l     O .rodata	0000000e              typeinfo name for SVC_SetView
0022edfc l     O .rodata	0000000d              typeinfo name for SVC_Sounds
0022ef2c l     O .rodata	00000013              typeinfo name for SVC_TempEntities
0022eda0 l     O .rodata	00000018              typeinfo name for SVC_UpdateStringTable
0022eec8 l     O .rodata	00000012              typeinfo name for SVC_UserMessage
0022ede0 l     O .rodata	00000010              typeinfo name for SVC_VoiceData
0022edc4 l     O .rodata	00000010              typeinfo name for SVC_VoiceInit
002322a0 l     O .rodata	0000000d              typeinfo name for VAllocator
00232268 l     O .rodata	00000010              typeinfo name for VStdAllocator
000bfd80 l     F .text	00000110              TZip::AddCentral()
000bfd10 l     F .text	00000064              TZip::Add(char const*, void*, unsigned int, unsigned int)
000bf530 l     F .text	000007dc              TZip::Add(char const*, void*, unsigned int, unsigned int) [clone .part.7]
000bfe90 l     F .text	00000054              TZip::Close()
000bef40 l     F .text	000000a7              TZip::Create(void*, unsigned int, unsigned int)
000bfef0 l     F .text	0000005a              TZip::GetMemory(void**, unsigned long*)
000bf370 l     F .text	00000034              TZip::iclose()
000bf3b0 l     F .text	000000fb              TZip::ideflate(zlist*)
000bf4b0 l     F .text	00000075              TZip::istore()
000bf260 l     F .text	00000060              TZip::open_dir()
000bf140 l     F .text	00000046              TZip::open_file(char const*)
000bf190 l     F .text	0000004b              TZip::open_handle(void*, unsigned int)
000bf1e0 l     F .text	0000007c              TZip::open_mem(void*, unsigned int)
000bf0e0 l     F .text	0000005b              TZip::oseek(unsigned int)
000bf2c0 l     F .text	00000088              TZip::read(char*, unsigned int)
000bf090 l     F .text	00000046              TZip::sflush(void*, char const*, unsigned int*)
000bf350 l     F .text	00000011              TZip::sread(TState&, char*, unsigned int)
000bf070 l     F .text	00000016              TZip::swrite(void*, char const*, unsigned int)
000beff0 l     F .text	0000007d              TZip::write(char const*, unsigned int)
000b8230 l     F .text	00000142              ucrc32(unsigned long, unsigned char const*, unsigned int)
0022a444 l     F .text	00000103              __udivdi3
000a5ce0 l     F .text	000000a2              UnallowVerts_R(CDispUtilsHelper*, CVertIndex const&, int&)
00137010 l     F .text	00000052              unbindall(CCommand const&)
0031c2a0 l     O .bss	00000024              unbindall_command
00137070 l     F .text	000000a1              unbind(CCommand const&)
0031c220 l     O .bss	00000024              unbind_command
00136e40 l     F .text	00000005              unbind_mac(CCommand const&)
0031c260 l     O .bss	00000024              unbind_mac_command
001c3890 l     F .text	0000004b              UnloadEntityDLLs()
0012c6c0 l     F .text	0000003d              unpause(CCommand const&)
0031a860 l     O .bss	00000024              unpause_command
0038b3e0 l     O .bss	00000004              unseen_objects
001570c0 l     F .text	000000e9              unsigned int CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, CNetworkStringTableItem, CaselessStringHashFunctor, UTLConstStringCaselessStringEqualFunctor<char>, unsigned short, char const*>::EqualProxy, char const*>::DoLookup<char const*>(char const*, unsigned int, unsigned int*) const [clone .part.89] [clone .constprop.95]
001f6e30 l     F .text	0000016f              unsigned int CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoLookup<char const*>(char const*, unsigned int, unsigned int*) const [clone .part.56] [clone .constprop.58]
00147090 l     F .text	0000010a              unsigned int CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, void*>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, void*>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, void*>::EqualProxy, void*>::DoLookup<model_t*>(model_t*, unsigned int, unsigned int*) const
00146f90 l     F .text	000000fa              unsigned int CUtlHashtable<CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, void*>::IndirectIndex, empty_t, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, void*>::HashProxy, CUtlStableHashtable<model_t*, empty_t, CModelInfo::ModelFileHandleHash, CModelInfo::ModelFileHandleEq, short, void*>::EqualProxy, void*>::DoLookup<void*>(void*, unsigned int, unsigned int*) const
001537a0 l     F .text	000000b8              unsigned int CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoInsert<model_t*>(model_t*, unsigned int)
00147a10 l     F .text	000000b7              unsigned int CUtlHashtable<model_t*, CModelLoader::CDynamicModelInfo, DefaultHashFunctor<model_t*>, DefaultEqualFunctor<model_t*>, undefined_t>::DoLookup<model_t*>(model_t*, unsigned int, unsigned int*) const [clone .part.116]
00147ad0 l     F .text	000000b7              unsigned int CUtlHashtable<unsigned int, int, DefaultHashFunctor<unsigned int>, DefaultEqualFunctor<unsigned int>, undefined_t>::DoLookup<unsigned int>(unsigned int, unsigned int, unsigned int*) const [clone .part.165]
0022c0af l     F .text	00000080              _Unwind_Backtrace
0022bd46 l     F .text	00000005              _Unwind_DebugHook
0022c093 l     F .text	0000001c              _Unwind_DeleteException
0022bc3d l     F .text	00000032              _Unwind_FindEnclosingFunction
0022d55e l     F .text	0000017a              _Unwind_Find_FDE
0022be80 l     F .text	000000ab              _Unwind_ForcedUnwind
0022ba3f l     F .text	000000bd              _Unwind_ForcedUnwind_Phase2
0022bb97 l     F .text	0000000b              _Unwind_GetCFA
0022bc6f l     F .text	0000000b              _Unwind_GetDataRelBase
0022af90 l     F .text	0000004c              _Unwind_GetGR
0022bbf8 l     F .text	0000000b              _Unwind_GetIP
0022bc03 l     F .text	00000016              _Unwind_GetIPInfo
0022bc27 l     F .text	0000000b              _Unwind_GetLanguageSpecificData
0022bc32 l     F .text	0000000b              _Unwind_GetRegionStart
0022bc7a l     F .text	0000000b              _Unwind_GetTextRelBase
0022c912 l     F .text	00000492              _Unwind_IteratePhdrCallback
0022bd4b l     F .text	00000135              _Unwind_RaiseException
0022bafc l     F .text	0000009b              _Unwind_RaiseException_Phase2
0022bf2b l     F .text	000000a7              _Unwind_Resume
0022bfd2 l     F .text	000000c1              _Unwind_Resume_or_Rethrow
0022bba2 l     F .text	00000056              _Unwind_SetGR
0022bc19 l     F .text	0000000e              _Unwind_SetIP
0022a6b0 l     F .text	00000036              _Unwind_SetSpColumn
000ba390 l     F .text	00000097              unzCloseCurrentFile(unz_s*)
000ba580 l     F .text	0000003e              unzClose(unz_s*)
000ba290 l     F .text	00000027              unzeof(unz_s*)
000b9590 l     F .text	0000004c              unzGetCurrentFileInfo(unz_s*, unz_file_info_s*, char*, unsigned long, void*, unsigned long, char*, unsigned long)
000ba5c0 l     F .text	000000b7              unzGetGlobalComment(unz_s*, char*, unsigned long)
000b90a0 l     F .text	00000025              unzGetGlobalInfo(unz_s*, unz_global_info_s*)
000ba2c0 l     F .text	000000ca              unzGetLocalExtrafield(unz_s*, void*, unsigned int)
000b95e0 l     F .text	0000007f              unzGoToFirstFile(unz_s*)
000b9830 l     F .text	0000009b              unzGoToNextFile(unz_s*)
000bb300 l     F .text	0000006e              UnzipItem(HZIP__*, int, void*, unsigned int, unsigned int)
000b9a10 l     F .text	00000278              unzlocal_CheckCurrentFileCoherencyHeader(unz_s*, unsigned int*, unsigned long*, unsigned int*)
000b90d0 l     F .text	0000005a              unzlocal_DosDateToTmuDate(unsigned long, tm_unz_s*)
000b8d30 l     F .text	00000059              unzlocal_getByte(LUFILE*, int*)
000b9130 l     F .text	0000045a              unzlocal_GetCurrentFileInfoInternal(unz_s*, unz_file_info_s*, unz_file_info_internal_s*, char*, unsigned long, void*, unsigned long, char*, unsigned long)
000b8df0 l     F .text	00000096              unzlocal_getLong(LUFILE*, unsigned long*)
000b8d90 l     F .text	0000005a              unzlocal_getShort(LUFILE*, unsigned long*)
000b8f50 l     F .text	00000147              unzlocal_SearchCentralDir(LUFILE*)
000b98d0 l     F .text	00000136              unzLocateFile(unz_s*, char const*, int)
000ba430 l     F .text	00000147              unzOpenCurrentFile(unz_s*)
000b9660 l     F .text	000001c5              unzOpenInternal(LUFILE*)
000ba060 l     F .text	000001fc              unzReadCurrentFile(unz_s*, void*, unsigned int)
000b8f20 l     F .text	00000026              unzStringFileNameCompare(char const*, char const*, int)
000ba260 l     F .text	00000027              unztell(unz_s*)
000fab90 l     F .text	00000041              UpdateDispBBoxes(model_t*, int)
00144870 l     F .text	00000056              UpdateMaterialSystemConfig()
000d0de0 l     F .text	00000005              UpdateNameFromSteamID(IConVar*, CSteamID*)
001c01c0 l     F .text	0000009f              UpdateProgress(TGameStatsParameters const&, char const*, ...)
00138990 l     F .text	00000261              UpdateStudioRenderConfig()
000fb320 l     F .text	00000044              UpdateTangentSpace(CCoreDispInfo*, CVertIndex const&, Vector const&, Vector const&)
000fb260 l     F .text	000000bb              UpdateTangentSpace(CCoreDispInfo*, int, Vector const&, Vector const&)
00220120 l     F .text	0000015e              updatewindow
001bfe80 l     F .text	00000325              UploadData(char const*, char const*, KeyValues*)
001ad9a0 l     F .text	00000114              user(CCommand const&)
00357500 l     O .bss	00000024              user_command
001802f0 l     F .text	0000005c              UserReportedFileHash_t::Less(UserReportedFileHash_t const&, UserReportedFileHash_t const&)
00180240 l     F .text	000000b0              UserReportedFile_t::Less(UserReportedFile_t const&, UserReportedFile_t const&)
001ad140 l     F .text	000000eb              users(CCommand const&)
00357540 l     O .bss	00000024              users_command
00130610 l     F .text	00000034              UtlStringLessFunc(CUtlString const&, CUtlString const&)
0022abe4 l     F .text	000003ac              uw_frame_state_for
0022b93e l     F .text	000000c7              uw_init_context_1
0022afdc l     F .text	000000ed              uw_install_context_1
0022ba05 l     F .text	0000003a              uw_update_context
0022b6a0 l     F .text	0000029e              uw_update_context_1
000ea620 l     F .text	00000048              va(char const*, ...)
001f2280 l     F .text	000000df              V_AddBackSlashesToSpecialChars(char const*)
000c9750 l     F .text	00000084              ValidateName(char*, int)
001cbb10 l     F .text	00000030              ValidCmd(char const*)
001f1920 l     F .text	00000058              V_AppendSlash(char*, int)
001efa80 l     F .text	0000024a              V_atof(char const*)
001ef6a0 l     F .text	000001fa              V_atoi64(char const*)
001efa60 l     F .text	00000013              V_atoi(char const*)
001ef8a0 l     F .text	000001b5              V_atoui64(char const*)
001f1020 l     F .text	00000076              V_binarytohex(unsigned char const*, int, char*, int)
001f1980 l     F .text	00000094              V_ComposeFileName(char const*, char const*, char*, int)
001c7c70 l     F .text	0000000c              VCR_EnterPausedState()
00318ba0 l     O .bss	00000048              vcr_verbose
001f1300 l     F .text	00000075              V_DefaultExtension(char*, char const*, int)
002c8660 l     O .bss	00000008              vec2_invalid
002c8750 l     O .bss	00000008              vec2_invalid
002c8770 l     O .bss	00000008              vec2_invalid
002c8790 l     O .bss	00000008              vec2_invalid
002c88ac l     O .bss	00000008              vec2_invalid
002c8980 l     O .bss	00000008              vec2_invalid
002c8d30 l     O .bss	00000008              vec2_invalid
002d2f50 l     O .bss	00000008              vec2_invalid
002d2fa0 l     O .bss	00000008              vec2_invalid
002d2fc0 l     O .bss	00000008              vec2_invalid
002d2fe0 l     O .bss	00000008              vec2_invalid
002d3000 l     O .bss	00000008              vec2_invalid
002d3020 l     O .bss	00000008              vec2_invalid
002d3270 l     O .bss	00000008              vec2_invalid
002d33c0 l     O .bss	00000008              vec2_invalid
002d33e0 l     O .bss	00000008              vec2_invalid
002d3400 l     O .bss	00000008              vec2_invalid
002d3460 l     O .bss	00000008              vec2_invalid
002d361c l     O .bss	00000008              vec2_invalid
002d3670 l     O .bss	00000008              vec2_invalid
002d3690 l     O .bss	00000008              vec2_invalid
002d541c l     O .bss	00000008              vec2_invalid
002d54a0 l     O .bss	00000008              vec2_invalid
002d56e8 l     O .bss	00000008              vec2_invalid
002d5aac l     O .bss	00000008              vec2_invalid
002da154 l     O .bss	00000008              vec2_invalid
002da460 l     O .bss	00000008              vec2_invalid
002da594 l     O .bss	00000008              vec2_invalid
002da680 l     O .bss	00000008              vec2_invalid
002da6c0 l     O .bss	00000008              vec2_invalid
002da750 l     O .bss	00000008              vec2_invalid
002da770 l     O .bss	00000008              vec2_invalid
002da7b0 l     O .bss	00000008              vec2_invalid
002daab0 l     O .bss	00000008              vec2_invalid
0030a880 l     O .bss	00000008              vec2_invalid
0030cf9c l     O .bss	00000008              vec2_invalid
0030f670 l     O .bss	00000008              vec2_invalid
0030f700 l     O .bss	00000008              vec2_invalid
0030f7a4 l     O .bss	00000008              vec2_invalid
00314210 l     O .bss	00000008              vec2_invalid
003143ac l     O .bss	00000008              vec2_invalid
003143e8 l     O .bss	00000008              vec2_invalid
003145a4 l     O .bss	00000008              vec2_invalid
003151f0 l     O .bss	00000008              vec2_invalid
00315688 l     O .bss	00000008              vec2_invalid
003156c8 l     O .bss	00000008              vec2_invalid
003169bc l     O .bss	00000008              vec2_invalid
00316b4c l     O .bss	00000008              vec2_invalid
00316b90 l     O .bss	00000008              vec2_invalid
00316ca0 l     O .bss	00000008              vec2_invalid
00316cdc l     O .bss	00000008              vec2_invalid
00316f08 l     O .bss	00000008              vec2_invalid
003170b0 l     O .bss	00000008              vec2_invalid
00317108 l     O .bss	00000008              vec2_invalid
00317170 l     O .bss	00000008              vec2_invalid
003171d8 l     O .bss	00000008              vec2_invalid
0031725c l     O .bss	00000008              vec2_invalid
00317388 l     O .bss	00000008              vec2_invalid
00317400 l     O .bss	00000008              vec2_invalid
00317494 l     O .bss	00000008              vec2_invalid
0031755c l     O .bss	00000008              vec2_invalid
00317608 l     O .bss	00000008              vec2_invalid
00317650 l     O .bss	00000008              vec2_invalid
00317690 l     O .bss	00000008              vec2_invalid
003176e4 l     O .bss	00000008              vec2_invalid
00317730 l     O .bss	00000008              vec2_invalid
003177b4 l     O .bss	00000008              vec2_invalid
003177f0 l     O .bss	00000008              vec2_invalid
0031784c l     O .bss	00000008              vec2_invalid
00317940 l     O .bss	00000008              vec2_invalid
00317a88 l     O .bss	00000008              vec2_invalid
00317ac4 l     O .bss	00000008              vec2_invalid
00317af0 l     O .bss	00000008              vec2_invalid
00317bb0 l     O .bss	00000008              vec2_invalid
00317cc8 l     O .bss	00000008              vec2_invalid
00318060 l     O .bss	00000008              vec2_invalid
0031821c l     O .bss	00000008              vec2_invalid
00318370 l     O .bss	00000008              vec2_invalid
003183b0 l     O .bss	00000008              vec2_invalid
0031890c l     O .bss	00000008              vec2_invalid
00318b50 l     O .bss	00000008              vec2_invalid
00319f18 l     O .bss	00000008              vec2_invalid
0031a5f0 l     O .bss	00000008              vec2_invalid
0031b634 l     O .bss	00000008              vec2_invalid
0031b828 l     O .bss	00000008              vec2_invalid
0031bba0 l     O .bss	00000008              vec2_invalid
0031bbe8 l     O .bss	00000008              vec2_invalid
0031c1e4 l     O .bss	00000008              vec2_invalid
0031c3f0 l     O .bss	00000008              vec2_invalid
0031cf30 l     O .bss	00000008              vec2_invalid
0031d648 l     O .bss	00000008              vec2_invalid
0031d6a0 l     O .bss	00000008              vec2_invalid
0031e90c l     O .bss	00000008              vec2_invalid
0031edb4 l     O .bss	00000008              vec2_invalid
00320390 l     O .bss	00000008              vec2_invalid
003227ec l     O .bss	00000008              vec2_invalid
00322900 l     O .bss	00000008              vec2_invalid
0032294c l     O .bss	00000008              vec2_invalid
00322990 l     O .bss	00000008              vec2_invalid
003229ec l     O .bss	00000008              vec2_invalid
00322f7c l     O .bss	00000008              vec2_invalid
00323020 l     O .bss	00000008              vec2_invalid
003238e0 l     O .bss	00000008              vec2_invalid
00323d04 l     O .bss	00000008              vec2_invalid
00324f6c l     O .bss	00000008              vec2_invalid
00325170 l     O .bss	00000008              vec2_invalid
00325260 l     O .bss	00000008              vec2_invalid
00325490 l     O .bss	00000008              vec2_invalid
003256d0 l     O .bss	00000008              vec2_invalid
003257a8 l     O .bss	00000008              vec2_invalid
00325820 l     O .bss	00000008              vec2_invalid
00325858 l     O .bss	00000008              vec2_invalid
00325880 l     O .bss	00000008              vec2_invalid
003259f0 l     O .bss	00000008              vec2_invalid
00325a60 l     O .bss	00000008              vec2_invalid
00325b0c l     O .bss	00000008              vec2_invalid
00325d70 l     O .bss	00000008              vec2_invalid
0032614c l     O .bss	00000008              vec2_invalid
00326190 l     O .bss	00000008              vec2_invalid
003261d0 l     O .bss	00000008              vec2_invalid
003261f0 l     O .bss	00000008              vec2_invalid
00326450 l     O .bss	00000008              vec2_invalid
00326630 l     O .bss	00000008              vec2_invalid
00326930 l     O .bss	00000008              vec2_invalid
00327330 l     O .bss	00000008              vec2_invalid
0032739c l     O .bss	00000008              vec2_invalid
00327554 l     O .bss	00000008              vec2_invalid
0032b8f0 l     O .bss	00000008              vec2_invalid
0032b970 l     O .bss	00000008              vec2_invalid
0032c590 l     O .bss	00000008              vec2_invalid
0035735c l     O .bss	00000008              vec2_invalid
003577c0 l     O .bss	00000008              vec2_invalid
00357824 l     O .bss	00000008              vec2_invalid
00357a70 l     O .bss	00000008              vec2_invalid
00357e3c l     O .bss	00000008              vec2_invalid
00358ea8 l     O .bss	00000008              vec2_invalid
00358fe8 l     O .bss	00000008              vec2_invalid
0035d110 l     O .bss	00000008              vec2_invalid
0035d1c0 l     O .bss	00000008              vec2_invalid
0035d1fc l     O .bss	00000008              vec2_invalid
0035d9e8 l     O .bss	00000008              vec2_invalid
00374ef0 l     O .bss	00000008              vec2_invalid
00375130 l     O .bss	00000008              vec2_invalid
003751c4 l     O .bss	00000008              vec2_invalid
003752e4 l     O .bss	00000008              vec2_invalid
003762e8 l     O .bss	00000008              vec2_invalid
00376370 l     O .bss	00000008              vec2_invalid
00376428 l     O .bss	00000008              vec2_invalid
00377718 l     O .bss	00000008              vec2_invalid
00377b88 l     O .bss	00000008              vec2_invalid
00377fac l     O .bss	00000008              vec2_invalid
00379e78 l     O .bss	00000008              vec2_invalid
0037a060 l     O .bss	00000008              vec2_invalid
0037a0b0 l     O .bss	00000008              vec2_invalid
0037b280 l     O .bss	00000008              vec2_invalid
0037b2a0 l     O .bss	00000008              vec2_invalid
0037b310 l     O .bss	00000008              vec2_invalid
0037b490 l     O .bss	00000008              vec2_invalid
0037b4c0 l     O .bss	00000008              vec2_invalid
0037b4e0 l     O .bss	00000008              vec2_invalid
0037d650 l     O .bss	00000008              vec2_invalid
0037d680 l     O .bss	00000008              vec2_invalid
0037d6b0 l     O .bss	00000008              vec2_invalid
0037d6d0 l     O .bss	00000008              vec2_invalid
0037d9b0 l     O .bss	00000008              vec2_invalid
0037da10 l     O .bss	00000008              vec2_invalid
0037ed60 l     O .bss	00000008              vec2_invalid
0037ed90 l     O .bss	00000008              vec2_invalid
0037edb0 l     O .bss	00000008              vec2_invalid
0037edf0 l     O .bss	00000008              vec2_invalid
0037ee10 l     O .bss	00000008              vec2_invalid
00386b30 l     O .bss	00000008              vec2_invalid
0038afb0 l     O .bss	00000008              vec2_invalid
0038aff0 l     O .bss	00000008              vec2_invalid
0038b010 l     O .bss	00000008              vec2_invalid
0038b030 l     O .bss	00000008              vec2_invalid
0038b070 l     O .bss	00000008              vec2_invalid
0038b100 l     O .bss	00000008              vec2_invalid
0038b200 l     O .bss	00000008              vec2_invalid
0038b240 l     O .bss	00000008              vec2_invalid
0038b380 l     O .bss	00000008              vec2_invalid
002c8650 l     O .bss	00000008              vec2_origin
002c8740 l     O .bss	00000008              vec2_origin
002c8760 l     O .bss	00000008              vec2_origin
002c8780 l     O .bss	00000008              vec2_origin
002c88a4 l     O .bss	00000008              vec2_origin
002c8970 l     O .bss	00000008              vec2_origin
002c8d20 l     O .bss	00000008              vec2_origin
002d2f40 l     O .bss	00000008              vec2_origin
002d2f90 l     O .bss	00000008              vec2_origin
002d2fb0 l     O .bss	00000008              vec2_origin
002d2fd0 l     O .bss	00000008              vec2_origin
002d2ff0 l     O .bss	00000008              vec2_origin
002d3010 l     O .bss	00000008              vec2_origin
002d3260 l     O .bss	00000008              vec2_origin
002d33b0 l     O .bss	00000008              vec2_origin
002d33d0 l     O .bss	00000008              vec2_origin
002d33f0 l     O .bss	00000008              vec2_origin
002d3450 l     O .bss	00000008              vec2_origin
002d3614 l     O .bss	00000008              vec2_origin
002d3660 l     O .bss	00000008              vec2_origin
002d3680 l     O .bss	00000008              vec2_origin
002d5414 l     O .bss	00000008              vec2_origin
002d5490 l     O .bss	00000008              vec2_origin
002d56e0 l     O .bss	00000008              vec2_origin
002d5aa4 l     O .bss	00000008              vec2_origin
002da14c l     O .bss	00000008              vec2_origin
002da450 l     O .bss	00000008              vec2_origin
002da58c l     O .bss	00000008              vec2_origin
002da670 l     O .bss	00000008              vec2_origin
002da6b0 l     O .bss	00000008              vec2_origin
002da748 l     O .bss	00000008              vec2_origin
002da760 l     O .bss	00000008              vec2_origin
002da7a0 l     O .bss	00000008              vec2_origin
002daaa8 l     O .bss	00000008              vec2_origin
0030a878 l     O .bss	00000008              vec2_origin
0030cf94 l     O .bss	00000008              vec2_origin
0030f668 l     O .bss	00000008              vec2_origin
0030f6f0 l     O .bss	00000008              vec2_origin
0030f79c l     O .bss	00000008              vec2_origin
00314200 l     O .bss	00000008              vec2_origin
003143a4 l     O .bss	00000008              vec2_origin
003143e0 l     O .bss	00000008              vec2_origin
0031459c l     O .bss	00000008              vec2_origin
003151e0 l     O .bss	00000008              vec2_origin
00315680 l     O .bss	00000008              vec2_origin
003156c0 l     O .bss	00000008              vec2_origin
003169b4 l     O .bss	00000008              vec2_origin
00316b44 l     O .bss	00000008              vec2_origin
00316b80 l     O .bss	00000008              vec2_origin
00316c98 l     O .bss	00000008              vec2_origin
00316cd4 l     O .bss	00000008              vec2_origin
00316f00 l     O .bss	00000008              vec2_origin
003170a8 l     O .bss	00000008              vec2_origin
00317100 l     O .bss	00000008              vec2_origin
00317160 l     O .bss	00000008              vec2_origin
003171d0 l     O .bss	00000008              vec2_origin
00317254 l     O .bss	00000008              vec2_origin
00317380 l     O .bss	00000008              vec2_origin
003173f0 l     O .bss	00000008              vec2_origin
0031748c l     O .bss	00000008              vec2_origin
00317554 l     O .bss	00000008              vec2_origin
00317600 l     O .bss	00000008              vec2_origin
00317640 l     O .bss	00000008              vec2_origin
00317680 l     O .bss	00000008              vec2_origin
003176dc l     O .bss	00000008              vec2_origin
00317720 l     O .bss	00000008              vec2_origin
003177ac l     O .bss	00000008              vec2_origin
003177e8 l     O .bss	00000008              vec2_origin
00317844 l     O .bss	00000008              vec2_origin
00317930 l     O .bss	00000008              vec2_origin
00317a80 l     O .bss	00000008              vec2_origin
00317abc l     O .bss	00000008              vec2_origin
00317ae0 l     O .bss	00000008              vec2_origin
00317ba0 l     O .bss	00000008              vec2_origin
00317cc0 l     O .bss	00000008              vec2_origin
00318050 l     O .bss	00000008              vec2_origin
00318214 l     O .bss	00000008              vec2_origin
00318368 l     O .bss	00000008              vec2_origin
003183a0 l     O .bss	00000008              vec2_origin
00318904 l     O .bss	00000008              vec2_origin
00318b40 l     O .bss	00000008              vec2_origin
00319f10 l     O .bss	00000008              vec2_origin
0031a5e8 l     O .bss	00000008              vec2_origin
0031b62c l     O .bss	00000008              vec2_origin
0031b820 l     O .bss	00000008              vec2_origin
0031bb90 l     O .bss	00000008              vec2_origin
0031bbe0 l     O .bss	00000008              vec2_origin
0031c1dc l     O .bss	00000008              vec2_origin
0031c3e0 l     O .bss	00000008              vec2_origin
0031cf28 l     O .bss	00000008              vec2_origin
0031d640 l     O .bss	00000008              vec2_origin
0031d690 l     O .bss	00000008              vec2_origin
0031e904 l     O .bss	00000008              vec2_origin
0031edac l     O .bss	00000008              vec2_origin
00320388 l     O .bss	00000008              vec2_origin
003227e4 l     O .bss	00000008              vec2_origin
003228f8 l     O .bss	00000008              vec2_origin
00322944 l     O .bss	00000008              vec2_origin
00322980 l     O .bss	00000008              vec2_origin
003229e4 l     O .bss	00000008              vec2_origin
00322f74 l     O .bss	00000008              vec2_origin
00323010 l     O .bss	00000008              vec2_origin
003238d8 l     O .bss	00000008              vec2_origin
00323cfc l     O .bss	00000008              vec2_origin
00324f64 l     O .bss	00000008              vec2_origin
00325168 l     O .bss	00000008              vec2_origin
00325250 l     O .bss	00000008              vec2_origin
00325480 l     O .bss	00000008              vec2_origin
003256c8 l     O .bss	00000008              vec2_origin
003257a0 l     O .bss	00000008              vec2_origin
00325810 l     O .bss	00000008              vec2_origin
00325850 l     O .bss	00000008              vec2_origin
00325870 l     O .bss	00000008              vec2_origin
003259e0 l     O .bss	00000008              vec2_origin
00325a50 l     O .bss	00000008              vec2_origin
00325b04 l     O .bss	00000008              vec2_origin
00325d68 l     O .bss	00000008              vec2_origin
00326144 l     O .bss	00000008              vec2_origin
00326180 l     O .bss	00000008              vec2_origin
003261c0 l     O .bss	00000008              vec2_origin
003261e0 l     O .bss	00000008              vec2_origin
00326448 l     O .bss	00000008              vec2_origin
00326628 l     O .bss	00000008              vec2_origin
00326928 l     O .bss	00000008              vec2_origin
00327328 l     O .bss	00000008              vec2_origin
00327394 l     O .bss	00000008              vec2_origin
0032754c l     O .bss	00000008              vec2_origin
0032b8e8 l     O .bss	00000008              vec2_origin
0032b968 l     O .bss	00000008              vec2_origin
0032c588 l     O .bss	00000008              vec2_origin
00357354 l     O .bss	00000008              vec2_origin
003577b8 l     O .bss	00000008              vec2_origin
0035781c l     O .bss	00000008              vec2_origin
00357a68 l     O .bss	00000008              vec2_origin
00357e34 l     O .bss	00000008              vec2_origin
00358ea0 l     O .bss	00000008              vec2_origin
00358fe0 l     O .bss	00000008              vec2_origin
0035d108 l     O .bss	00000008              vec2_origin
0035d1b0 l     O .bss	00000008              vec2_origin
0035d1f4 l     O .bss	00000008              vec2_origin
0035d9e0 l     O .bss	00000008              vec2_origin
00374ee8 l     O .bss	00000008              vec2_origin
00375128 l     O .bss	00000008              vec2_origin
003751bc l     O .bss	00000008              vec2_origin
003752dc l     O .bss	00000008              vec2_origin
003762e0 l     O .bss	00000008              vec2_origin
00376368 l     O .bss	00000008              vec2_origin
00376420 l     O .bss	00000008              vec2_origin
00377710 l     O .bss	00000008              vec2_origin
00377b80 l     O .bss	00000008              vec2_origin
00377fa4 l     O .bss	00000008              vec2_origin
00379e70 l     O .bss	00000008              vec2_origin
0037a050 l     O .bss	00000008              vec2_origin
0037a0a8 l     O .bss	00000008              vec2_origin
0037b270 l     O .bss	00000008              vec2_origin
0037b290 l     O .bss	00000008              vec2_origin
0037b300 l     O .bss	00000008              vec2_origin
0037b488 l     O .bss	00000008              vec2_origin
0037b4b0 l     O .bss	00000008              vec2_origin
0037b4d0 l     O .bss	00000008              vec2_origin
0037d640 l     O .bss	00000008              vec2_origin
0037d670 l     O .bss	00000008              vec2_origin
0037d6a0 l     O .bss	00000008              vec2_origin
0037d6c0 l     O .bss	00000008              vec2_origin
0037d9a0 l     O .bss	00000008              vec2_origin
0037da00 l     O .bss	00000008              vec2_origin
0037ed58 l     O .bss	00000008              vec2_origin
0037ed80 l     O .bss	00000008              vec2_origin
0037eda8 l     O .bss	00000008              vec2_origin
0037ede0 l     O .bss	00000008              vec2_origin
0037ee00 l     O .bss	00000008              vec2_origin
00386b20 l     O .bss	00000008              vec2_origin
0038afa0 l     O .bss	00000008              vec2_origin
0038afe0 l     O .bss	00000008              vec2_origin
0038b000 l     O .bss	00000008              vec2_origin
0038b020 l     O .bss	00000008              vec2_origin
0038b060 l     O .bss	00000008              vec2_origin
0038b0f0 l     O .bss	00000008              vec2_origin
0038b1f0 l     O .bss	00000008              vec2_origin
0038b230 l     O .bss	00000008              vec2_origin
0038b370 l     O .bss	00000008              vec2_origin
0038af70 l     O .bss	0000000c              vec3_angle
0038af60 l     O .bss	0000000c              vec3_invalid
0038af80 l     O .bss	0000000c              vec3_origin
002c87b0 l     O .bss	00000010              vec4_invalid
002d3420 l     O .bss	00000010              vec4_invalid
002d3634 l     O .bss	00000010              vec4_invalid
002d5700 l     O .bss	00000010              vec4_invalid
002d5ac4 l     O .bss	00000010              vec4_invalid
002da16c l     O .bss	00000010              vec4_invalid
002da5ac l     O .bss	00000010              vec4_invalid
002da6a0 l     O .bss	00000010              vec4_invalid
002da790 l     O .bss	00000010              vec4_invalid
002daac8 l     O .bss	00000010              vec4_invalid
0030a898 l     O .bss	00000010              vec4_invalid
0030cfb4 l     O .bss	00000010              vec4_invalid
0030f688 l     O .bss	00000010              vec4_invalid
0030f720 l     O .bss	00000010              vec4_invalid
0030f7bc l     O .bss	00000010              vec4_invalid
00314230 l     O .bss	00000010              vec4_invalid
003143c4 l     O .bss	00000010              vec4_invalid
00314400 l     O .bss	00000010              vec4_invalid
003145bc l     O .bss	00000010              vec4_invalid
00315210 l     O .bss	00000010              vec4_invalid
003169d4 l     O .bss	00000010              vec4_invalid
00316b64 l     O .bss	00000010              vec4_invalid
00316bb0 l     O .bss	00000010              vec4_invalid
00316cb8 l     O .bss	00000010              vec4_invalid
00316cf4 l     O .bss	00000010              vec4_invalid
00316f20 l     O .bss	00000010              vec4_invalid
00317150 l     O .bss	00000010              vec4_invalid
00317190 l     O .bss	00000010              vec4_invalid
003171f0 l     O .bss	00000010              vec4_invalid
003173a0 l     O .bss	00000010              vec4_invalid
00317670 l     O .bss	00000010              vec4_invalid
003176b0 l     O .bss	00000010              vec4_invalid
003176fc l     O .bss	00000010              vec4_invalid
00317750 l     O .bss	00000010              vec4_invalid
003177cc l     O .bss	00000010              vec4_invalid
00317808 l     O .bss	00000010              vec4_invalid
00317864 l     O .bss	00000010              vec4_invalid
00317960 l     O .bss	00000010              vec4_invalid
00317aa0 l     O .bss	00000010              vec4_invalid
00317b10 l     O .bss	00000010              vec4_invalid
00317bd0 l     O .bss	00000010              vec4_invalid
00317ce0 l     O .bss	00000010              vec4_invalid
00318080 l     O .bss	00000010              vec4_invalid
00318234 l     O .bss	00000010              vec4_invalid
00318388 l     O .bss	00000010              vec4_invalid
003183d0 l     O .bss	00000010              vec4_invalid
00318924 l     O .bss	00000010              vec4_invalid
00318b70 l     O .bss	00000010              vec4_invalid
00319f30 l     O .bss	00000010              vec4_invalid
0031a608 l     O .bss	00000010              vec4_invalid
0031b64c l     O .bss	00000010              vec4_invalid
0031b840 l     O .bss	00000010              vec4_invalid
0031bbc0 l     O .bss	00000010              vec4_invalid
0031c1fc l     O .bss	00000010              vec4_invalid
0031c410 l     O .bss	00000010              vec4_invalid
0031cf48 l     O .bss	00000010              vec4_invalid
0031d660 l     O .bss	00000010              vec4_invalid
0031d6c0 l     O .bss	00000010              vec4_invalid
0031e924 l     O .bss	00000010              vec4_invalid
0031edcc l     O .bss	00000010              vec4_invalid
003203a8 l     O .bss	00000010              vec4_invalid
00322804 l     O .bss	00000010              vec4_invalid
00322964 l     O .bss	00000010              vec4_invalid
003229b0 l     O .bss	00000010              vec4_invalid
00322a04 l     O .bss	00000010              vec4_invalid
00322f94 l     O .bss	00000010              vec4_invalid
003238f8 l     O .bss	00000010              vec4_invalid
00323d1c l     O .bss	00000010              vec4_invalid
00324f84 l     O .bss	00000010              vec4_invalid
00325188 l     O .bss	00000010              vec4_invalid
003254b0 l     O .bss	00000010              vec4_invalid
003256e8 l     O .bss	00000010              vec4_invalid
003257c0 l     O .bss	00000010              vec4_invalid
00325840 l     O .bss	00000010              vec4_invalid
003258a0 l     O .bss	00000010              vec4_invalid
00325a10 l     O .bss	00000010              vec4_invalid
00325a80 l     O .bss	00000010              vec4_invalid
00325b24 l     O .bss	00000010              vec4_invalid
00325d88 l     O .bss	00000010              vec4_invalid
00326164 l     O .bss	00000010              vec4_invalid
003261b0 l     O .bss	00000010              vec4_invalid
00326210 l     O .bss	00000010              vec4_invalid
00326948 l     O .bss	00000010              vec4_invalid
00327348 l     O .bss	00000010              vec4_invalid
003273b4 l     O .bss	00000010              vec4_invalid
0032756c l     O .bss	00000010              vec4_invalid
0032b908 l     O .bss	00000010              vec4_invalid
0032c5a8 l     O .bss	00000010              vec4_invalid
00357374 l     O .bss	00000010              vec4_invalid
003577d8 l     O .bss	00000010              vec4_invalid
0035783c l     O .bss	00000010              vec4_invalid
00357a88 l     O .bss	00000010              vec4_invalid
00357e54 l     O .bss	00000010              vec4_invalid
00358ec0 l     O .bss	00000010              vec4_invalid
00359000 l     O .bss	00000010              vec4_invalid
0035d128 l     O .bss	00000010              vec4_invalid
0035d214 l     O .bss	00000010              vec4_invalid
0035da00 l     O .bss	00000010              vec4_invalid
00374f08 l     O .bss	00000010              vec4_invalid
00375148 l     O .bss	00000010              vec4_invalid
003751dc l     O .bss	00000010              vec4_invalid
00376300 l     O .bss	00000010              vec4_invalid
00376388 l     O .bss	00000010              vec4_invalid
00377730 l     O .bss	00000010              vec4_invalid
00377ba0 l     O .bss	00000010              vec4_invalid
00377fc4 l     O .bss	00000010              vec4_invalid
00379e90 l     O .bss	00000010              vec4_invalid
0037a080 l     O .bss	00000010              vec4_invalid
0038b050 l     O .bss	00000010              vec4_invalid
0038b090 l     O .bss	00000010              vec4_invalid
0038b120 l     O .bss	00000010              vec4_invalid
0038b220 l     O .bss	00000010              vec4_invalid
0038b3a0 l     O .bss	00000010              vec4_invalid
002c87a0 l     O .bss	00000010              vec4_origin
002d3410 l     O .bss	00000010              vec4_origin
002d3624 l     O .bss	00000010              vec4_origin
002d56f0 l     O .bss	00000010              vec4_origin
002d5ab4 l     O .bss	00000010              vec4_origin
002da15c l     O .bss	00000010              vec4_origin
002da59c l     O .bss	00000010              vec4_origin
002da690 l     O .bss	00000010              vec4_origin
002da780 l     O .bss	00000010              vec4_origin
002daab8 l     O .bss	00000010              vec4_origin
0030a888 l     O .bss	00000010              vec4_origin
0030cfa4 l     O .bss	00000010              vec4_origin
0030f678 l     O .bss	00000010              vec4_origin
0030f710 l     O .bss	00000010              vec4_origin
0030f7ac l     O .bss	00000010              vec4_origin
00314220 l     O .bss	00000010              vec4_origin
003143b4 l     O .bss	00000010              vec4_origin
003143f0 l     O .bss	00000010              vec4_origin
003145ac l     O .bss	00000010              vec4_origin
00315200 l     O .bss	00000010              vec4_origin
003169c4 l     O .bss	00000010              vec4_origin
00316b54 l     O .bss	00000010              vec4_origin
00316ba0 l     O .bss	00000010              vec4_origin
00316ca8 l     O .bss	00000010              vec4_origin
00316ce4 l     O .bss	00000010              vec4_origin
00316f10 l     O .bss	00000010              vec4_origin
00317140 l     O .bss	00000010              vec4_origin
00317180 l     O .bss	00000010              vec4_origin
003171e0 l     O .bss	00000010              vec4_origin
00317390 l     O .bss	00000010              vec4_origin
00317660 l     O .bss	00000010              vec4_origin
003176a0 l     O .bss	00000010              vec4_origin
003176ec l     O .bss	00000010              vec4_origin
00317740 l     O .bss	00000010              vec4_origin
003177bc l     O .bss	00000010              vec4_origin
003177f8 l     O .bss	00000010              vec4_origin
00317854 l     O .bss	00000010              vec4_origin
00317950 l     O .bss	00000010              vec4_origin
00317a90 l     O .bss	00000010              vec4_origin
00317b00 l     O .bss	00000010              vec4_origin
00317bc0 l     O .bss	00000010              vec4_origin
00317cd0 l     O .bss	00000010              vec4_origin
00318070 l     O .bss	00000010              vec4_origin
00318224 l     O .bss	00000010              vec4_origin
00318378 l     O .bss	00000010              vec4_origin
003183c0 l     O .bss	00000010              vec4_origin
00318914 l     O .bss	00000010              vec4_origin
00318b60 l     O .bss	00000010              vec4_origin
00319f20 l     O .bss	00000010              vec4_origin
0031a5f8 l     O .bss	00000010              vec4_origin
0031b63c l     O .bss	00000010              vec4_origin
0031b830 l     O .bss	00000010              vec4_origin
0031bbb0 l     O .bss	00000010              vec4_origin
0031c1ec l     O .bss	00000010              vec4_origin
0031c400 l     O .bss	00000010              vec4_origin
0031cf38 l     O .bss	00000010              vec4_origin
0031d650 l     O .bss	00000010              vec4_origin
0031d6b0 l     O .bss	00000010              vec4_origin
0031e914 l     O .bss	00000010              vec4_origin
0031edbc l     O .bss	00000010              vec4_origin
00320398 l     O .bss	00000010              vec4_origin
003227f4 l     O .bss	00000010              vec4_origin
00322954 l     O .bss	00000010              vec4_origin
003229a0 l     O .bss	00000010              vec4_origin
003229f4 l     O .bss	00000010              vec4_origin
00322f84 l     O .bss	00000010              vec4_origin
003238e8 l     O .bss	00000010              vec4_origin
00323d0c l     O .bss	00000010              vec4_origin
00324f74 l     O .bss	00000010              vec4_origin
00325178 l     O .bss	00000010              vec4_origin
003254a0 l     O .bss	00000010              vec4_origin
003256d8 l     O .bss	00000010              vec4_origin
003257b0 l     O .bss	00000010              vec4_origin
00325830 l     O .bss	00000010              vec4_origin
00325890 l     O .bss	00000010              vec4_origin
00325a00 l     O .bss	00000010              vec4_origin
00325a70 l     O .bss	00000010              vec4_origin
00325b14 l     O .bss	00000010              vec4_origin
00325d78 l     O .bss	00000010              vec4_origin
00326154 l     O .bss	00000010              vec4_origin
003261a0 l     O .bss	00000010              vec4_origin
00326200 l     O .bss	00000010              vec4_origin
00326938 l     O .bss	00000010              vec4_origin
00327338 l     O .bss	00000010              vec4_origin
003273a4 l     O .bss	00000010              vec4_origin
0032755c l     O .bss	00000010              vec4_origin
0032b8f8 l     O .bss	00000010              vec4_origin
0032c598 l     O .bss	00000010              vec4_origin
00357364 l     O .bss	00000010              vec4_origin
003577c8 l     O .bss	00000010              vec4_origin
0035782c l     O .bss	00000010              vec4_origin
00357a78 l     O .bss	00000010              vec4_origin
00357e44 l     O .bss	00000010              vec4_origin
00358eb0 l     O .bss	00000010              vec4_origin
00358ff0 l     O .bss	00000010              vec4_origin
0035d118 l     O .bss	00000010              vec4_origin
0035d204 l     O .bss	00000010              vec4_origin
0035d9f0 l     O .bss	00000010              vec4_origin
00374ef8 l     O .bss	00000010              vec4_origin
00375138 l     O .bss	00000010              vec4_origin
003751cc l     O .bss	00000010              vec4_origin
003762f0 l     O .bss	00000010              vec4_origin
00376378 l     O .bss	00000010              vec4_origin
00377720 l     O .bss	00000010              vec4_origin
00377b90 l     O .bss	00000010              vec4_origin
00377fb4 l     O .bss	00000010              vec4_origin
00379e80 l     O .bss	00000010              vec4_origin
0037a070 l     O .bss	00000010              vec4_origin
0038b040 l     O .bss	00000010              vec4_origin
0038b080 l     O .bss	00000010              vec4_origin
0038b110 l     O .bss	00000010              vec4_origin
0038b210 l     O .bss	00000010              vec4_origin
0038b390 l     O .bss	00000010              vec4_origin
00211410 l     F .text	00000125              Vector3DMultiplyPositionProjective(VMatrix const&, Vector const&, Vector&)
00211540 l     F .text	00000135              Vector3DMultiplyProjective(VMatrix const&, Vector const&, Vector&)
002117b0 l     F .text	000000bd              Vector3DMultiplyTranspose(VMatrix const&, Vector const&, Vector&)
00211260 l     F .text	000000bd              Vector3DMultiply(VMatrix const&, Vector const&, Vector&)
00211160 l     F .text	000000fd              Vector4DMultiplyPosition(VMatrix const&, Vector const&, Vector4D&)
00211680 l     F .text	00000129              Vector4DMultiplyTranspose(VMatrix const&, Vector4D const&, Vector4D&)
00211030 l     F .text	00000129              Vector4DMultiply(VMatrix const&, Vector4D const&, Vector4D&)
00205f70 l     F .text	0000015d              VectorAngles(float const*, float*)
00206be0 l     F .text	0000015d              VectorAngles(Vector const&, QAngle&)
00206d40 l     F .text	00000228              VectorAngles(Vector const&, Vector const&, QAngle&)
00103ee0 l     F .text	000000e7              Vector_CompareDeltas(SendProp const*, bf_read*, bf_read*)
00205c50 l     F .text	0000002c              VectorCompare(float const*, float const*)
00103de0 l     F .text	000000ff              Vector_Decode(DecodeInfo*)
00102890 l     F .text	0000003a              Vector_DecodeZero(DecodeInfo*)
00104ba0 l     F .text	000000f3              Vector_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
00102850 l     F .text	0000000a              Vector_GetTypeNameString()
002057f0 l     F .text	0000008a              VectorIRotate(float const*, matrix3x4_t const&, float*)
00104790 l     F .text	00000103              Vector_IsEncodedZero(SendProp const*, bf_read*)
00102860 l     F .text	00000024              Vector_IsZero(unsigned char const*, DVariant*, SendProp const*)
002056c0 l     F .text	00000095              VectorITransform(float const*, matrix3x4_t const&, float*)
00205ef0 l     F .text	0000007c              VectorMatrix(Vector const&, matrix3x4_t&)
00205250 l     F .text	00000065              _VectorNormalizeFast(Vector&)
002052c0 l     F .text	00000074              _VectorNormalize(Vector&)
00205760 l     F .text	0000008a              VectorRotate(float const*, matrix3x4_t const&, float*)
00207490 l     F .text	00000035              VectorRotate(Vector const&, QAngle const&, Vector&)
002091f0 l     F .text	00000035              VectorRotate(Vector const&, Quaternion const&, Vector&)
00205400 l     F .text	00000034              VectorsEqual(float const*, float const*)
00104710 l     F .text	00000080              Vector_SkipProp(SendProp const*, bf_read*)
002049c0 l     F .text	0000008b              VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
00205620 l     F .text	00000099              VectorTransform(float const*, matrix3x4_t const&, float*)
00205d80 l     F .text	0000016d              VectorVectors(Vector const&, Vector&, Vector&)
001035b0 l     F .text	0000004b              VectorXY_CompareDeltas(SendProp const*, bf_read*, bf_read*)
00103ae0 l     F .text	0000004a              VectorXY_Decode(DecodeInfo*)
00102910 l     F .text	00000033              VectorXY_DecodeZero(DecodeInfo*)
00104b40 l     F .text	00000057              VectorXY_Encode(unsigned char const*, DVariant*, SendProp const*, bf_write*, int)
001028d0 l     F .text	0000000a              VectorXY_GetTypeNameString()
00103a90 l     F .text	0000004c              VectorXY_IsEncodedZero(SendProp const*, bf_read*)
001028e0 l     F .text	00000024              VectorXY_IsZero(unsigned char const*, DVariant*, SendProp const*)
001046d0 l     F .text	00000032              VectorXY_SkipProp(SendProp const*, bf_read*)
00208200 l     F .text	000000a0              VectorYawRotate(Vector const&, float, Vector&)
000a58b0 l     F .text	0000022d              VerifyNeighborConnections(CCoreDispInfo**, int)
000a5780 l     F .text	0000012a              VerifyNeighborVertConnection(CDispUtilsHelper*, CVertIndex const&, CDispUtilsHelper const*, CVertIndex const&, int)
0012c740 l     F .text	000000ca              version(CCommand const&)
0031a7a0 l     O .bss	00000024              version_command
001f1740 l     F .text	00000042              V_ExtractFileExtension(char const*, char*, int)
001f1650 l     F .text	00000094              V_ExtractFilePath(char const*, char*, int)
001f10c0 l     F .text	00000149              V_FileBase(char const*, char*, int)
001f1480 l     F .text	00000071              V_FixDoubleSlashes(char*)
001f1440 l     F .text	0000003e              V_FixSlashes(char*, char)
001f1d70 l     F .text	0000003b              V_FixupPathName(char*, unsigned int, char const*)
001f1fd0 l     F .text	00000024              V_GetCurrentDirectory(char*, int)
001f16f0 l     F .text	0000004b              V_GetFileExtension(char const*)
001f1790 l     F .text	00000009              V_GetFileName(char const*)
001f0f70 l     F .text	000000a5              V_hextobinary(char const*, int, unsigned char*, int)
0031a000 l     O .bss	00000048              violence_ablood
0031a060 l     O .bss	00000048              violence_agibs
00319f40 l     O .bss	00000048              violence_hblood
00319fa0 l     O .bss	00000048              violence_hgibs
00146370 l     F .text	0000001f              virtualgroup_t::GetStudioHdr() const
00320460 l     O .bss	0000228c              vis
001f1d40 l     F .text	00000025              V_IsAbsolutePath(char const*)
003227b0 l     O .bss	0000001c              viscache
003227d8 l     O .bss	00000004              VisCache_Build(VisCacheEntry&, worldbrushdata_t const&)::_counter
00170ec0 l     F .text	00000005              VisualizeQueuedEdges()
001f1a20 l     F .text	0000016f              V_MakeAbsolutePath(char*, int, char const*, char const*)
001f1b90 l     F .text	000001a1              V_MakeRelativePath(char const*, char const*, char*, int)
002100a0 l     F .text	0000008f              VMatrix::GetScale() const
0020ffa0 l     F .text	00000009              VMatrix::InverseGeneral(VMatrix&) const
002113d0 l     F .text	00000023              VMatrix::InverseTR() const
00211400 l     F .text	00000009              VMatrix::InverseTR(VMatrix&) const
00210560 l     F .text	00000184              VMatrix::IsRotationMatrix() const
0020f5f0 l     F .text	00000490              VMatrix::MatrixMul(VMatrix const&, VMatrix&) const
00210210 l     F .text	000001ec              VMatrix::NormalizeBasisVectors() const
0020f550 l     F .text	00000069              VMatrix::operator=(VMatrix const&)
0020f5c0 l     F .text	00000026              VMatrix::operator==(VMatrix const&) const
0020fce0 l     F .text	0000002a              VMatrix::operator*(VMatrix const&) const
00211900 l     F .text	0000008c              VMatrix::operator*(VPlane const&) const
00210130 l     F .text	000000d5              VMatrix::Scale(Vector const&)
00210770 l     F .text	00000035              VMatrix::SetupMatrixAngles(QAngle const&)
002106f0 l     F .text	00000049              VMatrix::SetupMatrixOrgAngles(Vector const&, QAngle const&)
002104b0 l     F .text	000000ae              VMatrix::Transpose3x3() const
00210400 l     F .text	000000ae              VMatrix::Transpose() const
001ef0f0 l     F .text	0000002e              _V_memcmp(char const*, int, void const*, void const*, int)
001ef0b0 l     F .text	0000001b              _V_memcpy(char const*, int, void*, void const*, int)
001ef0d0 l     F .text	0000001b              _V_memmove(char const*, int, void*, void const*, int)
001ef090 l     F .text	0000001b              _V_memset(char const*, int, void*, int, int)
001f0f30 l     F .text	00000035              V_nibble(char)
001efcd0 l     F .text	00000090              V_normalizeFloatString(char*)
0012bf40 l     F .text	00000005              voiceconvar_file_changed_f(IConVar*, char const*, float)
0032c720 l     O .bss	00000048              voice_debugfeedbackfrom
0031a460 l     O .bss	00000048              voice_inputfromfile
0031a4c0 l     O .bss	00000048              voice_recordtofile
0017c770 l     F .text	00000042              void CByteswap::SwapBufferToTargetEndian<int>(int*, int*, int) [clone .part.73] [clone .constprop.128]
0017c720 l     F .text	00000042              void CByteswap::SwapBufferToTargetEndian<unsigned int>(unsigned int*, unsigned int*, int) [clone .part.74] [clone .constprop.125]
000e57d0 l     F .text	00000380              void CM_ClipBoxToBrush<false>(TraceInfo_t*, cbrush_t const*)
000e4db0 l     F .text	000002f0              void CM_ClipBoxToBrush<true>(TraceInfo_t*, cbrush_t const*)
000e3760 l     F .text	000003ae              void CM_RecursiveHullCheckImpl<false>(TraceInfo_t*, int, float, float, Vector const&, Vector const&)
000e33d0 l     F .text	0000038e              void CM_RecursiveHullCheckImpl<true>(TraceInfo_t*, int, float, float, Vector const&, Vector const&)
000e9ca0 l     F .text	000000c2              void CM_TraceToDispTree<false>(TraceInfo_t*, CDispCollTree*, float, float)
000e9bc0 l     F .text	000000d2              void CM_TraceToDispTree<true>(TraceInfo_t*, CDispCollTree*, float, float)
000e5b50 l     F .text	000007cb              void CM_TraceToLeaf<false>(TraceInfo_t*, int, float, float)
0030f6b0 l     O .bss	0000000c              void CM_TraceToLeaf<false>(TraceInfo_t*, int, float, float)::tm_fmt
0030f6bc l     O .bss	0000000c              void CM_TraceToLeaf<false>(TraceInfo_t*, int, float, float)::tm_fmt
000e50a0 l     F .text	0000072c              void CM_TraceToLeaf<true>(TraceInfo_t*, int, float, float)
0030f698 l     O .bss	0000000c              void CM_TraceToLeaf<true>(TraceInfo_t*, int, float, float)::tm_fmt
0030f6a4 l     O .bss	0000000c              void CM_TraceToLeaf<true>(TraceInfo_t*, int, float, float)::tm_fmt
001e4580 l     F .text	0000017b              void ConstructStringKeyValuesInternal_Impl<char>(char*, int, char const*, KeyValues*)
001e4700 l     F .text	0000017e              void ConstructStringKeyValuesInternal_Impl<wchar_t>(wchar_t*, int, wchar_t const*, KeyValues*)
001e4200 l     F .text	000001ad              void ConstructStringVArgsInternal_Impl<char>(char*, int, char const*, int, char*)
001e43b0 l     F .text	000001cd              void ConstructStringVArgsInternal_Impl<wchar_t>(wchar_t*, int, wchar_t const*, int, char*)
001c2660 l     F .text	00000091              void CUtlBuffer::GetTypeBin<short>(short&)
00101cb0 l     F .text	0000009c              void SetupArrayProps_R<RecvTable, RecvProp>(RecvTable*)
001006e0 l     F .text	000000ad              void SetupArrayProps_R<SendTable, SendProp>(SendTable*)
001ce4b0 l     F .text	00000121              void std::__adjust_heap<int*, int, int, bool (*)(int const&, int const&)>(int*, int, int, int, bool (*)(int const&, int const&))
000f6a10 l     F .text	0000170f              void TesselateDisplacement_R<CEngineTesselateHelper>(CEngineTesselateHelper*, CVertIndex const&, int, int)
00199510 l     F .text	00000022              void UnserializeLump<StaticPropLump_t>(StaticPropLump_t*, CUtlBuffer&)
0019b920 l     F .text	000000b9              void UnserializeLump<StaticPropLumpV4_t>(StaticPropLump_t*, CUtlBuffer&)
0019b9e0 l     F .text	000000b8              void UnserializeLump<StaticPropLumpV5_t>(StaticPropLump_t*, CUtlBuffer&)
0019baa0 l     F .text	000000bc              void UnserializeLump<StaticPropLumpV6_t>(StaticPropLump_t*, CUtlBuffer&)
001d1d20 l     F .text	00000022              void V_strcpy_safe<128u>(char (&) [128u], char const*)
000c3340 l     F .text	00000015              VOX_AddMyVirtualWords(int, char*, char, CUtlVector<WordBuf, CUtlMemory<WordBuf, int> >&)
000c3360 l     F .text	00000121              VOX_AddNumbers(char*, CUtlVector<WordBuf, CUtlMemory<WordBuf, int> >&)
000c31b0 l     F .text	00000185              VOX_AddRndVirtual(char*, CUtlVector<WordBuf, CUtlMemory<WordBuf, int> >&)
000c3d10 l     F .text	00000278              VOX_AddSentenceWavesToResList()
000c3490 l     F .text	000003ec              VOX_BuildVirtualNameList(char*, CUtlVector<WordBuf, CUtlMemory<WordBuf, int> >&)
002c67d8 l     O .data	00000007              voxcomma
000c4040 l     F .text	000000f8              VOX_CompactSentenceFile()
000c13b0 l     F .text	000000ef              VOX_DeleteWord(int)
000c0e30 l     F .text	000000ae              VOX_GetDirectory(char*, int, char*)
000c14a0 l     F .text	0000005c              VOX_GetMapNameIndex(char const*)
000c11c0 l     F .text	00000023              VOX_GetNextEntnameIndex()
000c3be0 l     F .text	0000012e              VOX_GroupAdd(char const*)
000c1920 l     F .text	00000071              VOX_GroupIndexFromName
000c3f90 l     F .text	000000a4              VOX_GroupInitAllLRUs()
000c19a0 l     F .text	00000034              VOX_GroupNameFromIndex
000c1a70 l     F .text	000000d5              VOX_GroupPick
000c19e0 l     F .text	0000008c              VOX_GroupPickSequential
000c4520 l     F .text	000000fb              VOX_Init
000c1330 l     F .text	0000007d              VOX_InsertWords(int, int, char*, char*, char*)
000c0a90 l     F .text	00000039              VOX_ListClear()
000c1500 l     F .text	00000005              VOX_LoadSound
000c11f0 l     F .text	000000e0              VOX_LookupEntIndex(int, int, bool)
000c1dc0 l     F .text	00000116              VOX_LookupGlobalSeqVirtual(int, int, char*, int)
000c25b0 l     F .text	000000bd              VOX_LookupGlobalVirtual(int, int, char*, int)
000c12d0 l     F .text	00000053              VOX_LookupLastDeadIndex(int)
000c1d60 l     F .text	00000055              VOX_LookupMapnames()
000c2670 l     F .text	0000006b              VOX_LookupMyVirtual(int, char*, char, int)
000c1ee0 l     F .text	00000067              VOX_LookupNumber(char*, int)
000c2000 l     F .text	00000513              VOX_LookupRangeHeadingOrGrid(int, char*, channel_t*, int, char**, char**, char**, int*, bool)
000c2520 l     F .text	0000008c              VOX_LookupRndVirtual(char*)
000c1f50 l     F .text	000000b0              VOX_LookupSectorVirtual(char*)
000c1ca0 l     F .text	000000b9              VOX_LookupSentenceByIndex(char*, int, int*)
000c1ba0 l     F .text	000000fa              VOX_LookupString
000c1870 l     F .text	000000a5              VOX_LRUInit(sentencegroup_t*)
000c1520 l     F .text	00000345              VOX_ParseLineCommands(char*, int)
000c0c00 l     F .text	00000223              VOX_ParseString(char*)
000c0ee0 l     F .text	000002d6              VOX_ParseWordParams(char*, voxword_t*, int)
002d53e0 l     O .bss	00000024              VOX_ParseWordParams(char*, voxword_t*, int)::voxwordDefault
002c67d0 l     O .data	00000008              voxperiod
000c3880 l     F .text	000002b1              VOX_Precache(IEngineSound*, int, char const*)
000c3b40 l     F .text	00000098              VOX_PrecacheSentenceGroup
000c4140 l     F .text	000003d8              VOX_ReadSentenceFile
002d5440 l     O .bss	00000024              vox_reload
000c4620 l     F .text	00000011              VOX_Reload()
000c26e0 l     F .text	00000791              VOX_ReplaceVirtualNames(channel_t*)
000c1b50 l     F .text	0000000a              VOX_SentenceCount
000c1b60 l     F .text	00000033              VOX_SentenceLength
000c2e80 l     F .text	00000020              VOX_SentenceNameFromIndex
000c0ba0 l     F .text	0000002b              VOX_Shutdown
000c4640 l     F .text	00000054              VOX_Touch(char const*, CUtlDict<int, int>&)
000c1510 l     F .text	00000005              VOX_TouchSound(char const*, CUtlDict<int, int>&, CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >&, bool)
000c2ea0 l     F .text	0000030b              VOX_TouchSounds(CUtlDict<int, int>&, CUtlRBTree<ccpair, int, bool (*)(ccpair const&, ccpair const&), CUtlMemory<UtlRBTreeNode_t<ccpair, int>, int> >&, bool)
001f0370 l     F .text	0000020d              V_pretifymem(float, int, bool)
0037d760 l     O .bss	00000004              V_pretifymem(float, int, bool)::current
0037d780 l     O .bss	00000100              V_pretifymem(float, int, bool)::output
001f0580 l     F .text	000001f7              V_pretifynum(long long)
0037d880 l     O .bss	00000004              V_pretifynum(long long)::current
0037d8a0 l     O .bss	00000100              V_pretifynum(long long)::output
001d0100 l     F .text	0000005a              vprof_cachemiss(CCommand const&)
003780a0 l     O .bss	00000024              vprof_cachemiss_command
001cf2b0 l     F .text	0000004c              vprof_cachemiss_Impl()
001d0040 l     F .text	0000005a              vprof_cachemiss_off(CCommand const&)
00378120 l     O .bss	00000024              vprof_cachemiss_off_command
001cf230 l     F .text	00000034              vprof_cachemiss_off_Impl()
001d00a0 l     F .text	0000005a              vprof_cachemiss_on(CCommand const&)
003780e0 l     O .bss	00000024              vprof_cachemiss_on_command
001cf270 l     F .text	00000034              vprof_cachemiss_on_Impl()
001cffe0 l     F .text	0000005a              vprof(CCommand const&)
00378160 l     O .bss	00000024              vprof_command
00377de0 l     O .bss	00000048              vprof_counters
001cf0d0 l     F .text	0000004b              vprof_dump_groupnames(CCommand const&)
00378060 l     O .bss	00000024              vprof_dump_groupnames_command
00377c00 l     O .bss	00000048              vprof_dump_oninterval
00377cc0 l     O .bss	00000048              vprof_dump_spikes
00377d20 l     O .bss	00000048              vprof_dump_spikes_budget_group
00377d80 l     O .bss	00000048              vprof_dump_spikes_node
001cfaf0 l     F .text	00000056              VProfExport_Pause()
001cfb50 l     F .text	0000004e              VProfExport_Resume()
001d0ac0 l     F .text	000000af              VProfExport_SnapshotVProfHistory()
001cfa70 l     F .text	0000007e              VProfExport_StartOrStop()
001cfcb0 l     F .text	0000005a              vprof_generate_report_AI(CCommand const&)
003783a0 l     O .bss	00000024              vprof_generate_report_AI_command
001cf660 l     F .text	000000d6              vprof_generate_report_AI_Impl()
001cfc50 l     F .text	0000005a              vprof_generate_report_AI_only(CCommand const&)
003783e0 l     O .bss	00000024              vprof_generate_report_AI_only_command
001cf570 l     F .text	000000e6              vprof_generate_report_AI_only_Impl()
001cfd70 l     F .text	0000005a              vprof_generate_report_budget(CCommand const&)
00378320 l     O .bss	00000024              vprof_generate_report_budget_command
001cf910 l     F .text	000000f6              vprof_generate_report_budget_Impl()
001cfdd0 l     F .text	0000005a              vprof_generate_report(CCommand const&)
003782e0 l     O .bss	00000024              vprof_generate_report_command
001cfd10 l     F .text	0000005a              vprof_generate_report_hierarchy(CCommand const&)
00378360 l     O .bss	00000024              vprof_generate_report_hierarchy_command
001cf740 l     F .text	000000d6              vprof_generate_report_hierarchy_Impl()
001cf820 l     F .text	000000e6              vprof_generate_report_Impl()
001cfbf0 l     F .text	0000005a              vprof_generate_report_map_load(CCommand const&)
00378420 l     O .bss	00000024              vprof_generate_report_map_load_command
001cf490 l     F .text	000000d6              vprof_generate_report_map_load_Impl()
001cf400 l     F .text	0000008e              vprof_Impl()
001cfef0 l     F .text	0000005a              vprof_off(CCommand const&)
00378220 l     O .bss	00000024              vprof_off_command
001cf360 l     F .text	0000004a              vprof_off_Impl()
001cffb0 l     F .text	00000029              VProfOn()
001cff50 l     F .text	0000005a              vprof_on(CCommand const&)
003781a0 l     O .bss	00000024              vprof_on_command
001cf3b0 l     F .text	0000004e              vprof_on_Impl()
001d2ac0 l     F .text	00000069              vprof_playback_average(CCommand const&)
0037a020 l     O .bss	00000024              vprof_playback_average_command
001d27a0 l     F .text	00000051              VProfPlayback_GetCurrentPercent()
001d2790 l     F .text	0000000a              VProfPlayback_GetCurrentTick()
001d2e00 l     F .text	000006a3              VProfPlayback_SeekToPercent(float)
001d34b0 l     F .text	0000063c              VProfPlayback_SetPlaybackTick(int)
001d4150 l     F .text	00000b45              vprof_playback_start(CCommand const&)
00379f20 l     O .bss	00000024              vprof_playback_start_command
001d2b30 l     F .text	000002b8              VProfPlayback_Step()
001d3af0 l     F .text	0000064a              VProfPlayback_StepBack()
001d4140 l     F .text	00000009              vprof_playback_stepback(CCommand const&)
00379fe0 l     O .bss	00000024              vprof_playback_stepback_command
001d2df0 l     F .text	00000009              vprof_playback_step(CCommand const&)
00379fa0 l     O .bss	00000024              vprof_playback_step_command
001d2500 l     F .text	00000099              vprof_playback_stop(CCommand const&)
00379f60 l     O .bss	00000024              vprof_playback_stop_command
001d2780 l     F .text	0000000f              VProfRecord_IsPlayingBack()
001d26f0 l     F .text	00000089              VProfRecord_Shutdown()
001d2800 l     F .text	000002b9              VProfRecord_Snapshot()
001d2610 l     F .text	0000003d              vprof_record_start(CCommand const&)
00379ea0 l     O .bss	00000024              vprof_record_start_command
001d2650 l     F .text	0000009d              VProfRecord_StartOrStop()
001d2460 l     F .text	00000099              vprof_record_stop(CCommand const&)
00379ee0 l     O .bss	00000024              vprof_record_stop_command
00377c60 l     O .bss	00000048              vprof_report_oninterval
001cfe90 l     F .text	0000005a              vprof_reset(CCommand const&)
00378260 l     O .bss	00000024              vprof_reset_command
001cf0a0 l     F .text	0000002a              vprof_reset_Impl()
001cfe30 l     F .text	0000005a              vprof_reset_peaks(CCommand const&)
003782a0 l     O .bss	00000024              vprof_reset_peaks_command
001cf080 l     F .text	00000020              vprof_reset_peaks_Impl()
001cf1a0 l     F .text	00000081              vprof_vtune_group(CCommand const&)
00378020 l     O .bss	00000024              vprof_vtune_group_command
001f26c0 l     F .text	00000009              V_qsort_s(void*, unsigned int, unsigned int, int (*)(void*, void const*, void const*), void*)
001f17a0 l     F .text	00000177              V_RemoveDotSlashes(char*, char, bool)
001f2000 l     F .text	00000018              V_SetCurrentDirectory(char const*)
001f1380 l     F .text	0000006e              V_SetExtension(char*, char const*, int)
001f0140 l     F .text	0000005b              V_snprintf(char*, int, char const*, ...)
001f0080 l     F .text	0000005b              V_snwprintf(wchar_t*, int, wchar_t const*, ...)
001f28a0 l     F .text	0000012d              V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
001f29d0 l     F .text	00000029              V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
000b56f0 l     F .text	0000001c              VStdAllocator::Alloc(unsigned long)
000b56e0 l     F .text	0000000f              VStdAllocator::Free(void*)
001ef1b0 l     F .text	00000015              _V_strcmp(char const*, int, char const*, char const*)
001ef130 l     F .text	00000015              _V_strcpy(char const*, int, char*, char const*)
001ef400 l     F .text	000000c4              V_stricmp(char const*, char const*)
001f1250 l     F .text	000000a4              V_StripExtension(char const*, char*, int)
001f13f0 l     F .text	0000004b              V_StripFilename(char*)
001f1500 l     F .text	000000ed              V_StripLastDir(char*, int)
001f1210 l     F .text	0000003a              V_StripTrailingSlash(char*)
001efe60 l     F .text	00000009              V_stristr(char*, char const*)
001efd60 l     F .text	000000f2              V_stristr(char const*, char const*)
001f2140 l     F .text	00000041              V_StrLeft(char const*, int, char*, int)
001ef120 l     F .text	0000000f              _V_strlen(char const*, int, char const*)
001ef330 l     F .text	00000061              V_strlower(char*)
001f0270 l     F .text	0000007f              V_strncat(char*, char const*, unsigned int, int)
001effb0 l     F .text	00000041              V_strnchr(char const*, char, int)
001ef5c0 l     F .text	0000005c              V_strncmp(char const*, char const*, int)
001f0000 l     F .text	00000038              V_strncpy(char*, char const*, int)
001ef4d0 l     F .text	000000e6              V_strnicmp(char const*, char const*, int)
001efe70 l     F .text	00000132              V_strnistr(char const*, char const*, int)
001ef3a0 l     F .text	0000005d              V_strnlwr(char*, unsigned int)
001ef160 l     F .text	00000043              _V_strrchr(char const*, int, char const*, char)
001f2190 l     F .text	00000072              V_StrRight(char const*, int, char*, int)
001f2020 l     F .text	00000113              V_StrSlice(char const*, int, int, char*, int)
001ef220 l     F .text	00000015              _V_strstr(char const*, int, char const*, char const*)
001f1db0 l     F .text	000001af              V_StrSubst(char const*, char const*, char const*, char*, int, bool)
001f2210 l     F .text	00000033              V_strtowcs(char const*, int, wchar_t*, int)
001ef2c0 l     F .text	00000061              V_strupr(char*)
000ea670 l     F .text	0000006e              vstr(Vector&)
0022f2c0 l     O .rodata	0000003c              vtable for Base_CmdKeyValues
002588e0 l     O .rodata	00000028              vtable for CAppSystemGroup
002357a0 l     O .rodata	000001f0              vtable for CBaseClient
00236980 l     O .rodata	00000164              vtable for CBaseClientState
00237b60 l     O .rodata	00000110              vtable for CBaseServer
00230010 l     O .rodata	00000010              vtable for CBlockingUDPSocket
002462d8 l     O .rodata	0000000c              vtable for CBrushBSPIterator
0023ca08 l     O .rodata	0000000c              vtable for CBrushConvexInfo
002300e0 l     O .rodata	0000004c              vtable for CBSPTreeData
00252930 l     O .rodata	00000014              vtable for CCallbackBase
00252a20 l     O .rodata	00000014              vtable for CCallback<CSteam3Server, ComputeNewPlayerCompatibilityResult_t, true>
002529c0 l     O .rodata	00000014              vtable for CCallback<CSteam3Server, GSPolicyResponse_t, true>
00252990 l     O .rodata	00000014              vtable for CCallback<CSteam3Server, SteamServerConnectFailure_t, true>
00252960 l     O .rodata	00000014              vtable for CCallback<CSteam3Server, SteamServersConnected_t, true>
002529a8 l     O .rodata	00000014              vtable for CCallback<CSteam3Server, SteamServersDisconnected_t, true>
002529f0 l     O .rodata	00000014              vtable for CCallback<CSteam3Server, ValidateAuthTicketResponse_t, true>
00252948 l     O .rodata	00000014              vtable for CCallbackImpl<1>
002529d8 l     O .rodata	00000014              vtable for CCallbackImpl<20>
00252a08 l     O .rodata	00000014              vtable for CCallbackImpl<24>
00252978 l     O .rodata	00000014              vtable for CCallbackImpl<4>
00237f40 l     O .rodata	00000024              vtable for CChangeFrameList
0023bb98 l     O .rodata	0000000c              vtable for CClientDatatableStack
00254c80 l     O .rodata	00000048              vtable for CClientEngineTools
002380f0 l     O .rodata	00000014              vtable for CClientFrame
00238108 l     O .rodata	00000010              vtable for CClientFrameManager
00238620 l     O .rodata	000001a0              vtable for CClientState
00230230 l     O .rodata	00000018              vtable for CCoreDispInfo
0023a4c0 l     O .rodata	00000020              vtable for CCvarQuery
00257420 l     O .rodata	00000024              vtable for CDataManagerBase
00230500 l     O .rodata	00000024              vtable for CDataManager<CDispCollTree, CDispCollTree*, bool, CThreadFastMutex>
0023c348 l     O .rodata	0000000c              vtable for CDatatableStack
00253f80 l     O .rodata	00000034              vtable for CDedicatedServerAPI
002572c0 l     O .rodata	0000000c              vtable for CDefaultAccessor
00230490 l     O .rodata	0000000c              vtable for CDispCollTree
0023afa0 l     O .rodata	00000078              vtable for CDispInfo
00230248 l     O .rodata	00000018              vtable for CDispUtilsHelper
00257970 l     O .rodata	00000010              vtable for CDllDemandLoader
00257240 l     O .rodata	00000074              vtable for CEmptyConVar
0023c300 l     O .rodata	0000000c              vtable for CEncodeInfo
00254340 l     O .rodata	00000034              vtable for CEngine
0023dbe0 l     O .rodata	0000001c              vtable for CEngineBSPTree
0023c380 l     O .rodata	00000020              vtable for CEngineRecipientFilter
0023cbc0 l     O .rodata	00000074              vtable for CEngineReplay
00250380 l     O .rodata	00000024              vtable for CEngineSingleUserFilter
0023c680 l     O .rodata	00000064              vtable for CEngineSoundServer
0023c900 l     O .rodata	00000064              vtable for CEngineTrace
0023c980 l     O .rodata	00000064              vtable for CEngineTraceServer
0024a830 l     O .rodata	00000018              vtable for CEngineUniformRandomStream
0023e890 l     O .rodata	00000010              vtable for CEntityInfo
0023ca38 l     O .rodata	0000000c              vtable for CEntityListAlongRay
0023e8a0 l     O .rodata	00000010              vtable for CEntityReadInfo
0024d0d8 l     O .rodata	00000010              vtable for CEntityWriteInfo
0023ca48 l     O .rodata	0000000c              vtable for CEnumerationFilter
0023d120 l     O .rodata	00000020              vtable for CFileTransferMgr
002496e0 l     O .rodata	0000000c              vtable for CFmtStrN<128, false>
0023ac40 l     O .rodata	0000000c              vtable for CFmtStrN<256, false>
0024d920 l     O .rodata	00000014              vtable for CFrameSnapshotManager
00243800 l     O .rodata	0000001c              vtable for CFunctor
00250560 l     O .rodata	00000030              vtable for CFunctor2<void (*)(bool, bool), bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
00254420 l     O .rodata	00000054              vtable for CGame
0024cb60 l     O .rodata	00000238              vtable for CGameClient
0023d720 l     O .rodata	00000040              vtable for CGameEvent
0023d760 l     O .rodata	00000040              vtable for CGameEventManager
0023d900 l     O .rodata	0000003c              vtable for CGameEventManagerOld
00250260 l     O .rodata	00000110              vtable for CGameServer
0023e140 l     O .rodata	00000228              vtable for CHLTVClient
0023e700 l     O .rodata	00000190              vtable for CHLTVClientState
0023eaa0 l     O .rodata	0000004c              vtable for CHLTVDemoRecorder
0023f7f8 l     O .rodata	00000014              vtable for CHLTVFrame
0023f820 l     O .rodata	000002a8              vtable for CHLTVServer
00257f50 l     O .rodata	0000001c              vtable for CKeyValuesDumpContextAsDevMsg
0022f140 l     O .rodata	0000003c              vtable for CLC_BaselineAck
0022f100 l     O .rodata	0000003c              vtable for CLC_ClientInfo
0022f300 l     O .rodata	0000003c              vtable for CLC_CmdKeyValues
0022f200 l     O .rodata	0000003c              vtable for CLC_FileCRCCheck
0022f240 l     O .rodata	0000003c              vtable for CLC_FileMD5Check
0022f180 l     O .rodata	0000003c              vtable for CLC_ListenEvents
0022f0c0 l     O .rodata	0000003c              vtable for CLC_Move
0022f1c0 l     O .rodata	0000003c              vtable for CLC_RespondCvarValue
0022f280 l     O .rodata	0000003c              vtable for CLC_SaveReplay
0022f080 l     O .rodata	0000003c              vtable for CLC_VoiceData
0024e4d0 l     O .rodata	00000014              vtable for CLog
002438f0 l     O .rodata	00000010              vtable for CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>
00244108 l     O .rodata	00000010              vtable for CMaterialProxyFactory
00246228 l     O .rodata	00000010              vtable for CMDLCacheNotify
002503c0 l     O .rodata	00000030              vtable for CMemberFunctor0<CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >*, void (CParallelProcessor<CGameClient*, CFuncJobItemProcessor<CGameClient*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00250a00 l     O .rodata	00000030              vtable for CMemberFunctor0<CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >*, void (CParallelProcessor<PackWork_t, CFuncJobItemProcessor<PackWork_t> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00243880 l     O .rodata	00000030              vtable for CMemberFunctor1<CModelRender*, int (CManagedDataCacheClient<CColorMeshData, colormeshparams_t, CColorMeshData*>::*)(memhandle_t__*), memhandle_t__*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
00253f40 l     O .rodata	00000028              vtable for CModAppSystemGroup
00244be0 l     O .rodata	00000100              vtable for CModelInfo
00244ce0 l     O .rodata	00000100              vtable for CModelInfoServer
00246240 l     O .rodata	00000098              vtable for CModelLoader
00243740 l     O .rodata	00000080              vtable for CModelRender
00247c80 l     O .rodata	00000128              vtable for CNetChan
0022fc00 l     O .rodata	0000003c              vtable for CNetMessage
00246d00 l     O .rodata	00000030              vtable for CNetworkStringDict
00246cc0 l     O .rodata	00000030              vtable for CNetworkStringFilenameDict
00246b80 l     O .rodata	0000004c              vtable for CNetworkStringTable
00246be0 l     O .rodata	0000002c              vtable for CNetworkStringTableContainer
00249ca0 l     O .rodata	00000020              vtable for COcclusionSystem
0024b1e0 l     O .rodata	00000020              vtable for COM_IOReadBinary
00257160 l     O .rodata	00000040              vtable for ConCommand
00257120 l     O .rodata	00000034              vtable for ConCommandBase
002571a0 l     O .rodata	00000074              vtable for ConVar
00249f20 l     O .rodata	0000002c              vtable for COverlayMgr
00242600 l     O .rodata	00000018              vtable for CPhoneHome
0023c9e8 l     O .rodata	0000000c              vtable for CPointContentsEnum
002437c0 l     O .rodata	0000002c              vtable for CPooledVBAllocator_ColorMesh
0023c2f0 l     O .rodata	0000000c              vtable for CPropCullStack
0023bb78 l     O .rodata	0000000c              vtable for CPropMapStack
0024a7c0 l     O .rodata	0000001c              vtable for CPureServerWhitelist
002498a0 l     O .rodata	00000060              vtable for CQueuedPacketSender
00251658 l     O .rodata	00000014              vtable for CRConServer
00243840 l     O .rodata	00000030              vtable for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
00243820 l     O .rodata	00000014              vtable for CRefCountServiceBase<true, CRefMT>
00231f20 l     O .rodata	0000003c              vtable for CRegistry
0024aa00 l     O .rodata	0000004c              vtable for CReplayDemoRecorder
0024ac50 l     O .rodata	00000014              vtable for CReplayFrame
0024ac80 l     O .rodata	000001cc              vtable for CReplayServer
002462f8 l     O .rodata	00000018              vtable for CResourcePreloadModel
0023b450 l     O .rodata	00000010              vtable for CSendTablePrecalc
0023bb88 l     O .rodata	0000000c              vtable for CServerDatatableStack
00254ce0 l     O .rodata	00000038              vtable for CServerEngineTools
002510c0 l     O .rodata	00000050              vtable for CServerPlugin
002519e0 l     O .rodata	00000020              vtable for CServerRemoteAccess
0024b5a0 l     O .rodata	000000a4              vtable for CSpatialPartition
0024bce0 l     O .rodata	00000248              vtable for CStaticProp
0024bf40 l     O .rodata	000000e8              vtable for CStaticPropMgr
0023c780 l     O .rodata	0000000c              vtable for CStatTime
00258920 l     O .rodata	00000028              vtable for CSteamAppSystemGroup
0023c9f8 l     O .rodata	0000000c              vtable for CStudioConvexInfo
00254670 l     O .rodata	00000010              vtable for CTestScriptMgr
00254ba0 l     O .rodata	000000d8              vtable for CToolFrameworkInternal
00256880 l     O .rodata	0000000c              vtable for CTouchLinks
0023ca18 l     O .rodata	00000010              vtable for CTraceFilterHitAll
0024c288 l     O .rodata	00000010              vtable for CTraceFilterWorldAndPropsOnly
00256870 l     O .rodata	0000000c              vtable for CTriggerMoved
00253160 l     O .rodata	00000024              vtable for CUploadGameStats
002583d8 l     O .rodata	0000000c              vtable for CUtlCharConversion
002583c8 l     O .rodata	0000000c              vtable for CUtlCStringConversion
002583e8 l     O .rodata	0000000c              vtable for CUtlNoEscConversion
002558c0 l     O .rodata	000001f8              vtable for CVEngineServer
00255ac0 l     O .rodata	000001f8              vtable for CVEngineServer22
00239870 l     O .rodata	00000014              vtable for CVirtualTerrain
00255d08 l     O .rodata	0000001c              vtable for CVoiceServer
0024b560 l     O .rodata	00000038              vtable for CVoxelTree
00256420 l     O .rodata	00000028              vtable for CVProfExport
00258948 l     O .rodata	0000001c              vtable for IAppSystemGroup
0023ccb8 l     O .rodata	00000010              vtable for IBaseInterface
00230140 l     O .rodata	0000003c              vtable for IBSPTreeData
00237f00 l     O .rodata	00000024              vtable for IChangeFrameList
00235a00 l     O .rodata	000000ac              vtable for IClient
00254d60 l     O .rodata	00000048              vtable for IClientEngineTools
00235ae0 l     O .rodata	00000048              vtable for IClientMessageHandler
0024c080 l     O .rodata	000000bc              vtable for IClientRenderable
0024c040 l     O .rodata	00000030              vtable for IClientUnknown
0024c140 l     O .rodata	00000058              vtable for ICollideable
00236ae8 l     O .rodata	00000014              vtable for IConnectionlessPacketHandler
00257218 l     O .rodata	0000001c              vtable for IConVar
0023fb20 l     O .rodata	00000070              vtable for IDemoPlayer
0023eb00 l     O .rodata	00000044              vtable for IDemoRecorder
0023b020 l     O .rodata	00000050              vtable for IDispInfo
00254380 l     O .rodata	00000034              vtable for IEngine
0023cc40 l     O .rodata	00000074              vtable for IEngineReplay
0023c700 l     O .rodata	0000005c              vtable for IEngineSound
00254480 l     O .rodata	00000054              vtable for IGame
0023d7a0 l     O .rodata	00000040              vtable for IGameEvent
00235990 l     O .rodata	00000014              vtable for IGameEventListener2
0023d940 l     O .rodata	0000003c              vtable for IGameEventManager
0023d800 l     O .rodata	00000040              vtable for IGameEventManager2
00251a00 l     O .rodata	00000020              vtable for IGameServerData
0024c028 l     O .rodata	00000018              vtable for IHandleEntity
0023fae0 l     O .rodata	00000038              vtable for IHLTVServer
00257f30 l     O .rodata	0000001c              vtable for IKeyValuesDumpContextAsText
00247e40 l     O .rodata	00000128              vtable for INetChannel
002359c0 l     O .rodata	00000034              vtable for INetChannelHandler
00247dc0 l     O .rodata	00000070              vtable for INetChannelInfo
0022fc40 l     O .rodata	0000003c              vtable for INetMessage
00235ac0 l     O .rodata	00000020              vtable for INetMessageHandler
00246c80 l     O .rodata	00000030              vtable for INetworkStringDict
00246c20 l     O .rodata	00000044              vtable for INetworkStringTable
00246d40 l     O .rodata	0000002c              vtable for INetworkStringTableContainer
00249cc0 l     O .rodata	00000020              vtable for IOcclusionSystem
00249f60 l     O .rodata	0000002c              vtable for IOverlayMgr
002438c0 l     O .rodata	0000002c              vtable for IPooledVBAllocator
0024a7e0 l     O .rodata	0000001c              vtable for IPureServerWhitelist
00249900 l     O .rodata	00000020              vtable for IQueuedPacketSender
002387c0 l     O .rodata	00000020              vtable for IRecipientFilter
002437f0 l     O .rodata	00000010              vtable for IRefCounted
00231f60 l     O .rodata	00000038              vtable for IRegistry
0024ae60 l     O .rodata	00000030              vtable for IReplayServer
00237c80 l     O .rodata	00000094              vtable for IServer
00254d20 l     O .rodata	00000038              vtable for IServerEngineTools
00236b00 l     O .rodata	00000084              vtable for IServerMessageHandler
00251110 l     O .rodata	00000014              vtable for IServerPluginHelpers
00251670 l     O .rodata	00000014              vtable for ISocketCreatorListener
00230180 l     O .rodata	0000000c              vtable for ISpatialLeafEnumerator
0024b660 l     O .rodata	00000094              vtable for ISpatialPartition
0024b700 l     O .rodata	0000009c              vtable for ISpatialPartitionInternal
0024c1e0 l     O .rodata	0000001c              vtable for IStaticPropMgr
0024c200 l     O .rodata	00000044              vtable for IStaticPropMgrClient
0024c1a0 l     O .rodata	00000040              vtable for IStaticPropMgrEngine
0024c260 l     O .rodata	00000028              vtable for IStaticPropMgrServer
00244ee0 l     O .rodata	000000f4              vtable for IVModelInfo
00244de0 l     O .rodata	000000f8              vtable for IVModelInfoClient
00255d28 l     O .rodata	0000001c              vtable for IVoiceServer
0022fb00 l     O .rodata	0000003c              vtable for MM_Checkpoint
0022fa40 l     O .rodata	0000003c              vtable for MM_ClientInfo
0022fa00 l     O .rodata	0000003c              vtable for MM_Heartbeat
0022fb40 l     O .rodata	0000003c              vtable for MM_JoinResponse
0022fb80 l     O .rodata	0000003c              vtable for MM_Migrate
0022fac0 l     O .rodata	0000003c              vtable for MM_Mutelist
0022fa80 l     O .rodata	0000003c              vtable for MM_RegisterResponse
0022f6c0 l     O .rodata	0000003c              vtable for NET_SetConVar
0022f440 l     O .rodata	0000003c              vtable for NET_SignonState
0022f3c0 l     O .rodata	0000003c              vtable for NET_StringCmd
0022f600 l     O .rodata	0000003c              vtable for NET_Tick
00231758 l     O .rodata	00000010              vtable for SendProp
00258728 l     O .rodata	0000001c              vtable for snappy::ByteArraySource
00258710 l     O .rodata	00000018              vtable for snappy::Sink
002586f0 l     O .rodata	0000001c              vtable for snappy::Source
00258748 l     O .rodata	00000018              vtable for snappy::UncheckedByteArraySink
0022f480 l     O .rodata	0000003c              vtable for SVC_BSPDecal
0022f840 l     O .rodata	0000003c              vtable for SVC_ClassInfo
0022f340 l     O .rodata	0000003c              vtable for SVC_CmdKeyValues
0022f740 l     O .rodata	0000003c              vtable for SVC_CreateStringTable
0022f540 l     O .rodata	0000003c              vtable for SVC_CrosshairAngle
0022f900 l     O .rodata	0000003c              vtable for SVC_EntityMessage
0022f500 l     O .rodata	0000003c              vtable for SVC_FixAngle
0022f880 l     O .rodata	0000003c              vtable for SVC_GameEvent
0022f9c0 l     O .rodata	0000003c              vtable for SVC_GameEventList
0022fbc0 l     O .rodata	0000003c              vtable for SVC_GetCvarValue
0022f980 l     O .rodata	0000003c              vtable for SVC_Menu
0022f940 l     O .rodata	0000003c              vtable for SVC_PacketEntities
0022f7c0 l     O .rodata	0000003c              vtable for SVC_Prefetch
0022f380 l     O .rodata	0000003c              vtable for SVC_Print
0022f8c0 l     O .rodata	0000003c              vtable for SVC_SendTable
0022f400 l     O .rodata	0000003c              vtable for SVC_ServerInfo
0022f680 l     O .rodata	0000003c              vtable for SVC_SetPause
0022f4c0 l     O .rodata	0000003c              vtable for SVC_SetView
0022f780 l     O .rodata	0000003c              vtable for SVC_Sounds
0022f800 l     O .rodata	0000003c              vtable for SVC_TempEntities
0022f700 l     O .rodata	0000003c              vtable for SVC_UpdateStringTable
0022f640 l     O .rodata	0000003c              vtable for SVC_UserMessage
0022f5c0 l     O .rodata	0000003c              vtable for SVC_VoiceData
0022f580 l     O .rodata	0000003c              vtable for SVC_VoiceInit
00232288 l     O .rodata	00000010              vtable for VStdAllocator
001f0c90 l     F .text	000000a7              _V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
001f0dd0 l     F .text	000000bc              _V_UCS2ToUTF8(unsigned short const*, char*, int)
001f0d40 l     F .text	0000008b              _V_UnicodeToUCS2(wchar_t const*, int, char*, int)
001f15f0 l     F .text	00000051              V_UnqualifiedFileName(char const*)
001f0e90 l     F .text	0000009b              _V_UTF8ToUCS2(char const*, int, unsigned short*, int)
001f01a0 l     F .text	0000005b              V_vsnprintf(char*, int, char const*, char*)
001f0200 l     F .text	0000006e              V_vsnprintfRet(char*, int, char const*, char*, bool*)
001f00e0 l     F .text	0000005b              V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
001ef1d0 l     F .text	0000004e              _V_wcscmp(char const*, int, wchar_t const*, wchar_t const*)
001ef150 l     F .text	0000000f              _V_wcslen(char const*, int, wchar_t const*)
001ef280 l     F .text	00000040              _V_wcslower(char const*, int, wchar_t*)
001f02f0 l     F .text	0000007f              V_wcsncat(wchar_t*, wchar_t const*, unsigned int, int)
001f0040 l     F .text	0000003e              V_wcsncpy(wchar_t*, wchar_t const*, int)
001f2250 l     F .text	0000002d              V_wcstostr(wchar_t const*, int, char*, int)
001ef240 l     F .text	00000040              _V_wcsupr(char const*, int, wchar_t*)
001bd870 l     F .text	00000052              WarningAndLog(char const*, ...)
00136160 l     F .text	00000014              WatchDogHandler()
001e4190 l     F .text	00000022              wchar_t const* GetTypedKeyValuesString<wchar_t>(KeyValues*, char const*)
001c14a0 l     F .text	000008b7              Win32UploadGameStatsBlocking(TGameStatsParameters const&)
00138c50 l     F .text	000002fc              WorldLightToMaterialLight(dworldlight_t*, LightDesc_t&)
001edb20 l     F .text	000000bb              __wrap_access
001ee230 l     F .text	000000bb              __wrap_chmod
001ee2f0 l     F .text	000000c3              __wrap_chown
001edaf0 l     F .text	00000022              __wrap_creat
001ed790 l     F .text	000000db              __wrap_fopen
001ed870 l     F .text	000000db              __wrap_fopen64
001ed6a0 l     F .text	000000e3              __wrap_freopen
001ee3c0 l     F .text	000000c3              __wrap_lchown
001ee5f0 l     F .text	0000015a              __wrap_link
001edca0 l     F .text	000000bb              __wrap_lstat
001edfc0 l     F .text	000000c3              __wrap___lxstat
001ee160 l     F .text	000000c3              __wrap___lxstat64
001eeec0 l     F .text	000000bb              __wrap_mkdir
001eea60 l     F .text	000000bb              __wrap_mkfifo
001ee750 l     F .text	000000d3              __wrap_mknod
001ee830 l     F .text	0000016d              __wrap_mount
001ed950 l     F .text	000000cb              __wrap_open
001eda20 l     F .text	000000cb              __wrap_open64
001ede30 l     F .text	000000b3              __wrap_opendir
001eee00 l     F .text	000000bb              __wrap_realpath
001eeb20 l     F .text	0000015a              __wrap_rename
001eef80 l     F .text	000000b3              __wrap_rmdir
001edd60 l     F .text	000000cb              __wrap_scandir
001edbe0 l     F .text	000000bb              __wrap_stat
001ee490 l     F .text	0000015a              __wrap_symlink
001ee9a0 l     F .text	000000b3              __wrap_unlink
001eec80 l     F .text	000000bb              __wrap_utime
001eed40 l     F .text	000000bb              __wrap_utimes
001edef0 l     F .text	000000c3              __wrap___xstat
001ee090 l     F .text	000000c3              __wrap___xstat64
000c0770 l     F .text	0000002a              WriteDWord(_IO_FILE*, unsigned long)
000b59c0 l     F .text	00000030              WriteFile(void*, void*, unsigned int, unsigned int*, void*)
001a3a70 l     F .text	00000122              writeid(CCommand const&)
003276c0 l     O .bss	00000024              writeid_command
001a3940 l     F .text	0000012b              writeip(CCommand const&)
00327680 l     O .bss	00000024              writeip_command
001d0850 l     F .text	000001fe              WriteRemoteVProfData()
001d02a0 l     F .text	000005a1              WriteRemoteVProfGroupData(VProfListenInfo_t&)
000c0910 l     F .text	0000017f              WriteWaveFile(char const*, char const*, int, int, int, int)
000c0740 l     F .text	0000002b              WriteWord(_IO_FILE*, unsigned short)
00204650 l     F .text	00000164              X360GammaToLinear(float)
002047c0 l     F .text	000000ba              X360LinearToGamma(float)
00223930 l     F .text	00000012              zcalloc
000b5880 l     F .text	00000015              zcalloc(void*, unsigned int, unsigned int)
00223950 l     F .text	0000000d              zcfree
000b5870 l     F .text	0000000f              zcfree(void*, void*)
002340e0 l     O .rodata	00000028              z_errmsg
0025aa60 g     O .rodata	00000028              z_errmsg
00223910 g     F .text	00000011              zError
000b8390 l     F .text	00000014              zError(int)
000c0280 l     F .text	00000115              ZipAdd(HZIP__*, char const*, void*, unsigned int, unsigned int)
000c03a0 l     F .text	000000a0              ZipGetMemory(HZIP__*, void**, unsigned long*)
00223900 g     F .text	00000006              zlibCompileFlags
002238f0 g     F .text	00000006              zlibVersion
000b8380 l     F .text	0000000a              zlibVersion()
